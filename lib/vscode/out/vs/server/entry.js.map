{"version":3,"sources":["vs/server/fake","vs/server/vs/base/common/performance.js","vs/server/vs/base/node/languagePacks.js","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/assert.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/decorators.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/json.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/severity.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/objects.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/amd.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/console.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/marshalling.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/normalization.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/resources.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/labels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uriIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/decoder.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/macAddress.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/id.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/paths.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/pfs.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/extpath.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/date.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/errorMessage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/common/jsonErrorMessages.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/processes.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensionValidator.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/unix/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/csharpWatcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/win32/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/descriptors.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/graph.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/download/common/download.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/common/environment.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensions/common/extensions.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/files.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/io.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/common/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/log.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/common/fileService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/localizations/node/localizations.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/common/logIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/log/node/spdlogService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/notification/common/notification.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/product.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/environment/node/environmentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/product/common/productService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/registry/common/platform.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configuration.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationModels.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/configuration/common/configurationService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/request.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/common/requestIpc.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/proxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/state.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/state/node/stateService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/storage/common/storage.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/browser/errorTelemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/commonProperties.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/telemetry/node/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/nodeProxy.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/common/telemetry.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/insights.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/logger.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/nls.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/connection.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/protocol.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/util.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/common/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/extensions/node/extensionPoints.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/channel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentFileSystemChannel.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/workbench/services/remote/common/remoteAgentService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/base/node/zip.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/marketplace.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/platform/request/node/requestService.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/code/node/cliProcessMain.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/node/server.ts","vs/server/file:/github/workspace/lib/vscode/src/vs/server/entry.ts"],"names":["sharedObj","__m","__M","deps","result","i","len","length","_factory","MonacoPerformanceMarks","_dataLen","_timeStamp","console","timeStamp","bind","mark","name","push","Date","now","getEntries","entries","startTime","getDuration","from","to","target","endIndex","importEntries","splice","exportEntries","slice","factory","nodeRequire","path","fs","perf","exists","file","Promise","c","rimraf","location","e","lstat","err","stats","then","stat","isDirectory","isSymbolicLink","dir","readdir","files","children","all","map","child","join","rmdir","undefined","unlink","code","readFile","resolve","reject","data","writeFile","content","getNLSConfiguration","commit","userDataPath","metaDataFile","locale","availableLanguages","pseudo","process","env","initialLocale","defaultResult","configs","configFile","JSON","parse","readFileSync","getLanguagePackConfigurations","config","index","lastIndexOf","substring","error","resolveLanguagePackLocale","packConfig","mainPack","hash","translations","fileExists","packId","cacheRoot","coreLocation","translationsConfigFile","corruptedFile","*","_languagePackId","_translationsConfigFile","_cacheRoot","_resolvedLanguagePackCoreLocation","_corruptedFile","corrupted","toDelete","d","utimes","touch","catch","mkdir","recursive","mkdirp","values","metadata","packData","contents","bundles","Object","keys","writes","bundle","modules","create","module","defaultMessages","messages","targetStrings","elem","translatedMessage","key","replace","stringify","exports","ok","value","message","Error","createDecorator","mapFn","descriptor","fnKey","fn","get","memoizeId","createMemoizer","memoizeKeyPrefix","self","warn","memoizeKey","args","this","hasOwnProperty","defineProperty","configurable","enumerable","writable","apply","clear","getOwnPropertyNames","forEach","property","indexOf","memoize","debounce","delay","reducer","initialValueProvider","timerKey","resultKey","clearTimeout","setTimeout","throttle","lastRunKey","pendingKey","Number","MAX_VALUE","nextTime","ErrorHandler","[object Object]","listeners","unexpectedErrorHandler","stack","listener","_removeListener","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","beforeElement","afterElement","n","topStep","m","element","pop","j","remove","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","comparator","comp","groupBy","currentGroup","delta","splices","removed","added","top","sort","topAsync","batch","token","o","min","isCancellationRequested","errors_1","coalesce","filter","coalesceInPlace","move","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","distinctES6","Set","has","add","uniqueFilter","lastIndex","firstOrDefault","notFoundValue","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","unshift","pushToEnd","mapArrayOrNot","items","asArray","getRandomElement","once","_this","didCall","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","first","next","some","predicate","iterables","consume","atMost","POSITIVE_INFINITY","consumed","done","ParseOptions","CharacterCodes","createScanner","text","ignoreTrivia","pos","tokenOffset","scanError","scanHexDigits","count","digits","hexValue","ch","charCodeAt","scanNext","isWhitespace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","contains","node","offset","includeRightBound","visit","visitor","options","DEFAULT","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","onSeparator","onComment","onError","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","needsComma","parseArray","parseObject","parseLiteral","allowEmptyContent","getNodeType","ScanError","SyntaxKind","ParseErrorCode","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","sep","last","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","parseTree","ensurePropertyComplete","endOffset","valueNode","findNodeAtLocation","root","segment","found","propertyNode","getNodePath","getNodeValue","prop","findNodeAtOffset","item","stripComments","replaceCh","kind","parts","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","log","MultiDisposeError","dispose","iterator_1","isDisposable","combinedDisposable","disposables","toDisposable","DisposableStore","_toDispose","_isDisposed","DISABLE_DISPOSED_WARNING","_store","MutableDisposable","_value","ReferenceCollection","references","Map","reference","counter","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","topStack","topCount","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceCancellablePromises","async","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","SequencerByKey","promiseMap","newPromise","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","global","define","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_userAgent","_globals","nodeProcess","vscode","isElectronRenderer","versions","electron","navigator","platform","rawNlsConfig","nlsConfig","resolved","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","platform_1","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","isReadableStream","pause","resume","destroy","every","newWriteableStream","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","Severity","_warning","_warn","_info","fromValue","Warning","Info","Ignore","default","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","condition","assertIsDefined","assertAllDefined","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","parentCandidate","sepOffset","sanitizeFilePath","endsWith","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","line","column","segmentAsNumber","types_1","deepClone","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","safeStringify","getOrDefault","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","Uri","percentDecode","components","uri","pathFragment","newPath","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","getUriFromAmdModule","requirefn","relativePath","uri_1","toUrl","getPathFromAmdModule","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","label","isOneStringArg","consoleArgs","replacer","flags","revive","depth","buffer_1","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","pathname","FileAccess","uriOrModule","moduleIdToUrl","toUri","rewrite","isUri","getOrSet","mapToString","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","val","oldElement","_nodeIterator","_forEach","ResourceMap","mapOrKeyFn","toKey","toStringTag","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","find","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","s","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","originalFSPath","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","getComparisonKey","isEqualAuthority","joinPath","normalizedPath","fromPath","toPath","newURI","a1","a2","fsp","hasTrailingPathSeparator","isRootSep","extUri","extUriBiasedIgnorePathCase","extUriIgnorePathCase","basenameOrAuthority","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","distinctParents","resourceAccessor","candidateResource","otherItem","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","mime","ResourceGlobMatcher","globalExpression","rootExpressions","expressionsByRoot","forUris","glob_1","rootExpression","findSubstr","toLocalResource","localScheme","hasDriveLetter","normalizeDriveLetter","getPathLabel","userHomeProvider","rootProvider","baseResource","getWorkspaceFolder","hasMultipleRoots","getWorkspace","folders","pathLabel","resources_1","rootName","userHome","tildify","getBaseLabel","normalizedUserHomeCached","normalizedUserHome","original","normalized","startsWith","untildify","ellipsis","unc","home","Type","shorten","pathSeparator","shortenedPaths","pathIndex","prefix","subpathLength","subpath","otherPathIndex","isSubpathEnding","subpathWithSep","isOtherPathEnding","template","inVariable","TEXT","VARIABLE","prevSegment","SEPARATOR","mnemonicMenuLabel","forceDisableMnemonics","mnemonicButtonLabel","unmnemonicLabel","splitName","fullPath","parentPath","toJSON","_transformIncomingURIs","transformIncoming","URITransformer","remoteAuthority","DefaultURITransformer","transformOutgoingURIs","_transformOutgoingURIs","transformOutgoing","transformIncomingURIs","transformAndReviveIncomingURIs","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","require","__$__nodeRequire","invalidMacAddresses","validateMacAddress","tempCandidate","getMac","ifaces","os_1","networkInterfaces","infos","info","mac","machineId","virtualMachineHint","_virtualMachineOUIs","forStrings","vmOui","interfaceCount","interfaces","_isVirtualMachineMacAdress","getMachineId","crypto","resolve_1","reject_1","macAddress","macAddress_1","createHash","update","digest","getMacMachineId","uuid","pathsPath","asFileUri","getAppDataPath","getDefaultUserDataPath","RimRafMode","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","chmod","util_1","promisify","handleDirectoryChildren","readdirSync","normalization_1","oldPath","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","writeFilePathQueues","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","realcaseSync","pfs_1","ix","realpath","access","constants","R_OK","realpathSync","accessSync","doWatchNonRecursive","onChange","originalFileName","mapPathToStatDisposable","watcherDisposables","disposable","watcher","fs_1","watch","removeAllListeners","folderChildren","raw","changedFileName","changedFilePath","statDisposable","timeoutHandle","CHANGE_BUFFER_DELAY","watchFile","watchFolder","State","DataType","requestTypeToStr","responseTypeToStr","RequestType","ResponseType","BufferReader","bytes","BufferWriter","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","logger","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","msgLength","send","logOutgoing","header","body","sendBuffer","logIncoming","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","listen","timeoutTimer","requests","RequestInitiator","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","doRequest","sendRequest","uninitializedPromise","Idle","whenInitialized","cancellationTokenListener","onResponse","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","ipcLogger","getNextTickChannel","didTick","propertyIsEvent","StaticRouter","hub","route","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","properties","methodArgs","colorTables","prettyWithoutArrays","logWithColors","direction","req","initiator","pretty","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","_totalIncoming","_totalOutgoing","requestId","emptyBuffer","getEmptyBuffer","ChunkStream","_chunks","_totalLength","buff","byteCount","_read","advance","resultOffset","chunkIndex","chunkPart","ProtocolMessageType","ProtocolConstants","ProtocolMessage","ack","writtenTime","ProtocolReader","socket","_onMessage","_register","readHead","readLen","messageType","_socket","_incomingData","onData","acceptChunk","lastReadTime","ProtocolWriter","lastWriteTime","drain","_writeNow","_writeSoon","head","wasEmpty","_bufferAdd","_bufferTake","Protocol","_onClose","onClose","_socketWriter","_socketReader","Client","ipc_1","getSocket","sendDisconnect","BufferedEmitter","_hasListeners","_isDeliveringMessages","_bufferedMessages","_deliverMessages","QueueElement","resultLen","it","LoadEstimator","lastRuns","_HISTORY_LENGTH","historyLimit","score","load","PersistentProtocol","initialChunk","_loadEstimator","_onControlMessage","onControlMessage","_onSocketClose","onSocketClose","_onSocketTimeout","onSocketTimeout","_isReconnecting","_outgoingUnackMsg","_outgoingMsgId","_outgoingAckId","_outgoingAckTimeout","_incomingMsgId","_incomingAckId","_incomingMsgLastTime","_incomingAckTimeout","_outgoingKeepAliveTimeout","_incomingKeepAliveTimeout","_socketDisposables","_receiveMessage","_sendKeepAliveCheck","_recvKeepAliveCheck","unacknowledgedCount","timeSinceLastOutgoingMsg","timeSinceLastIncomingMsg","hasHighLoad","initialDataChunk","flushBuffer","toSend","_recvAckCheck","peek","_sendAckCheck","readEntireBuffer","_sendAck","oldestUnacknowledgedMsg","timeSinceOldestUnacknowledgedMsg","NodeSocket","_listener","off","bufferSize","Constants","ReadState","WebSocketNodeSocket","_onData","mask","ipc_net_1","_acceptChunk","onEnd","headerLen","secondByte","hasMask","unmask","cnt","v","bytesLeft","m3","m2","m1","xdgRuntimeDir","generateRandomPipeName","randomSuffix","Server","server","toClientConnectionEvent","onConnection","serve","net_1","createServer","connect","clientId","createConnection","fromSocket","nls","minute","hour","day","week","month","year","fromNow","date","appendAgoLabel","seconds","nls_1","localize","toLocalISOString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toFixed","exceptionToErrorMessage","exception","verbose","detectSystemErrorMessage","stackToString","errno","syscall","toErrorMessage","arrays","types","detail","getParseErrorMessage","errorCode","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","useExec","cc","ee","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","withExtension","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","ExtensionHostDebugBroadcastChannel","_onCloseEmitter","_onReloadEmitter","_onTerminateEmitter","_onLogToEmitter","_onAttachEmitter","sessionId","subId","ChannelName","ExtensionHostDebugChannelClient","onReload","onAttachSession","onLogToSession","onTerminateSession","debugRenderer","transformIncomingURI","transformIncomingExtension","uriIpc_1","manifest","transformed","transformOutgoingExtension","transformOutgoingURI","ExtensionManagementChannel","getUriTransformer","onInstallExtension","onDidInstallExtension","onUninstallExtension","onDidUninstallExtension","uriTransformer","local","zip","unzip","install","getManifest","canInstall","installFromGallery","uninstall","reinstallFromGallery","getInstalled","extensions","updateMetadata","getExtensionsReport","ExtensionManagementChannelClient","zipLocation","vsix","force","ExtensionTipsChannel","getConfigBasedTips","getImportantExecutableBasedTips","getOtherExecutableBasedTips","getAllWorkspacesTips","nlsRegex","localizeManifest","VERSION_REGEXP","isValidVersionStr","version","parseVersion","hasCaret","hasGreaterEquals","majorBase","majorMustEqual","minorBase","minorMustEqual","patchBase","patchMustEqual","preRelease","normalizeVersion","isMinimum","isValidVersion","_version","_desiredVersion","desiredVersion","desiredMajorBase","desiredMinorBase","desiredPatchBase","isVersionValid","currentVersion","requestedVersion","notices","isValidExtensionVersion","extensionDesc","isBuiltin","main","engines","isEngineValid","engine","FileWatcher","onDidFilesChange","onLogMessage","verboseLogging","isDisposed","restartCounter","startWatching","ipc_cp_1","AMD_ENTRYPOINT","PIPE_LOGGING","VERBOSE_LOGGING","MAX_RESTARTS","setVerboseLogging","onDidChangeFile","onDidLogMessage","setFolders","setRoots","watcherOptions","init","OutOfProcessWin32FolderWatcher","watchedFolder","ignored","eventCallback","logCallback","glob","startWatcher","decoder","rawEvents","eventParts","changeType","absolutePath","ignore","changeTypeMap","folder","csharpWatcherService_1","excludes","onFileEvents","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","createSyncDescriptor","incoming","outgoing","Graph","_hashFn","_nodes","fromNode","lookupOrInsertNode","toNode","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","serviceId","serviceIds","getServiceDependencies","IInstantiationService","serviceIdentifier","IDownloadService","instantiation_1","IEnvironmentService","INativeEnvironmentService","LogsDataCleaner","environmentService","cleanUpOldLogsSoon","currentLog","logsPath","logsRoot","oldSessions","__decorate","__param","environment_1","EXTENSION_IDENTIFIER_PATTERN","EXTENSION_IDENTIFIER_REGEX","isIExtensionIdentifier","SortBy","SortOrder","StatisticType","InstallOperation","IExtensionGalleryService","INSTALL_ERROR_NOT_SUPPORTED","INSTALL_ERROR_MALICIOUS","INSTALL_ERROR_INCOMPATIBLE","ExtensionManagementError","IExtensionManagementService","DISABLED_EXTENSIONS_STORAGE_PATH","ENABLED_EXTENSIONS_STORAGE_PATH","IGlobalExtensionEnablementService","IExtensionTipsService","DefaultIconPath","asBrowserUri","ExtensionsLabel","ExtensionsLocalizedLabel","ExtensionsChannelId","PreferencesLabel","PreferencesLocalizedLabel","MANIFEST_CACHE_FOLDER","USER_MANIFEST_CACHE_FILE","BUILTIN_MANIFEST_CACHE_FILE","EXTENSION_CATEGORIES","ExtensionType","ExtensionIdentifier","_lower","aValue","bValue","isLanguagePackExtension","contributes","localizations","isAuthenticaionProviderExtension","authentication","IBuiltinExtensionsScannerService","areSameExtensions","ExtensionIdentifierWithVersion","identifier","adoptToGalleryExtensionId","toLocaleLowerCase","getGalleryExtensionId","publisher","groupByExtension","getExtensionIdentifier","byExtension","findGroup","getLocalExtensionTelemetryData","galleryId","publisherId","publisherName","publisherDisplayName","dependencies","extensionDependencies","getGalleryExtensionTelemetryData","telemetryData","BetterMergeId","extensions_1","getMaliciousExtensionsSet","report","malicious","ExtensionsManifestCache","extensionsManagementService","extensionsManifestCache","onDidUnInstallExtension","invalidate","pfs","FileSystemProviderErrorCode","IFileService","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","checkForChangeType","getOfType","hasType","filterFn","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","BinarySize","KB","MB","GB","TB","throwIfCancelled","throwIfTooLarge","totalBytesRead","limits","memory","files_1","readFileIntoStream","bytesRead","allowedRemainingBytes","posInFile","posInBuffer","lastChunkLength","doReadFileIntoStream","errorTransformer","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","fileChangesDelayer","watcher_2","fileChangesBuffer","pathToWatch","eventType","onFileChange","onVerbose","fileChanges","normalizedFileChanges","watcher_1","ServiceCollection","_entries","instanceOrDescriptor","_enableTracing","CyclicDependencyError","graph","InstantiationService","services","serviceCollection_1","strict","_services","_parent","_trace","Trace","traceInvocation","_done","isOptional","_getOrCreateServiceInstance","stop","ctorOrDescriptor","rest","descriptors_1","traceCreation","_createInstance","serviceDependencies","serviceArgs","dependency","firstServiceArgPos","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","_createAndCacheServiceInstance","branch","desc","graph_1","cycleCount","insertEdge","roots","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","TraceType","_start","_dep","_None","dur","_totals","causedCreation","lines","printChild","trace","nested","ILocalizationsService","isValidLocalization","localization","languageId","translation","languageName","localizedLanguageName","toISOString","LogLevel","ILogService","ILoggerService","DEFAULT_LOG_LEVEL","AbstractLogService","level","_onDidChangeLogLevel","onDidChangeLogLevel","ConsoleLogMainService","logLevel","setLevel","useColors","getLevel","Debug","Critical","ConsoleLogService","LogServiceAdapter","adapter","consoleLog","extractMessage","errorMessage_1","ConsoleLogInMainService","MultiplexLogService","logServices","logService","critical","DelegatedLogService","NullLogService","getLogLevel","Off","ExtensionIdVersionRegex","ExtensionsDownloader","extensionGalleryService","extensionsDownloadDir","extensionsDownloadPath","cleanUpPromise","cleanUp","getName","download","folderStat","resolveMetadata","extensionManagementUtil_1","semver","rcompare","del","extensionManagement_1","log_1","ExtensionsLifecycle","processesLimiter","script","parseScript","runLifecycleHook","getExtensionStoragePath","scriptKey","lifecycleHook","lifecycleType","extensionLifecycleProcess","onexit","uninstallHook","opts","silent","extensionUninstallProcess","setEncoding","onStdout","onStderr","onOutput","onDebouncedOutput","groupEnd","globalStorageHome","FileService","BUFFER_SIZE","_onDidChangeFileSystemProviderRegistrations","_onWillActivateFileSystemProvider","onWillActivateFileSystemProvider","_onDidChangeFileSystemProviderCapabilities","onDidChangeFileSystemProviderCapabilities","_onDidRunOperation","onDidRunOperation","_onError","_onDidFilesChange","activeWatchers","writeQueues","providerDisposables","getExtUri","onDidChangeCapabilities","onDidErrorOccur","joiners","capability","resourceForError","activateProvider","withProvider","doResolveFile","resolveTo","resolveSingleChildDescendants","trie","toFileStat","Boolean","findSuperstr","recurse","labels_1","File","Directory","SymbolicLink","ctime","resolvedEntries","childResource","childStat","toResolve","doValidateCreateFile","bufferOrReadableOrStream","throwIfFileSystemIsReadonly","withWriteProvider","bufferOrReadableOrStreamOrBufferedStream","validateWriteFile","stream_1","doWriteUnbuffered","doWriteBuffered","withReadProvider","doReadAsFileStream","preferUnbuffered","cancellableSource","statPromise","validateReadFile","fileStreamPromise","readFileUnbuffered","readFileStreamed","readFileBuffered","fileStream","readFileStream","io_1","validateReadFileLimits","tooLargeErrorResult","doCanMoveCopy","sourceProvider","targetProvider","doValidateMoveCopy","doMoveCopy","isSameResourceWithDifferentPathCase","sourceFile","doCopyFolder","doPipeBuffered","doPipeBufferedToUnbuffered","doPipeUnbufferedToBuffered","doPipeUnbuffered","sourceFolder","targetFolder","sourceChild","targetChild","isPathCaseSensitive","directory","directoriesToCreate","doValidateDelete","useTrash","watchDisposed","watchDisposable","doWatch","toWatchKey","writeQueue","readableOrStreamOrBufferedStream","ensureWriteQueue","doWriteStreamBufferedQueued","doWriteReadableBufferedQueued","streamOrBufferedStream","doWriteBuffer","totalBytesWritten","doWriteUnbufferedQueued","doPipeBufferedQueued","sourceHandle","targetHandle","doPipeUnbufferedQueued","doPipeUnbufferedToBufferedQueued","DiskFileSystemProvider","mapHandleToPos","writeHandles","_onDidWatchErrorOccur","_onDidChangeFile","recursiveFoldersToWatch","recursiveWatchRequestDelayer","_capabilities","toFilePath","toType","birthtime","toFileSystemProviderError","filePath","normalizedPos","normalizePos","updatePos","bytesLength","lastKnownPos","doWrite","bytesWritten","doDelete","fromFilePath","validateTargetDeleted","watchRecursive","watchNonRecursive","folderToWatch","refreshRecursiveWatchers","doRefreshRecursiveWatchers","recursiveWatcher","watcherService_3","watcherImpl","_b","usePolling","watcherService_1","_c","watcherService_2","recursiveWatcherLogLevelListener","watcherService","watcherService_4","logLevelListener","LocalizationsService","extensionManagementService","_onDidLanguagesChange","onDidLanguagesChange","LanguagePacksCache","getLanguagePacks","languagePacks","languages","extensionIdentifier","installed","updated","languagePacksFilePath","languagePacksFileLimiter","initializedCache","withLanguagePacks","createLanguagePacksFromExtensions","createLanguagePacksFromExtension","updateHash","localizationContribution","localizations_1","languagePack","extensionInLanguagePack","md5","crypto_1","LoggerChannel","consoleFn","LoggerChannelClient","FollowerLogService","createRotatingLogger","filename","filesize","filecount","SpdLogService","logsFolder","_loggerCreationPromise","_createSpdLogLogger","_logger","processName","_spdlog","setAsyncMode","logfilePath","createRotatingLoggerAsync","createSpdLogLogger","_log","disposeLogger","drop","severity_1","INotificationService","NeverShowAgainScope","NotificationsFilter","NoOpNotification","progress","NoOpProgress","onDidClose","onDidChangeVisibility","actions","product","nameShort","nameLong","applicationName","dataFolderName","urlProtocol","reportIssueUrl","licenseName","licenseUrl","extensionAllowedProposedApi","rawProductConfiguration","rootPath","pkg","process_1","NativeEnvironmentService","_args","date_1","appRoot","homedir","vscodePortable","parseUserDataDir","appSettingsHome","tmpDir","userRoamingDataHome","settingsResource","resources","userDataSyncHome","userDataSyncLogResource","machineSettingsResource","workspaceStorageHome","keybindingsResource","keyboardLayoutResource","argvResource","product_1","snippetsHome","isExtensionDevelopment","extensionDevelopmentPath","backupHome","backupWorkspacesPath","untitledWorkspacesHome","installSourcePath","builtinExtensionsPath","fromArgs","parsePathArg","extensionsPath","vscodeExtensions","extraExtensionPaths","extraBuiltinExtensionPaths","extensionDevelopmentLocationURI","extensionTestsLocationURI","extensionTestsPath","disableExtensions","debugExtensionHost","parseExtensionHostPort","isBuilt","mainIPCHandle","getIPCHandle","sharedIPCHandle","nodeCachedDataDir","serviceMachineIdResource","disableUpdates","crashReporterId","crashReporterDirectory","driverHandle","driverVerbose","disableTelemetry","sandbox","decorators_1","safeIpcPathLengths","2","1","getWin32IPCHandle","scope","getNixIPCHandle","isBuild","parseDebugPort","debugId","debugArg","debugBrkArg","defaultBuildPort","break","parseSearchPort","IProductService","Registry","Assert","Extensions","JSONContribution","jsonContributionRegistry","_onDidChangeSchema","onDidChangeSchema","schemasById","unresolvedSchemaContent","schemas","Configuration","ConfigurationScope","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","as","jsonContributionRegistry_1","overrideIdentifierFromKey","getDefaultValue","OVERRIDE_PROPERTY_PATTERN","configurationRegistry","overrideIdentifiers","_onDidSchemaChange","onDidSchemaChange","_onDidUpdateConfiguration","onDidUpdateConfiguration","defaultValues","defaultLanguageConfigurationOverridesNode","title","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","excludedConfigurationProperties","registerSchema","configuration","validate","registerConfigurations","configurations","validateAndRegisterProperties","registerJSONConfiguration","deregisterConfiguration","removeFromSchema","allOf","defaultConfigurations","defaultConfiguration","description","$ref","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","updateOverridePropertyPatternKey","overrideIdentifier","propertyKeys","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","getConfigurationProperties","getScopes","scopes","toValuesTree","conflictReporter","addToValueTree","settingsTreeRoot","curr","getConfigurationValue","settingPath","component","accessSetting","keyFromOverrideIdentifier","IConfigurationService","isConfigurationOverrides","ConfigurationTarget","ConfigurationTargetToString","configurationTarget","value1","value2","overrides","byOverrideIdentifier","override","identifiers","toOverridesByIdentifier","fromOverridesByIdentifier","configurationRegistry_1","fromOverride","toOverride","toOverrides","overrideRaw","keyInOverrideRaw","removeFromValueTree","valueTree","doRemoveFromValueTree","getConfigurationKeys","getDefaultValues","valueTreeRoot","getMigratedSettingValue","configurationService","currentSettingName","legacySettingName","setting","inspect","legacySetting","userValue","workspaceValue","workspaceFolderValue","ConfigurationModel","_contents","_keys","_overrides","checkAndFreeze","section","configuration_1","overrideContents","getContentsForOverrideIdentifer","contentsForKey","overrideContentsForKey","mergeContents","others","otherOverride","addKey","removeKey","DefaultConfigurationModel","ConfigurationModelParser","_name","_scopes","_raw","_configurationModel","_parseErrors","configurationModel","doParseContent","parseRaw","doParseRaw","parseErrors","json","filterByScope","filterOverriddenProperties","getScope","propertySchema","UserSettings","userSettingsResource","_onDidChange","onDidChange","parser","parseContent","_defaultConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidateConfigurationModel","getValue","memoryConfiguration","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","memoryValue","getOverrideValue","user","userLocal","userRemote","workspaceFolder","workspaceConfiguration","folderConfigurations","defaults","fromKeys","getKeysForOverrideIdentifier","toKeys","updateDefaultConfiguration","updateLocalUserConfiguration","updateRemoteUserConfiguration","updateWorkspaceConfiguration","folderConfiguration","currentFolderConfiguration","updateFolderConfiguration","folderConfig","deleteFolderConfiguration","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","memoryConfigurationForResource","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguraiton","parseConfigurationModel","model","mergeChanges","keysSet","overridesMap","ConfigurationChangeEvent","currentConfiguraiton","currentWorkspace","_previousConfiguration","affectedKeys","affectedKeysTree","previousConfiguration","doesAffectedKeysTreeContains","requestedTree","AllKeysConfigurationChangeEvent","sourceConfig","allKeys","ConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","configurationModels_1","reloadConfigurationScheduler","reloadConfiguration","onDidDefaultConfigurationChange","loadConfiguration","toData","onDidChangeUserConfiguration","userConfigurationModel","compareAndUpdateLocalUserConfiguration","compareAndUpdateDefaultConfiguration","configurationChange","getTargetConfiguration","isSuccess","statusCode","hasNoContent","IRequestService","asText","asJson","registerConfiguration","order","http.proxy","markdownDescription","http.proxyStrictSSL","http.proxyAuthorization","http.proxySupport","enum","enumDescriptions","http.systemCertificates","RequestChannel","headers","RequestChannelClient","getProxyAgent","rawRequestURL","requestURL","url_1","proxyURL","proxyUrl","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getSystemProxyURI","proxyEndpoint","hostname","auth","rejectUnauthorized","strictSSL","resolve_2","reject_2","getServiceMachineId","storageService","store","IStateService","FileStorage","dbPath","_database","lastFlushedSerializedDatabase","database","loadSync","loadAsync","saveSync","serializedDatabase","StateService","fileStorage","STATE_FILE","getItem","setItem","WillSaveStateReason","IS_NEW_KEY","IStorageService","StorageScope","InMemoryStorageService","_onDidChangeStorage","onDidChangeStorage","_onWillSaveState","onWillSaveState","globalCache","workspaceCache","fallbackValue","getCache","valueStr","logStorage","toWorkspace","reason","NONE","globalPath","workspacePath","safeParse","globalItems","globalItemsParsed","workspaceItems","workspaceItemsParsed","globalValues","table","workspaceValues","ErrorEvent","callstack","BaseErrorTelemetry","telemetryService","flushDelay","ERROR_FLUSH_TIMEOUT","_flushHandle","_disposables","_telemetryService","_flushDelay","unbind","Errors","addListener","_onErrorEvent","installErrorListeners","_flushBuffer","_enqueue","publicLogError2","ErrorTelemetry","errorTelemetry_1","oldOnError","onerror","_onUncaughtError","uncaught_error_name","uncaught_error_msg","ITelemetryService","instanceStorageKey","currentSessionDateStorageKey","firstSessionDateStorageKey","lastSessionDateStorageKey","machineIdKey","Flags","FilterType","AssetType","Icon","Details","Changelog","Manifest","VSIX","License","Repository","PropertyType","Dependency","ExtensionPack","Engine","LocalizedLanguages","WebExtension","DefaultQueryState","pageNumber","pageSize","sortBy","sortOrder","criteria","assetTypes","Query","filterType","f","filters","searchText","criterium","SearchText","getStatistic","statistics","statisticName","getCoreTranslationAssets","assetType","asset","getVersionAsset","getRepositoryAsset","gitRegExp","fallbackUri","getDownloadAsset","fallbackAssetUri","getIconAsset","assetUri","getExtensions","getEngine","getLocalizedLanguages","getIsWebExtension","webExtensionProperty","getWebResource","toExtension","galleryExtension","querySource","assets","readme","changelog","license","repository","icon","coreTranslations","extensionName","extensionId","lastUpdated","displayName","shortDescription","installCount","rating","ratingCount","webResource","extensionPack","localizedLanguages","webExtension","preview","ExtensionGalleryService","requestService","productService","extensionsGallery","extensionsGalleryUrl","serviceUrl","extensionsControlUrl","controlUrl","commonHeadersPromise","resolveMarketplaceHeaders","getCompatibleExtensionByEngine","extensionValidator_1","withFlags","IncludeAssetUri","IncludeStatistics","IncludeFiles","IncludeVersionProperties","withPage","withFilter","Target","ExtensionId","ExtensionName","galleryExtensions","queryGallery","rawExtension","versionAsset","rawVersion","getLastValidExtensionVersion","isEnabled","names","publicLog2","IncludeLatestVersionOnly","quotedCategory","category","Category","quotedTag","tag","Tag","Featured","withSortBy","ids","withSortOrder","total","firstPage","getPage","pageIndex","ct","nextPageQuery","ExcludeNonValidated","ExcludeWithFlags","flagsToString","Unpublished","commonHeaders","Content-Type","Accept","Accept-Encoding","Content-Length","url","api","request_1","resultCount","resultMetadata","metadataType","metadataItems","operationParam","downloadAsset","getAsset","duration","publicLog","compatible","IncludeVersions","fallbackUrl","firstOptions","fallbackOptions","getLastValidExtensionVersionFromProperties","getLastValidExtensionVersionRecursively","manifestAsset","slow","X-Market-Client-Id","User-Agent","serviceMachineId_1","telemetry_1","productService_1","storage_1","TelemetryService","_configurationService","_experimentProperties","_cleanupPatterns","_appender","appender","_commonProperties","commonProperties","_piiPaths","piiPaths","_userOptIn","_enabled","sendErrorTelemetry","piiPath","_updateUserOptIn","optIn","isHashedId","usingFallbackGuid","TELEMETRY_SECTION_ID","enableTelemetry","isOptedIn","instanceId","msftInternal","anonymizeFilePaths","_cleanupInfo","errorEventName","publicLogError","updatedStack","cleanUpIndexes","nodeModulesRegex","fileRegex","y","IDLE_START_EVENT_NAME","IDLE_STOP_EVENT_NAME","telemetry.enableTelemetry","tags","NullTelemetryService","combinedAppender","appenders","NullAppender","LogAppender","_logService","commonPropertiesRegex","strippedData","flattenKeys","flatKeys","configurationTelemetry","configurationSource","configurationKeys","validateTelemetryData","measurements","flat","cleanRemoteAuthority","AppInsightsAppender","_eventPrefix","_defaultData","aiKeyOrClientFactory","_aiClient","aiKey","appInsights","defaultClient","TelemetryClient","setUseDiskRetryCaching","setup","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoDependencyCorrelation","setAutoCollectConsole","setInternalLogging","endpointUrl","getClient","telemetryUtils_1","trackEvent","resolveCommonProperties","msftInternalDomains","release","domainList","domain","msftDomain","verifyMicrosoftInternalDomain","seq","defineProperties","timestamp","common.timesincesessionstart","common.sequence","SNAP","SNAP_REVISION","buildTelemetryMessage","mergedTelemetry","mergeTelemetry","dirName","dirs","statSync","telemetryJsonFolders","INodeProxyService","NodeProxyChannel","NodeProxyChannelClient","TelemetryChannel","setEnabled","getTelemetryInfo","setExperimentProperty","TelemetryChannelClient","Channel","_sender","cpus","cores","memoryFree","freemem","memoryTotal","totalmem","userInfo","TELEMETRY_URL","logger_1","named","metadataPath","amd_1","isInternalConfiguration","DefaultConfiguration","getNlsConfiguration","util","lp","_languagePackSupport","getTranslations","getLocaleFromConfig","localeConfigUri","_m1","_m2","m4","length_1","Connection","offline","_offline","doReconnect","doDispose","ManagementConnection","setOffline","getUnderlyingSocket","beginAcceptReconnection","endAcceptReconnection","ExtensionHostConnection","environment","sendInitMessage","skipWebSocketFrames","proc","VSCODE_EXTHOST_WILL_SEND_SOCKET","VSCODE_HANDLES_UNCAUGHT_ERRORS","VSCODE_LOG_STACK","VSCODE_LOG_LEVEL","LOG_LEVEL","VSCODE_NLS_CONFIG","ipc_net_2","rawMessage","authenticate","_message","sendMessage","sendControl","encodePath","Translations","aKeys","bKeys","Logger","messageHandler","_messageHandler","notification_1","MANIFEST_FILE","ExtensionManifestHandler","ourVersion","absoluteFolderPath","isUnderDevelopment","_ourVersion","_absoluteFolderPath","_isBuiltin","_isUnderDevelopment","_absoluteManifestPath","ExtensionManifestParser","manifestContents","__metadata","jsonErrorMessages_1","ExtensionManifestNLSReplacer","_nlsConfig","extensionDescription","reportErrors","localized","reportInvalidFormat","translationId","localizedMessages","translationPath","translationBundle","package","findMessageBundles","messageBundle","messageBundleContent","resolveOriginalMessageBundle","_replaceNLStrings","originalMessageBundle","originalBundleContent","devMode","toCheck","literal","originalMessages","messageScope","processEntry","messageKey","ExtensionManifestValidator","_extensionDescription","isValidExtensionDescription","extensionLocation","extensionFolderPath","baseIsValidExtensionDescription","valid","_isStringArray","activationEvents","browser","normalizedAbsolutePath","ExtensionScannerInput","tanslations","extensionPoints_1","DefaultExtensionResolver","ExtensionScanner","replaceNLS","resolver","obsolete","obsoleteFileContents","refs","resolveExtensions","ref","createNLSConfig","_extensionDescriptions","scanExtension","extensionDescriptions","scanExtensions","builtinExtensions","extraBuiltinExtensions","resultMap","resultArr","aLastSegment","bLastSegment","Watcher","diskFileSystemProvider_1","watches","w","FileProviderChannel","watchers","filechange","session","cts","unwatch","_watch","requestResourcePath","ExtensionEnvironmentChannel","telemetry","getEnvironmentData","getDiagnosticInfo","logTelemetry","flushTelemetry","settingsPath","extensionHostLogsPath","scanMultiple","VSCODE_DEV","scanBuiltin","scanInstalled","allExtensions","uniqueExtensions","multipleExtensions","extensionKind","NodeProxyService","_serviceBrand","_$onMessage","$onMessage","_onDown","onDown","_onUp","onUp","node_browser_1","REMOTE_FILE_SYSTEM_CHANNEL_NAME","RemoteFileSystemProvider","remoteAgentService","_onDidChangeCapabilities","getConnection","setCaseSensitive","remoteAgentEnvironment","getEnvironment","registerListeners","eventsOrError","isCaseSensitive","dataOrErrorOrEnd","RemoteExtensionLogFileName","IRemoteAgentService","ExtractError","cause","toExtractError","extractZip","zipfile","targetPath","extractedEntriesCount","readNextEntry","readEntry","entryCount","sourcePathRegex","fileName","targetFileName","openZipStream","attr","externalFileAttributes","modeFromEntry","targetDirName","istream","extractEntry","openZip","zipFile","lazy","yauzl_1","lazyEntries","openReadStream","zipPath","yazl","ZipFile","addBuffer","localPath","addFile","zipStream","outputStream","extract","sourcePath","zip_1","ExtensionsScanner","beforeRemovingExtension","_devSystemExtensionsPath","systemExtensionsPath","uninstalledPath","uninstalledFileLimiter","removeUninstalledExtensions","removeOutdatedExtensions","scanSystemExtensions","joinErrors","scanUserExtensions","excludeOutdated","uninstalled","getUninstalledExtensions","scanAllUserExtensions","scanExtensionsInDirs","identifierWithVersion","folderName","tempPath","extensionPath","extractAtLocation","setMetadata","isMachineScoped","manifestPath","parseManifest","withUninstalledExtensions","removeExtension","extractPath","renamePath","retryUntil","systemExtensionsPromise","scanDefaultSystemExtensions","devSystemExtensionsPromise","scanDevSystemExtensions","systemExtensions","devSystemExtensions","limiter","extensionsFolders","extensionFolder","readManifest","readmeUrl","changelogUrl","devSystemExtensionsList","getDevSystemExtensionsList","scanExtensionsInDir","devSystemExtensionsPath","toRemove","removeUninstalledExtension","builtInExtensions","errorOrErrors","previousValue","currentValue","extensionNls_1","ExtensionManagementService","galleryService","downloadService","instantiationService","lastReportTimestamp","installingExtensions","uninstallingExtensions","_onInstallExtension","_onDidInstallExtension","_onUninstallExtension","_onDidUninstallExtension","extensionLifecycle","createInstance","extensionLifecycle_1","extensionsScanner","extensionsScanner_1","postUninstall","manifestCache","extensionsManifestCache_1","extensionsDownloader","extensionDownloader_1","collectFiles","downloadLocation","downloadVsix","extensionManagementUtil_2","collectFilesFromDirectory","existing","gt","uninstallExtension","unsetUninstalledAndGetLocal","getGalleryMetadata","installFromZipPath","downloadedLocation","installExtension","installDependenciesAndPackExtensions","checkAndGetCompatibleVersion","reportTelemetry","getTelemetryEvent","doInstallFromGallery","gallery","existingExtension","installableExtension","downloadInstallableExtension","neq","setUninstalled","isMalicious","compatibleExtension","getCompatibleExtension","findGalleryExtension","downloadExtension","extractAndInstall","isUninstalled","unsetUninstalled","extractUserExtension","saveMetadataForLocalExtension","dependenciesAndPackExtensions","old","galleryIdentifier","extensionsToInstall","rollback","extensionsToUninstall","extensionToUninstall","checkForDependenciesAndUninstall","findGalleryExtensionByName","findGalleryExtensionById","preUninstallExtension","packedExtensions","getAllPackExtensionsToUninstall","uninstallExtensions","postUninstallExtension","otherExtensionsToUninstall","checkForDependents","doUninstall","dependents","getDependents","remainingDependents","dependent","getDependentsErrorMessage","dependingExtension","checked","extensionsPack","packOfPackedExtensions","packedExtension","userExtensions","u","reportStatistic","errorcode","filterUninstalled","allUninstalled","reportedExtensions","updateReportCache","extensionData","download_1","vszipExtract","vszip","vszipBuffer","tar","tarPath","pack","tarStream","finalize","archivePath","extractTar","includes","extractAssets","assetPath","extractor","fail","extractData","fileData","nextEntry","rawName","fstream","enableCustomMarketplace","SERVICE_URL","itemUrl","ITEM_URL","recommendationsUrl","RequestService","configure","proxy","proxyStrictSSL","authorization","proxyAuthorization","agent","proxy_1","Proxy-Authorization","_request","endpoint","rawRequest","getRawRequest","getNodeRequest","password","followRedirects","zlib_1","createGunzip","abort","notInstalled","useId","getId","withVersion","EXTENSION_ID_REGEX","getIdAndVersion","Main","argv","setInstallSource","listExtensions","installExtensions","locateExtension","telemetry_2","installSource","showVersions","categories","failed","installedExtensionsManifests","updateLocalizationsCache","responseText","notFound","installedExtension","newer","getExtensionId","uninstalledExtensions","localizationService","eventPrefix","environmentService_1","spdlogService_1","fileService_1","diskFileSystemProvider","registerProvider","configurationService_1","initialize","state_1","stateService_1","instantiationService_1","invokeFunction","accessor","stateService","requestService_1","extensionManagementService_1","extensionGalleryService_1","aiConfig","asimovKey","appInsightsAppender_1","commonProperties_1","telemetryService_1","createChild","Vscode","_onDidClientConnect","ipc","maxExtraOfflineConnections","cliProcessMain_1","servicesPromise","initializeServices","startPath","parseUrl","workbenchWebConfiguration","workspaceUri","folderUri","workspaceProvider","payload","remoteUserDataUri","productConfiguration","nlsConfiguration","reconnectionToken","protocol_1","reconnection","handshake","desiredConnectionType","debugPort","getDebugPort","reconnect","connection_1","nodeProxy_1","disposeOldOfflineConnections","tunnel","mkdirSync","remoteAgentService_1","logIpc_1","extensionHostDebugIpc_1","insights_1","id_1","localizations_2","channel_1","logsDataCleaner_1","extensionManagementIpc_1","requestIpc_1","remoteAgentFileSystemChannel_1","logger_2","marketplace_1","exit","CODE_SERVER_PARENT_PID","parentPid","server_1","field","cli","handleWebSocket"],"mappings":"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","file":"entry.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\nfunction _factory(sharedObj) {\n\n\tsharedObj.MonacoPerformanceMarks = sharedObj.MonacoPerformanceMarks || [];\n\n\tconst _dataLen = 2;\n\tconst _timeStamp = typeof console.timeStamp === 'function' ? console.timeStamp.bind(console) : () => { };\n\n\tfunction importEntries(entries) {\n\t\tsharedObj.MonacoPerformanceMarks.splice(0, 0, ...entries);\n\t}\n\n\tfunction exportEntries() {\n\t\treturn sharedObj.MonacoPerformanceMarks.slice(0);\n\t}\n\n\tfunction getEntries() {\n\t\tconst result = [];\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tfor (let i = 0; i < entries.length; i += _dataLen) {\n\t\t\tresult.push({\n\t\t\t\tname: entries[i],\n\t\t\t\tstartTime: entries[i + 1],\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction getDuration(from, to) {\n\t\tconst entries = sharedObj.MonacoPerformanceMarks;\n\t\tlet target = to;\n\t\tlet endIndex = 0;\n\t\tfor (let i = entries.length - _dataLen; i >= 0; i -= _dataLen) {\n\t\t\tif (entries[i] === target) {\n\t\t\t\tif (target === to) {\n\t\t\t\t\t// found `to` (end of interval)\n\t\t\t\t\tendIndex = i;\n\t\t\t\t\ttarget = from;\n\t\t\t\t} else {\n\t\t\t\t\t// found `from` (start of interval)\n\t\t\t\t\treturn entries[endIndex + 1] - entries[i + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tfunction mark(name) {\n\t\tsharedObj.MonacoPerformanceMarks.push(name, Date.now());\n\t\t_timeStamp(name);\n\t}\n\n\tconst exports = {\n\t\tmark: mark,\n\t\tgetEntries: getEntries,\n\t\tgetDuration: getDuration,\n\t\timportEntries: importEntries,\n\t\texportEntries: exportEntries\n\t};\n\n\treturn exports;\n}\n\n// This module can be loaded in an amd and commonjs-context.\n// Because we want both instances to use the same perf-data\n// we store them globally\n\n// eslint-disable-next-line no-var\nvar sharedObj;\nif (typeof global === 'object') {\n\t// nodejs\n\tsharedObj = global;\n} else if (typeof self === 'object') {\n\t// browser\n\tsharedObj = self;\n} else {\n\tsharedObj = {};\n}\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t// commonjs\n\tmodule.exports = _factory(sharedObj);\n} else {\n\tsharedObj.perf = _factory(sharedObj);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n//@ts-check\n\n/**\n * @param {NodeRequire} nodeRequire\n * @param {typeof import('path')} path\n * @param {typeof import('fs')} fs\n * @param {typeof import('../common/performance')} perf\n */\nfunction factory(nodeRequire, path, fs, perf) {\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<boolean>}\n\t */\n\tfunction exists(file) {\n\t\treturn new Promise(c => fs.exists(file, c));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction touch(file) {\n\t\treturn new Promise((c, e) => { const d = new Date(); fs.utimes(file, d, d, err => err ? e(err) : c()); });\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<object>}\n\t */\n\tfunction lstat(file) {\n\t\treturn new Promise((c, e) => fs.lstat(file, (err, stats) => err ? e(err) : c(stats)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string[]>}\n\t */\n\tfunction readdir(dir) {\n\t\treturn new Promise((c, e) => fs.readdir(dir, (err, files) => err ? e(err) : c(files)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<string>}\n\t */\n\tfunction mkdirp(dir) {\n\t\treturn new Promise((c, e) => fs.mkdir(dir, { recursive: true }, err => (err && err.code !== 'EEXIST') ? e(err) : c(dir)));\n\t}\n\n\t/**\n\t * @param {string} dir\n\t * @returns {Promise<void>}\n\t */\n\tfunction rmdir(dir) {\n\t\treturn new Promise((c, e) => fs.rmdir(dir, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @returns {Promise<void>}\n\t */\n\tfunction unlink(file) {\n\t\treturn new Promise((c, e) => fs.unlink(file, err => err ? e(err) : c(undefined)));\n\t}\n\n\t/**\n\t * @param {string} location\n\t * @returns {Promise<void>}\n\t */\n\tfunction rimraf(location) {\n\t\treturn lstat(location).then(stat => {\n\t\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\t\t\t\treturn readdir(location)\n\t\t\t\t\t.then(children => Promise.all(children.map(child => rimraf(path.join(location, child)))))\n\t\t\t\t\t.then(() => rmdir(location));\n\t\t\t} else {\n\t\t\t\treturn unlink(location);\n\t\t\t}\n\t\t}, err => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthrow err;\n\t\t});\n\t}\n\n\tfunction readFile(file) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.readFile(file, 'utf8', function (err, data) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} file\n\t * @param {string} content\n\t * @returns {Promise<void>}\n\t */\n\tfunction writeFile(file, content) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfs.writeFile(file, content, 'utf8', function (err) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\n\t/**\n\t * @param {string} userDataPath\n\t * @returns {object}\n\t */\n\tfunction getLanguagePackConfigurations(userDataPath) {\n\t\tconst configFile = path.join(userDataPath, 'languagepacks.json');\n\t\ttry {\n\t\t\t// NOTE@coder: Swapped require with readFile since require is cached and\n\t\t\t// we don't restart the server-side portion of code-server when the\n\t\t\t// language changes.\n\t\t\treturn JSON.parse(fs.readFileSync(configFile, \"utf8\"));\n\t\t} catch (err) {\n\t\t\t// Do nothing. If we can't read the file we have no\n\t\t\t// language pack config.\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {object} config\n\t * @param {string} locale\n\t */\n\tfunction resolveLanguagePackLocale(config, locale) {\n\t\ttry {\n\t\t\twhile (locale) {\n\t\t\t\tif (config[locale]) {\n\t\t\t\t\treturn locale;\n\t\t\t\t} else {\n\t\t\t\t\tconst index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index > 0) {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Resolving language pack configuration failed.', err);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {string} commit\n\t * @param {string} userDataPath\n\t * @param {string} metaDataFile\n\t * @param {string} locale\n\t */\n\tfunction getNLSConfiguration(commit, userDataPath, metaDataFile, locale) {\n\t\tif (locale === 'pseudo') {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {}, pseudo: true });\n\t\t}\n\n\t\tif (process.env['VSCODE_DEV']) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\t// We have a built version so we have extracted nls file. Try to find\n\t\t// the right file to use.\n\n\t\t// Check if we have an English or English US locale. If so fall to default since that is our\n\t\t// English translation (we don't ship *.nls.en.json files)\n\t\tif (locale && (locale === 'en' || locale === 'en-us')) {\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t}\n\n\t\tconst initialLocale = locale;\n\n\t\tperf.mark('nlsGeneration:start');\n\n\t\tconst defaultResult = function (locale) {\n\t\t\tperf.mark('nlsGeneration:end');\n\t\t\treturn Promise.resolve({ locale: locale, availableLanguages: {} });\n\t\t};\n\t\ttry {\n\t\t\tif (!commit) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst configs = getLanguagePackConfigurations(userDataPath);\n\t\t\tif (!configs) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tlocale = resolveLanguagePackLocale(configs, locale);\n\t\t\tif (!locale) {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\tconst packConfig = configs[locale];\n\t\t\tlet mainPack;\n\t\t\tif (!packConfig || typeof packConfig.hash !== 'string' || !packConfig.translations || typeof (mainPack = packConfig.translations['vscode']) !== 'string') {\n\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t}\n\t\t\treturn exists(mainPack).then(fileExists => {\n\t\t\t\tif (!fileExists) {\n\t\t\t\t\treturn defaultResult(initialLocale);\n\t\t\t\t}\n\t\t\t\tconst packId = packConfig.hash + '.' + locale;\n\t\t\t\tconst cacheRoot = path.join(userDataPath, 'clp', packId);\n\t\t\t\tconst coreLocation = path.join(cacheRoot, commit);\n\t\t\t\tconst translationsConfigFile = path.join(cacheRoot, 'tcf.json');\n\t\t\t\tconst corruptedFile = path.join(cacheRoot, 'corrupted.info');\n\t\t\t\tconst result = {\n\t\t\t\t\tlocale: initialLocale,\n\t\t\t\t\tavailableLanguages: { '*': locale },\n\t\t\t\t\t_languagePackId: packId,\n\t\t\t\t\t_translationsConfigFile: translationsConfigFile,\n\t\t\t\t\t_cacheRoot: cacheRoot,\n\t\t\t\t\t_resolvedLanguagePackCoreLocation: coreLocation,\n\t\t\t\t\t_corruptedFile: corruptedFile\n\t\t\t\t};\n\t\t\t\treturn exists(corruptedFile).then(corrupted => {\n\t\t\t\t\t// The nls cache directory is corrupted.\n\t\t\t\t\tlet toDelete;\n\t\t\t\t\tif (corrupted) {\n\t\t\t\t\t\ttoDelete = rimraf(cacheRoot);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoDelete = Promise.resolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t\treturn toDelete.then(() => {\n\t\t\t\t\t\treturn exists(coreLocation).then(fileExists => {\n\t\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\t\t// We don't wait for this. No big harm if we can't touch\n\t\t\t\t\t\t\t\ttouch(coreLocation).catch(() => { });\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn mkdirp(coreLocation).then(() => {\n\t\t\t\t\t\t\t\treturn Promise.all([readFile(metaDataFile), readFile(mainPack)]);\n\t\t\t\t\t\t\t}).then(values => {\n\t\t\t\t\t\t\t\tconst metadata = JSON.parse(values[0]);\n\t\t\t\t\t\t\t\tconst packData = JSON.parse(values[1]).contents;\n\t\t\t\t\t\t\t\tconst bundles = Object.keys(metadata.bundles);\n\t\t\t\t\t\t\t\tconst writes = [];\n\t\t\t\t\t\t\t\tfor (const bundle of bundles) {\n\t\t\t\t\t\t\t\t\tconst modules = metadata.bundles[bundle];\n\t\t\t\t\t\t\t\t\tconst target = Object.create(null);\n\t\t\t\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t\t\t\tconst keys = metadata.keys[module];\n\t\t\t\t\t\t\t\t\t\tconst defaultMessages = metadata.messages[module];\n\t\t\t\t\t\t\t\t\t\tconst translations = packData[module];\n\t\t\t\t\t\t\t\t\t\tlet targetStrings;\n\t\t\t\t\t\t\t\t\t\tif (translations) {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = [];\n\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = keys[i];\n\t\t\t\t\t\t\t\t\t\t\t\tconst key = typeof elem === 'string' ? elem : elem.key;\n\t\t\t\t\t\t\t\t\t\t\t\tlet translatedMessage = translations[key];\n\t\t\t\t\t\t\t\t\t\t\t\tif (translatedMessage === undefined) {\n\t\t\t\t\t\t\t\t\t\t\t\t\ttranslatedMessage = defaultMessages[i];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\ttargetStrings.push(translatedMessage);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\ttargetStrings = defaultMessages;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttarget[module] = targetStrings;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\twrites.push(writeFile(path.join(coreLocation, bundle.replace(/\\//g, '!') + '.nls.json'), JSON.stringify(target)));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twrites.push(writeFile(translationsConfigFile, JSON.stringify(packConfig.translations)));\n\t\t\t\t\t\t\t\treturn Promise.all(writes);\n\t\t\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t\t\tperf.mark('nlsGeneration:end');\n\t\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\t\t\t\t\t\treturn defaultResult(locale);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.error('Generating translation files failed.', err);\n\t\t\treturn defaultResult(locale);\n\t\t}\n\t}\n\n\treturn {\n\t\tgetNLSConfiguration\n\t};\n}\n\n\nif (typeof define === 'function') {\n\t// amd\n\tdefine(__m[90/*vs/base/node/languagePacks*/], __M([39/*path*/,19/*fs*/,164/*vs/base/common/performance*/]), function (path, fs, perf) { return factory(require.__$__nodeRequire, path, fs, perf); });\n} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\tconst path = require('path');\n\tconst fs = require('fs');\n\tconst perf = require('../common/performance');\n\tmodule.exports = factory(require, path, fs, perf);\n} else {\n\tthrow new Error('Unknown context');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nlet memoizeId = 0;\nexport function createMemoizer() {\n\tconst memoizeKeyPrefix = `$memoize${memoizeId++}`;\n\tlet self: any = undefined;\n\n\tconst result = function memoize(target: any, key: string, descriptor: any) {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\n\t\t\tif (fn!.length !== 0) {\n\t\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t\t}\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tconst memoizeKey = `${memoizeKeyPrefix}:${key}`;\n\t\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\t\tself = this;\n\n\t\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this[memoizeKey];\n\t\t};\n\t};\n\n\tresult.clear = () => {\n\t\tif (typeof self === 'undefined') {\n\t\t\treturn;\n\t\t}\n\t\tObject.getOwnPropertyNames(self).forEach(property => {\n\t\t\tif (property.indexOf(memoizeKeyPrefix) === 0) {\n\t\t\t\tdelete self[property];\n\t\t\t}\n\t\t});\n\t};\n\n\treturn result;\n}\n\nexport function memoize(target: any, key: string, descriptor: any) {\n\treturn createMemoizer()(target, key, descriptor);\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequece of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<any>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\nexport interface INodeProcess {\n\tplatform: 'win32' | 'linux' | 'darwin';\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tgetuid(): number;\n\tcwd(): string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n} else if (typeof _globals.vscode !== 'undefined') {\n\t// Native envionment (sandboxed)\n\tnodeProcess = _globals.vscode.process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn !!nodeProcess && !_isWindows && (nodeProcess.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (nodeProcess) {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\ndeclare const process: INodeProcess;\n\nlet safeProcess: INodeProcess;\n\n// Native node.js environment\nif (typeof process !== 'undefined') {\n\tsafeProcess = process;\n}\n\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n\tsafeProcess = globals.vscode.process;\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd(): string { return '/'; },\n\t\tgetuid(): number { return -1; }\n\t};\n}\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\nenum Severity {\n\tIgnore = 0,\n\tInfo = 1,\n\tWarning = 2,\n\tError = 3\n}\n\nnamespace Severity {\n\n\tconst _error = 'error';\n\tconst _warning = 'warning';\n\tconst _warn = 'warn';\n\tconst _info = 'info';\n\n\t/**\n\t * Parses 'error', 'warning', 'warn', 'info' in call casings\n\t * and falls back to ignore.\n\t */\n\texport function fromValue(value: string): Severity {\n\t\tif (!value) {\n\t\t\treturn Severity.Ignore;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_error, value)) {\n\t\t\treturn Severity.Error;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n\t\t\treturn Severity.Warning;\n\t\t}\n\n\t\tif (strings.equalsIgnoreCase(_info, value)) {\n\t\t\treturn Severity.Info;\n\t\t}\n\t\treturn Severity.Ignore;\n\t}\n}\n\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\n/**\n * @deprecated use `FileAccess.asFileUri(relativePath, requireFn).fsPath`\n */\nexport function getPathFromAmdModule(requirefn: typeof require, relativePath: string): string {\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\n}\n\n/**\n * @deprecated use `FileAccess.asFileUri()` for node.js contexts or `FileAccess.asBrowserUri` for browser contexts.\n */\nexport function getUriFromAmdModule(requirefn: typeof require, relativePath: string): URI {\n\treturn URI.parse(requirefn.toUrl(relativePath));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken #107886 the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compare(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ParsedExpression, IExpression, parse } from 'vs/base/common/glob';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\"\n\t * @param parentCandidate A uri which is \"shorter\" then `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport class ResourceGlobMatcher {\n\n\tprivate readonly globalExpression: ParsedExpression;\n\tprivate readonly expressionsByRoot: TernarySearchTree<URI, { root: URI, expression: ParsedExpression }> = TernarySearchTree.forUris<{ root: URI, expression: ParsedExpression }>();\n\n\tconstructor(\n\t\tglobalExpression: IExpression,\n\t\trootExpressions: { root: URI, expression: IExpression }[]\n\t) {\n\t\tthis.globalExpression = parse(globalExpression);\n\t\tfor (const expression of rootExpressions) {\n\t\t\tthis.expressionsByRoot.set(expression.root, { root: expression.root, expression: parse(expression.expression) });\n\t\t}\n\t}\n\n\tmatches(resource: URI): boolean {\n\t\tconst rootExpression = this.expressionsByRoot.findSubstr(resource);\n\t\tif (rootExpression) {\n\t\t\tconst path = relativePath(rootExpression.root, resource);\n\t\t\tif (path && !!rootExpression.expression(path)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn !!this.globalExpression(resource.path);\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { posix, normalize, win32, sep } from 'vs/base/common/path';\nimport { startsWithIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isWindows, isMacintosh } from 'vs/base/common/platform';\nimport { isEqual, basename, relativePath } from 'vs/base/common/resources';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (hasDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nfunction hasDriveLetter(path: string): boolean {\n\treturn !!(isWindows && path && path[1] === ':');\n}\n\nexport function normalizeDriveLetter(path: string): string {\n\tif (hasDriveLetter(path)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if neeeded\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which templating is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { MarshalledObject } from 'vs/base/common/marshalling';\nimport { Schemas } from './network';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tconstructor(private readonly remoteAuthority: string) {\n\t}\n\n\t// NOTE@coder: Coming in from the browser it'll be vscode-remote so it needs\n\t// to be transformed into file.\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.vscodeRemote\n\t\t\t? toJSON(URI.file(uri.path))\n\t\t\t: uri;\n\t}\n\n\t// NOTE@coder: Going out to the browser it'll be file so it needs to be\n\t// transformed into vscode-remote.\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? toJSON(URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path: uri.path }))\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\treturn uri.scheme === Schemas.file\n\t\t\t? URI.from({ authority: this.remoteAuthority, scheme: Schemas.vscodeRemote, path:uri.path })\n\t\t\t: uri;\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn scheme === Schemas.file\n\t\t\t? Schemas.vscodeRemote\n\t\t\t: scheme;\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === 1) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): Promise<string> {\n\treturn new Promise(async (resolve, reject) => {\n\t\tconst timeout = setTimeout(() => reject('Unable to retrieve mac address (timeout after 10s)'), 10000);\n\n\t\ttry {\n\t\t\tresolve(await doGetMac());\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t} finally {\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t});\n}\n\nfunction doGetMac(): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\ttry {\n\t\t\tconst ifaces = networkInterfaces();\n\t\t\tfor (const [, infos] of Object.entries(ifaces)) {\n\t\t\t\tfor (const info of infos) {\n\t\t\t\t\tif (validateMacAddress(info.mac)) {\n\t\t\t\t\t\treturn resolve(info.mac);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treject('Unable to retrieve mac address (unexpected format)');\n\t\t} catch (err) {\n\t\t\treject(err);\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as errors from 'vs/base/common/errors';\nimport * as uuid from 'vs/base/common/uuid';\nimport { networkInterfaces } from 'os';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAdress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(interfaces, name)) {\n\t\t\t\t\tfor (const { mac, internal } of interfaces[name]) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAdress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = await getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\n\ninterface IPaths {\n\tgetAppDataPath(platform: string): string;\n\tgetDefaultUserDataPath(platform: string): string;\n}\n\nconst pathsPath = FileAccess.asFileUri('paths', require).fsPath;\nconst paths = require.__$__nodeRequire<IPaths>(pathsPath);\nexport const getAppDataPath = paths.getAppDataPath;\nexport const getDefaultUserDataPath = paths.getDefaultUserDataPath;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join, basename } from 'vs/base/common/path';\nimport { watch } from 'fs';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { toDisposable, IDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { exists, readdir } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\treaddir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\texists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n\n//#region createChannelReceiver / createChannelSender\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n\n\t/**\n\t * If provided, will not proxy any of the properties\n\t * that are part of the Map but rather return that value.\n\t */\n\tproperties?: Map<string, unknown>;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Check for predefined values\n\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\n//#endregion\n\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IMessagePassingProtocol, IPCClient, IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { IDisposable, Disposable, dispose } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport * as platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: () => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tKeepAlive = 4,\n\tDisconnect = 5\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a message that has been unacknowledged for 10 seconds, consider the connection closed...\n\t */\n\tAcknowledgeTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * Send at least a message every 5s for keep alive reasons.\n\t */\n\tKeepAliveTime = 5000, // 5 seconds\n\t/**\n\t * If there is no message received for 10 seconds, consider the connection closed...\n\t */\n\tKeepAliveTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.flush();\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tplatform.setImmediate(() => {\n\t\t\t\tthis._writeNow();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tthis._socket.write(this._bufferTake());\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new Emitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onClose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onClose(): Event<void> { return this.protocol.onClose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here nextTick and not other types of timeouts\n\t\t\t\tprocess.nextTick(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tpublic load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _outgoingKeepAliveTimeout: any | null;\n\tprivate _incomingKeepAliveTimeout: any | null;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator = LoadEstimator.getInstance();\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onClose = new BufferedEmitter<void>();\n\treadonly onClose: Event<void> = this._onClose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<void>();\n\treadonly onSocketClose: Event<void> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null) {\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._outgoingKeepAliveTimeout = null;\n\t\tthis._incomingKeepAliveTimeout = null;\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._outgoingKeepAliveTimeout);\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t}\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\tclearTimeout(this._incomingKeepAliveTimeout);\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tprivate _sendKeepAliveCheck(): void {\n\t\tif (this._outgoingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastOutgoingMsg = Date.now() - this._socketWriter.lastWriteTime;\n\t\tif (timeSinceLastOutgoingMsg >= ProtocolConstants.KeepAliveTime) {\n\t\t\t// sufficient time has passed since last message was written,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only a keep alive.\n\t\t\tconst msg = new ProtocolMessage(ProtocolMessageType.KeepAlive, 0, 0, getEmptyBuffer());\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._sendKeepAliveCheck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._outgoingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._outgoingKeepAliveTimeout = null;\n\t\t\tthis._sendKeepAliveCheck();\n\t\t}, ProtocolConstants.KeepAliveTime - timeSinceLastOutgoingMsg + 5);\n\t}\n\n\tprivate _recvKeepAliveCheck(): void {\n\t\tif (this._incomingKeepAliveTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._socketReader.lastReadTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.KeepAliveTimeoutTime) {\n\t\t\t// It's been a long time since we received a server message\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._incomingKeepAliveTimeout = setTimeout(() => {\n\t\t\tthis._incomingKeepAliveTimeout = null;\n\t\t\tthis._recvKeepAliveCheck();\n\t\t}, Math.max(ProtocolConstants.KeepAliveTimeoutTime - timeSinceLastIncomingMsg, 0) + 5);\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose(() => this._onSocketClose.fire()));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\n\t\tthis._sendKeepAliveCheck();\n\t\tthis._recvKeepAliveCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onClose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\tconsole.error(`PROTOCOL CORRUPTION, LAST SAW MSG ${this._incomingMsgId} AND HAVE NOW RECEIVED MSG ${msg.id}`);\n\t\t\t\t}\n\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\tthis._sendAckCheck();\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t} else if (msg.type === ProtocolMessageType.Control) {\n\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t} else if (msg.type === ProtocolMessageType.Disconnect) {\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tif (timeSinceOldestUnacknowledgedMsg >= ProtocolConstants.AcknowledgeTimeoutTime) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, Math.max(ProtocolConstants.AcknowledgeTimeoutTime - timeSinceOldestUnacknowledgedMsg, 0) + 5);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Socket, Server as NetServer, createConnection, createServer } from 'net';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { join } from 'vs/base/common/path';\nimport { tmpdir } from 'os';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ISocket, Protocol, Client, ChunkStream } from 'vs/base/parts/ipc/common/ipc.net';\nimport { onUnexpectedError } from 'vs/base/common/errors';\n\nexport class NodeSocket implements ISocket {\n\tpublic readonly socket: Socket;\n\n\tconstructor(socket: Socket) {\n\t\tthis.socket = socket;\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => _listener(VSBuffer.wrap(buff));\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\tthis.socket.on('close', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', listener)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tthis.socket.on('end', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', listener)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.socket.write(<Buffer>buffer.buffer);\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tmask: 0\n\t};\n\n\tconstructor(socket: NodeSocket) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.dispose();\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: () => void): IDisposable {\n\t\treturn this.socket.onClose(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\theader.writeUInt8(0b10000010, 0);\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\t// const firstByte = peekHeader.readUInt8(0);\n\t\t\t\t// const finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tunmask(body, this._state.mask);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._onData.fire(body);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\treturn this.socket.drain();\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\nconst xdgRuntimeDir = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nexport function generateRandomPipeName(): string {\n\tconst randomSuffix = generateUuid();\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\t// Mac/Unix: use socket file\n\tif (xdgRuntimeDir) {\n\t\treturn join(xdgRuntimeDir, `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\treturn join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket)),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { pad } from './strings';\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + pad(date.getMonth() + 1, 2) +\n\t\t'-' + pad(date.getDate(), 2) +\n\t\t'T' + pad(date.getHours(), 2) +\n\t\t':' + pad(date.getMinutes(), 2) +\n\t\t':' + pad(date.getSeconds(), 2) +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as types from 'vs/base/common/types';\nimport * as arrays from 'vs/base/common/arrays';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Extracted from json.ts to keep json nls free.\n */\nimport { localize } from 'vs/nls';\nimport { ParseErrorCode } from './json';\n\nexport function getParseErrorMessage(errorCode: ParseErrorCode): string {\n\tswitch (errorCode) {\n\t\tcase ParseErrorCode.InvalidSymbol: return localize('error.invalidSymbol', 'Invalid symbol');\n\t\tcase ParseErrorCode.InvalidNumberFormat: return localize('error.invalidNumberFormat', 'Invalid number format');\n\t\tcase ParseErrorCode.PropertyNameExpected: return localize('error.propertyNameExpected', 'Property name expected');\n\t\tcase ParseErrorCode.ValueExpected: return localize('error.valueExpected', 'Value expected');\n\t\tcase ParseErrorCode.ColonExpected: return localize('error.colonExpected', 'Colon expected');\n\t\tcase ParseErrorCode.CommaExpected: return localize('error.commaExpected', 'Comma expected');\n\t\tcase ParseErrorCode.CloseBraceExpected: return localize('error.closeBraceExpected', 'Closing brace expected');\n\t\tcase ParseErrorCode.CloseBracketExpected: return localize('error.closeBracketExpected', 'Closing bracket expected');\n\t\tcase ParseErrorCode.EndOfFileExpected: return localize('error.endOfFileExpected', 'End of file expected');\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServerChannel, IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IReloadSessionEvent, ICloseSessionEvent, IAttachSessionEvent, ILogToSessionEvent, ITerminateSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IRemoteConsoleLog } from 'vs/base/common/console';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onLogToEmitter = new Emitter<ILogToSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'log':\n\t\t\t\treturn Promise.resolve(this._onLogToEmitter.fire({ sessionId: arg[0], log: arg[1] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'log':\n\t\t\t\treturn this._onLogToEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tlogToSession(sessionId: string, log: IRemoteConsoleLog): void {\n\t\tthis.channel.call('log', [sessionId, log]);\n\t}\n\n\tget onLogToSession(): Event<ILogToSessionEvent> {\n\t\treturn this.channel.listen('log');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], env: IProcessEnvironment, debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, env, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionManagementService, ILocalExtension, InstallExtensionEvent, DidInstallExtensionEvent, IGalleryExtension, DidUninstallExtensionEvent, IExtensionIdentifier, IGalleryMetadata, IReportedExtension, IExtensionTipsService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Event } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IURITransformer, DefaultURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtension = Event.buffer(service.onDidInstallExtension, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtension': return Event.map(this.onDidInstallExtension, i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local }));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsReport': return this.service.getExtensionsReport();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) { }\n\n\tget onInstallExtension(): Event<InstallExtensionEvent> { return this.channel.listen('onInstallExtension'); }\n\tget onDidInstallExtension(): Event<DidInstallExtensionEvent> { return Event.map(this.channel.listen<DidInstallExtensionEvent>('onDidInstallExtension'), i => ({ ...i, local: i.local ? transformIncomingExtension(i.local, null) : i.local })); }\n\tget onUninstallExtension(): Event<IExtensionIdentifier> { return this.channel.listen('onUninstallExtension'); }\n\tget onDidUninstallExtension(): Event<DidUninstallExtensionEvent> { return this.channel.listen('onDidUninstallExtension'); }\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, force = false): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, force]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsReport'));\n\t}\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string;\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string) => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn translations[match[1]] || value;\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals\n\t};\n}\n\nexport function isValidVersion(_version: string | INormalizedVersion, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _version === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_version));\n\t} else {\n\t\tversion = _version;\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\nexport function isValidExtensionVersion(version: string, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, engine);\n}\n\nexport function isVersionValid(currentVersion: string, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.setFolders(this.folders);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (!this.isDisposed && this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createChannelSender, getNextTickChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IWatcherRequest, IWatcherOptions, IWatcherService } from 'vs/platform/files/node/watcher/unix/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class FileWatcher extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate isDisposed: boolean;\n\tprivate restartCounter: number;\n\tprivate service: IWatcherService | undefined;\n\n\tconstructor(\n\t\tprivate folders: IWatcherRequest[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean,\n\t\tprivate watcherOptions: IWatcherOptions = {}\n\t) {\n\t\tsuper();\n\n\t\tthis.isDisposed = false;\n\t\tthis.restartCounter = 0;\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (chokidar)',\n\t\t\t\targs: ['--type=watcherService'],\n\t\t\t\tenv: {\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/platform/files/node/watcher/unix/watcherApp',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._register(client.onDidProcessExit(() => {\n\t\t\t// our watcher app should never be completed because it keeps on watching. being in here indicates\n\t\t\t// that the watcher process died and we want to restart it here. we only do it a max number of times\n\t\t\tif (!this.isDisposed) {\n\t\t\t\tif (this.restartCounter <= FileWatcher.MAX_RESTARTS) {\n\t\t\t\t\tthis.error('terminated unexpectedly and is restarted again...');\n\t\t\t\t\tthis.restartCounter++;\n\t\t\t\t\tthis.startWatching();\n\t\t\t\t} else {\n\t\t\t\t\tthis.error('failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Initialize watcher\n\t\tthis.service = createChannelSender<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.init({ ...this.watcherOptions, verboseLogging: this.verboseLogging });\n\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(m => this.onLogMessage(m)));\n\n\t\t// Start watching\n\t\tthis.service.setRoots(this.folders);\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (chokidar)] ${message}` });\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\tsetFolders(folders: IWatcherRequest[]): void {\n\t\tthis.folders = folders;\n\n\t\tif (this.service) {\n\t\t\tthis.service.setRoots(folders);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport * as decoder from 'vs/base/node/decoder';\nimport * as glob from 'vs/base/common/glob';\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport class OutOfProcessWin32FolderWatcher {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate static changeTypeMap: FileChangeType[] = [FileChangeType.UPDATED, FileChangeType.ADDED, FileChangeType.DELETED];\n\n\tprivate ignored: glob.ParsedPattern[];\n\n\tprivate handle: cp.ChildProcess | undefined;\n\tprivate restartCounter: number;\n\n\tconstructor(\n\t\tprivate watchedFolder: string,\n\t\tignored: string[],\n\t\tprivate eventCallback: (events: IDiskFileChange[]) => void,\n\t\tprivate logCallback: (message: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.restartCounter = 0;\n\n\t\tif (Array.isArray(ignored)) {\n\t\t\tthis.ignored = ignored.map(i => glob.parse(i));\n\t\t} else {\n\t\t\tthis.ignored = [];\n\t\t}\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: ${watchedFolder}`);\n\t\t}\n\n\t\tthis.startWatcher();\n\t}\n\n\tprivate startWatcher(): void {\n\t\tconst args = [this.watchedFolder];\n\t\tif (this.verboseLogging) {\n\t\t\targs.push('-verbose');\n\t\t}\n\n\t\tthis.handle = cp.spawn(FileAccess.asFileUri('vs/platform/files/node/watcher/win32/CodeHelper.exe', require).fsPath, args);\n\n\t\tconst stdoutLineDecoder = new decoder.LineDecoder();\n\n\t\t// Events over stdout\n\t\tthis.handle.stdout!.on('data', (data: Buffer) => {\n\n\t\t\t// Collect raw events from output\n\t\t\tconst rawEvents: IDiskFileChange[] = [];\n\t\t\tstdoutLineDecoder.write(data).forEach((line) => {\n\t\t\t\tconst eventParts = line.split('|');\n\t\t\t\tif (eventParts.length === 2) {\n\t\t\t\t\tconst changeType = Number(eventParts[0]);\n\t\t\t\t\tconst absolutePath = eventParts[1];\n\n\t\t\t\t\t// File Change Event (0 Changed, 1 Created, 2 Deleted)\n\t\t\t\t\tif (changeType >= 0 && changeType < 3) {\n\n\t\t\t\t\t\t// Support ignores\n\t\t\t\t\t\tif (this.ignored && this.ignored.some(ignore => ignore(absolutePath))) {\n\t\t\t\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\t\t\t\tthis.log(absolutePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Otherwise record as event\n\t\t\t\t\t\trawEvents.push({\n\t\t\t\t\t\t\ttype: OutOfProcessWin32FolderWatcher.changeTypeMap[changeType],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// 3 Logging\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.log(eventParts[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trigger processing of events through the delayer to batch them up properly\n\t\t\tif (rawEvents.length > 0) {\n\t\t\t\tthis.eventCallback(rawEvents);\n\t\t\t}\n\t\t});\n\n\t\t// Errors\n\t\tthis.handle.on('error', (error: Error) => this.onError(error));\n\t\tthis.handle.stderr!.on('data', (data: Buffer) => this.onError(data));\n\n\t\t// Exit\n\t\tthis.handle.on('exit', (code: number, signal: string) => this.onExit(code, signal));\n\t}\n\n\tprivate onError(error: Error | Buffer): void {\n\t\tthis.error('process error: ' + error.toString());\n\t}\n\n\tprivate onExit(code: number, signal: string): void {\n\t\tif (this.handle) { // exit while not yet being disposed is unexpected!\n\t\t\tthis.error(`terminated unexpectedly (code: ${code}, signal: ${signal})`);\n\n\t\t\tif (this.restartCounter <= OutOfProcessWin32FolderWatcher.MAX_RESTARTS) {\n\t\t\t\tthis.error('is restarted again...');\n\t\t\t\tthis.restartCounter++;\n\t\t\t\tthis.startWatcher(); // restart\n\t\t\t} else {\n\t\t\t\tthis.error('Watcher failed to start after retrying for some time, giving up. Please report this as a bug report!');\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.logCallback({ type: 'error', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tprivate log(message: string) {\n\t\tthis.logCallback({ type: 'trace', message: `[File Watcher (C#)] ${message}` });\n\t}\n\n\tdispose(): void {\n\t\tif (this.handle) {\n\t\t\tthis.handle.kill();\n\t\t\tthis.handle = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { OutOfProcessWin32FolderWatcher } from 'vs/platform/files/node/watcher/win32/csharpWatcherService';\nimport { posix } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport class FileWatcher implements IDisposable {\n\n\tprivate folder: { path: string, excludes: string[] };\n\tprivate service: OutOfProcessWin32FolderWatcher | undefined = undefined;\n\n\tconstructor(\n\t\tfolders: { path: string, excludes: string[] }[],\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tthis.folder = folders[0];\n\n\t\tif (this.folder.path.indexOf('\\\\\\\\') === 0 && this.folder.path.endsWith(posix.sep)) {\n\t\t\t// for some weird reason, node adds a trailing slash to UNC paths\n\t\t\t// we never ever want trailing slashes as our base path unless\n\t\t\t// someone opens root (\"/\").\n\t\t\t// See also https://github.com/nodejs/io.js/issues/1765\n\t\t\tthis.folder.path = rtrim(this.folder.path, posix.sep);\n\t\t}\n\n\t\tthis.service = this.startWatching();\n\t}\n\n\tprivate get isDisposed(): boolean {\n\t\treturn !this.service;\n\t}\n\n\tprivate startWatching(): OutOfProcessWin32FolderWatcher {\n\t\treturn new OutOfProcessWin32FolderWatcher(\n\t\t\tthis.folder.path,\n\t\t\tthis.folder.excludes,\n\t\t\tevents => this.onFileEvents(events),\n\t\t\tmessage => this.onLogMessage(message),\n\t\t\tthis.verboseLogging\n\t\t);\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = this.startWatching();\n\t\t}\n\t}\n\n\tprivate onFileEvents(events: IDiskFileChange[]): void {\n\t\tif (this.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Emit through event emitter\n\t\tif (events.length > 0) {\n\t\t\tthis.onDidFilesChange(events);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.service) {\n\t\t\tthis.service.dispose();\n\t\t\tthis.service = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as instantiation from './instantiation';\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface CreateSyncFunc {\n\n\t<T>(ctor: instantiation.IConstructorSignature0<T>): SyncDescriptor0<T>;\n\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>): SyncDescriptor1<A1, T>;\n\t<A1, T>(ctor: instantiation.IConstructorSignature1<A1, T>, a1: A1): SyncDescriptor0<T>;\n\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>): SyncDescriptor2<A1, A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1): SyncDescriptor1<A2, T>;\n\t<A1, A2, T>(ctor: instantiation.IConstructorSignature2<A1, A2, T>, a1: A1, a2: A2): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>): SyncDescriptor3<A1, A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1): SyncDescriptor2<A2, A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\t<A1, A2, A3, T>(ctor: instantiation.IConstructorSignature3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>): SyncDescriptor4<A1, A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\t<A1, A2, A3, A4, T>(ctor: instantiation.IConstructorSignature4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>): SyncDescriptor5<A1, A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\t<A1, A2, A3, A4, A5, T>(ctor: instantiation.IConstructorSignature5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>): SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\t<A1, A2, A3, A4, A5, A6, T>(ctor: instantiation.IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>): SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, T>(ctor: instantiation.IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>): SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\t<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: instantiation.IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\nexport const createSyncDescriptor: CreateSyncFunc = <T>(ctor: any, ...staticArguments: any[]): any => {\n\treturn new SyncDescriptor<T>(ctor, staticArguments);\n};\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = createDecorator<INativeEnvironmentService>('nativeEnvironmentService');\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE. AS SUCH:\n\t//       - PUT NON-WEB PROPERTIES INTO NATIVE ENV SERVICE\n\t//       - PUT WORKBENCH ONLY PROPERTIES INTO WB ENV SERVICE\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\treadonly _serviceBrand: undefined;\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncLogResource: URI;\n\tuserDataSyncHome: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- misc\n\tdisableTelemetry: boolean;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE. AS SUCH:\n\t//       - PUT NON-WEB PROPERTIES INTO NATIVE ENV SERVICE\n\t//       - PUT WORKBENCH ONLY PROPERTIES INTO WB ENV SERVICE\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE. AS SUCH:\n\t//       - PUT WORKBENCH ONLY PROPERTIES INTO WB ENV SERVICE\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tbackupHome: string;\n\tbackupWorkspacesPath: string;\n\tnodeCachedDataDir?: string;\n\tinstallSourcePath: string;\n\n\t// --- IPC Handles\n\tmainIPCHandle: string;\n\tsharedIPCHandle: string;\n\n\t// --- Extensions\n\textensionsPath?: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\textraExtensionPaths: string[]\n\textraBuiltinExtensionPaths: string[]\n\n\t// --- Smoke test support\n\tdriverHandle?: string;\n\tdriverVerbose: boolean;\n\n\t// --- Misc. config\n\tdisableUpdates: boolean;\n\tsandbox: boolean;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE. AS SUCH:\n\t//       - PUT WORKBENCH ONLY PROPERTIES INTO WB ENV SERVICE\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { join, dirname, basename } from 'vs/base/common/path';\nimport { readdir, rimraf } from 'vs/base/node/pfs';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.cleanUpOldLogsSoon();\n\t}\n\n\tprivate cleanUpOldLogsSoon(): void {\n\t\tlet handle: NodeJS.Timeout | undefined = setTimeout(() => {\n\t\t\thandle = undefined;\n\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\treaddir(logsRoot).then(children => {\n\t\t\t\tconst allSessions = children.filter(name => /^\\d{8}T\\d{6}$/.test(name));\n\t\t\t\tconst oldSessions = allSessions.sort().filter((d, i) => d !== currentLog);\n\t\t\t\tconst toDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\t\treturn Promise.all(toDelete.map(name => rimraf(join(logsRoot, name))));\n\t\t\t}).then(null, onUnexpectedError);\n\t\t}, 10 * 1000);\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (handle) {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\thandle = undefined;\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Event } from 'vs/base/common/event';\nimport { IPager } from 'vs/base/common/paging';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { URI } from 'vs/base/common/uri';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IExtensionManifest, IExtension, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { FileAccess } from 'vs/base/common/network';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\twebExtension?: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdate: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tassetUri: URI;\n\tassetTypes: string[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData: any;\n\tpreview: boolean;\n\twebResource?: URI;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n}\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 5,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n}\n\nexport const enum StatisticType {\n\tUninstall = 'uninstall'\n}\n\nexport interface IReportedExtension {\n\tid: IExtensionIdentifier;\n\tmalicious: boolean;\n}\n\nexport const enum InstallOperation {\n\tNone = 0,\n\tInstall,\n\tUpdate\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\tgetCompatibleExtension(extension: IGalleryExtension): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, version?: string): Promise<IGalleryExtension | null>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n}\n\nexport interface DidInstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\toperation: InstallOperation;\n\tzipPath?: string;\n\tgallery?: IGalleryExtension;\n\tlocal?: ILocalExtension;\n\terror?: string;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport const INSTALL_ERROR_NOT_SUPPORTED = 'notsupported';\nexport const INSTALL_ERROR_MALICIOUS = 'malicious';\nexport const INSTALL_ERROR_INCOMPATIBLE = 'incompatible';\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: string) {\n\t\tsuper(message);\n\t}\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtension: Event<DidInstallExtensionEvent>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, force?: boolean): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\tgetExtensionsReport(): Promise<IReportedExtension[]>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n}\n\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Themes',\n\t'Testing',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enableProposedApi?: boolean;\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n\tenableProposedApi?: boolean;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticaionProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport interface IScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly packageNLS?: any;\n\treadonly packageNLSUrl?: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport interface ITranslatedScannedExtension {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly location: URI;\n\treadonly type: ExtensionType;\n\treadonly packageJSON: IExtensionManifest;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IScannedExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILocalExtension, IGalleryExtension, IExtensionIdentifier, IReportedExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion {\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) { }\n\n\tkey(): string {\n\t\treturn `${this.identifier.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this.identifier, o.identifier) && this.version === o.version;\n\t}\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn `${publisher.toLocaleLowerCase()}.${name.toLocaleLowerCase()}`;\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(report: IReportedExtension[]): Set<string> {\n\tconst result = new Set<string>();\n\n\tfor (const extension of report) {\n\t\tif (extension.malicious) {\n\t\t\tresult.add(extension.id.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService, DidInstallExtensionEvent, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtension(e => this.onDidInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtension(e: DidInstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.rimraf(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[], private readonly extUri: IExtUri) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn this.extUri.isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn this.extUri.isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.extUri);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class BinarySize {\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = BinarySize.KB * BinarySize.KB;\n\tstatic readonly GB = BinarySize.MB * BinarySize.KB;\n\tstatic readonly TB = BinarySize.GB * BinarySize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (size < BinarySize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size);\n\t\t}\n\n\t\tif (size < BinarySize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / BinarySize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / BinarySize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / BinarySize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / BinarySize.TB).toFixed(2));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, createFileSystemProviderError, FileSystemProviderErrorCode, ensureFileSystemProviderError } from 'vs/platform/files/common/files';\nimport { canceled } from 'vs/base/common/errors';\nimport { IErrorTransformer, IDataTransformer, WriteableStream } from 'vs/base/common/stream';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\ttarget.end(error);\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\ttry {\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow it to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { statLink } from 'vs/base/node/pfs';\nimport { realpath } from 'vs/base/node/extpath';\nimport { watchFolder, watchFile, CHANGE_BUFFER_DELAY } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { join, basename } from 'vs/base/common/path';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event normalization\n\t\t\tconst normalizedFileChanges = normalizeFileChanges(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tnormalizedFileChanges.forEach(event => {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (normalizedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(normalizedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalState } from 'vs/base/common/errors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { ServiceIdentifier, IInstantiationService, ServicesAccessor, _util, optional } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IdleValue } from 'vs/base/common/async';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.toString();\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>, isOptional?: typeof optional) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result && isOptional !== optional) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._createAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\tstop() { }\n\t\tbranch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidLanguagesChange: Event<void>;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { LoggerChannelClient } from 'vs/platform/log/common/logIpc';\nimport { URI } from 'vs/base/common/uri';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\tgetLogger(file: URI): ILogger;\n}\n\nexport abstract class AbstractLogService extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport class ConsoleLogMainService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class LogServiceAdapter extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly adapter: { consoleLog: (type: string, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.consoleLog('trace', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.consoleLog('debug', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.consoleLog('info', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.consoleLog('warn', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.consoleLog('error', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.consoleLog('critical', [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\tdispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class ConsoleLogInMainService extends LogServiceAdapter implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(client: LoggerChannelClient, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper({ consoleLog: (type, args) => client.consoleLog(type, args) }, logLevel);\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogService>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class DelegatedLogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logService: ILogService) {\n\t\tsuper();\n\t\tthis._register(logService);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logService.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logService.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logService.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logService.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logService.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logService.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logService.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logService.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logService.flush();\n\t}\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = environmentService.logLevel.toLowerCase();\n\t\tswitch (logLevel) {\n\t\t\tcase 'trace':\n\t\t\t\treturn LogLevel.Trace;\n\t\t\tcase 'debug':\n\t\t\t\treturn LogLevel.Debug;\n\t\t\tcase 'info':\n\t\t\t\treturn LogLevel.Info;\n\t\t\tcase 'warn':\n\t\t\t\treturn LogLevel.Warning;\n\t\t\tcase 'error':\n\t\t\t\treturn LogLevel.Error;\n\t\t\tcase 'critical':\n\t\t\t\treturn LogLevel.Critical;\n\t\t\tcase 'off':\n\t\t\t\treturn LogLevel.Off;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { URI } from 'vs/base/common/uri';\nimport { joinPath } from 'vs/base/common/resources';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as semver from 'semver-umd';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst location = joinPath(this.extensionsDownloadDir, this.getName(extension));\n\t\tawait this.download(extension, location, operation);\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\t// noop as caching is enabled always\n\t}\n\n\tprivate async download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\tawait this.extensionGalleryService.download(extension, location, operation);\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension.identifier);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promise.all(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase() : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { fork, ChildProcess } from 'child_process';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { join } from 'vs/base/common/path';\nimport { Limiter } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { rimraf } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn rimraf(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable, IDisposable, toDisposable, dispose, DisposableStore } from 'vs/base/common/lifecycle';\nimport { IFileService, IResolveFileOptions, FileChangesEvent, FileOperationEvent, IFileSystemProviderRegistrationEvent, IFileSystemProvider, IFileStat, IResolveFileResult, ICreateFileOptions, IFileSystemProviderActivationEvent, FileOperationError, FileOperationResult, FileOperation, FileSystemProviderCapabilities, FileType, toFileSystemProviderErrorCode, FileSystemProviderErrorCode, IStat, IFileStatWithMetadata, IResolveMetadataFileOptions, etag, hasReadWriteCapability, hasFileFolderCopyCapability, hasOpenReadWriteCloseCapability, toFileOperationResult, IFileSystemProviderWithOpenReadWriteCloseCapability, IFileSystemProviderWithFileReadWriteCapability, IResolveFileResultWithMetadata, IWatchOptions, IWriteFileOptions, IReadFileOptions, IFileStreamContent, IFileContent, ETAG_DISABLED, hasFileReadStreamCapability, IFileSystemProviderWithFileReadStreamCapability, ensureFileSystemProviderError, IFileSystemProviderCapabilitiesChangeEvent } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isAbsolutePath, dirname, basename, joinPath, IExtUri, extUri, extUriIgnorePathCase } from 'vs/base/common/resources';\nimport { localize } from 'vs/nls';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { isNonEmptyArray, coalesce } from 'vs/base/common/arrays';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { VSBuffer, VSBufferReadable, readableToBuffer, bufferToReadable, streamToBuffer, bufferToStream, VSBufferReadableStream, VSBufferReadableBufferedStream, bufferedStreamToBuffer, newWriteableBufferStream } from 'vs/base/common/buffer';\nimport { isReadableStream, transform, peekReadable, peekStream, isReadableBufferedStream } from 'vs/base/common/stream';\nimport { Queue } from 'vs/base/common/async';\nimport { CancellationTokenSource, CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { Iterable } from 'vs/base/common/iterator';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly BUFFER_SIZE = 64 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this._onDidFilesChange.fire(new FileChangesEvent(changes, this.getExtUri(provider).extUri))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tif (promise) {\n\t\t\t\t\tjoiners.push(promise);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promise.all(joiners);\n\t}\n\n\tcanHandleResource(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>();\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (isNonEmptyArray(resolveTo)) {\n\t\t\t\t\tresolveTo.forEach(uri => trie!.set(uri, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (Boolean(trie.findSuperstr(stat.resource) || trie.get(stat.resource))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: getBaseLabel(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promise.all(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promise.all(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// file cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\toptions && typeof options.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tconst stream = await this.doReadAsFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadAsFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadAsFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions & { preferUnbuffered?: boolean }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelyhood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\tlet fileStreamPromise: Promise<VSBufferReadableStream>;\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStreamPromise = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileStreamed(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStreamPromise = Promise.resolve(this.readFileBuffered(provider, resource, cancellableSource.token, options));\n\t\t\t}\n\n\t\t\tconst [fileStat, fileStream] = await Promise.all([statPromise, fileStreamPromise]);\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate async readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileOptions): Promise<VSBufferReadableStream> {\n\t\tlet buffer = await provider.readFile(resource);\n\n\t\t// respect position option\n\t\tif (options && typeof options.position === 'number') {\n\t\t\tbuffer = buffer.slice(options.position);\n\t\t}\n\n\t\t// respect length option\n\t\tif (options && typeof options.length === 'number') {\n\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\treturn bufferToStream(VSBuffer.wrap(buffer));\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (options && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new FileOperationError(localize('fileNotModifiedError', \"File not modified since\"), FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promise.all(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { extUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = extUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && extUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { extUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (extUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { extUri: IExtUri, isPathCaseSensitive: boolean } {\n\t\tconst isPathCaseSensitive = !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\n\t\treturn {\n\t\t\textUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\twhile (!extUri.isEqual(directory, dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tconst exists = await this.exists(resource);\n\t\tif (!exists) {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete non-existing file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive && exists) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: { useTrash?: boolean; recursive?: boolean; }): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number }>();\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tlet watchDisposed = false;\n\t\tlet watchDisposable = toDisposable(() => watchDisposed = true);\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\twatchDisposable = disposable;\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\treturn toDisposable(() => dispose(watchDisposable));\n\t}\n\n\tasync doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tconst watcher = this.activeWatchers.get(key) || { count: 0, disposable: provider.watch(resource, options) };\n\t\tif (!this.activeWatchers.has(key)) {\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Unref\n\t\t\twatcher.count--;\n\n\t\t\t// Dispose only when last user is reached\n\t\t\tif (watcher.count === 0) {\n\t\t\t\tdispose(watcher.disposable);\n\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { extUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\textUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.activeWatchers.forEach(watcher => dispose(watcher.disposable));\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueues: Map<string, Queue<void>> = new Map();\n\n\tprivate ensureWriteQueue(provider: IFileSystemProvider, resource: URI): Queue<void> {\n\t\tconst { extUri } = this.getExtUri(provider);\n\t\tconst queueKey = extUri.getComparisonKey(resource);\n\n\t\t// ensure to never write to the same resource without finishing\n\t\t// the one write. this ensures a write finishes consistently\n\t\t// (even with error) before another write is done.\n\t\tlet writeQueue = this.writeQueues.get(queueKey);\n\t\tif (!writeQueue) {\n\t\t\twriteQueue = new Queue<void>();\n\t\t\tthis.writeQueues.set(queueKey, writeQueue);\n\n\t\t\tconst onFinish = Event.once(writeQueue.onFinished);\n\t\t\tonFinish(() => {\n\t\t\t\tthis.writeQueues.delete(queueKey);\n\t\t\t\tdispose(writeQueue);\n\t\t\t});\n\t\t}\n\n\t\treturn writeQueue;\n\t}\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise(async (resolve, reject) => {\n\n\t\t\tstream.on('data', async chunk => {\n\n\t\t\t\t// pause stream to perform async write operation\n\t\t\t\tstream.pause();\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t// handler again before finishing.\n\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t});\n\n\t\t\tstream.on('error', error => reject(error));\n\t\t\tstream.on('end', () => resolve());\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.ensureWriteQueue(provider, resource).queue(() => this.doWriteUnbufferedQueued(provider, resource, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promise.all([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.ensureWriteQueue(targetProvider, target).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mkdir, open, close, read, write, fdatasync, Dirent, Stats } from 'fs';\nimport { promisify } from 'util';\nimport { IDisposable, Disposable, toDisposable, dispose, combinedDisposable } from 'vs/base/common/lifecycle';\nimport { FileSystemProviderCapabilities, IFileChange, IWatchOptions, IStat, FileType, FileDeleteOptions, FileOverwriteOptions, FileWriteOptions, FileOpenOptions, FileSystemProviderErrorCode, createFileSystemProviderError, FileSystemProviderError, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, FileReadStreamOptions, IFileSystemProviderWithFileFolderCopyCapability } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { statLink, unlink, move, copy, readFile, truncate, rimraf, RimRafMode, exists, readdirWithFileTypes } from 'vs/base/node/pfs';\nimport { normalize, basename, dirname } from 'vs/base/common/path';\nimport { joinPath } from 'vs/base/common/resources';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { retry, ThrottledDelayer } from 'vs/base/common/async';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { localize } from 'vs/nls';\nimport { IDiskFileChange, toFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport { FileWatcher as UnixWatcherService } from 'vs/platform/files/node/watcher/unix/watcherService';\nimport { FileWatcher as WindowsWatcherService } from 'vs/platform/files/node/watcher/win32/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ReadableStreamEvents, newWriteableStream } from 'vs/base/common/stream';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { insert } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport interface IWatcherOptions {\n\tpollingInterval?: number;\n\tusePolling: boolean;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\tbufferSize?: number;\n\twatcher?: IWatcherOptions;\n}\n\nexport class DiskFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly BUFFER_SIZE = this.options?.bufferSize || 64 * 1024;\n\n\tconstructor(\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Capabilities\n\n\tonDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await statLink(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await readdirWithFileTypes(this.toFilePath(resource));\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: Stats | Dirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to non-existing files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: this.BUFFER_SIZE\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos: Map<number, number> = new Map();\n\n\tprivate readonly writeHandles: Set<number> = new Set();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (opts.create) {\n\t\t\t\tif (isWindows && await exists(filePath)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await promisify(open)(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (opts.create) {\n\t\t\t\tthis.writeHandles.add(handle);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait promisify(fdatasync)(fd);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await promisify(close)(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(read)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await promisify(write)(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait promisify(mkdir)(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait rimraf(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait copy(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WindowsWatcherService | UnixWatcherService | NsfwWatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: { path: string, excludes: string[] }[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\tprivate recursiveWatcherLogLevelListener: IDisposable | undefined;\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts.excludes);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource); // TODO@ben ideally the same watcher can be used in both cases\n\t}\n\n\tprivate watchRecursive(resource: URI, excludes: string[]): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch = { path: this.toFilePath(resource), excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(async () => {\n\t\t\tthis.doRefreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): void {\n\n\t\t// Reuse existing\n\t\tif (this.recursiveWatcher instanceof NsfwWatcherService) {\n\t\t\tthis.recursiveWatcher.setFolders(this.recursiveFoldersToWatch);\n\t\t}\n\n\t\t// Create new\n\t\telse {\n\n\t\t\t// Dispose old\n\t\t\tdispose(this.recursiveWatcher);\n\t\t\tthis.recursiveWatcher = undefined;\n\n\t\t\t// Create new if we actually have folders to watch\n\t\t\tif (this.recursiveFoldersToWatch.length > 0) {\n\t\t\t\tlet watcherImpl: {\n\t\t\t\t\tnew(\n\t\t\t\t\t\tfolders: { path: string, excludes: string[] }[],\n\t\t\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\t\t\tverboseLogging: boolean,\n\t\t\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t\t\t): WindowsWatcherService | UnixWatcherService | NsfwWatcherService\n\t\t\t\t};\n\n\t\t\t\tlet watcherOptions: IWatcherOptions | undefined = undefined;\n\n\t\t\t\t// requires a polling watcher\n\t\t\t\tif (this.options?.watcher?.usePolling) {\n\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\twatcherOptions = this.options?.watcher;\n\t\t\t\t}\n\n\t\t\t\t// Single Folder Watcher\n\t\t\t\telse {\n\t\t\t\t\tif (this.recursiveFoldersToWatch.length === 1) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\twatcherImpl = WindowsWatcherService;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twatcherImpl = UnixWatcherService;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Multi Folder Watcher\n\t\t\t\t\telse {\n\t\t\t\t\t\twatcherImpl = NsfwWatcherService;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Create and start watching\n\t\t\t\tthis.recursiveWatcher = new watcherImpl(\n\t\t\t\t\tthis.recursiveFoldersToWatch,\n\t\t\t\t\tevent => this._onDidChangeFile.fire(toFileChanges(event)),\n\t\t\t\t\tmsg => {\n\t\t\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t\t\t},\n\t\t\t\t\tthis.logService.getLevel() === LogLevel.Trace,\n\t\t\t\t\twatcherOptions\n\t\t\t\t);\n\n\t\t\t\tif (!this.recursiveWatcherLogLevelListener) {\n\t\t\t\t\tthis.recursiveWatcherLogLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\t\t\t\tif (this.recursiveWatcher) {\n\t\t\t\t\t\t\tthis.recursiveWatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = new NodeJSWatcherService(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => {\n\t\t\t\tif (msg.type === 'error') {\n\t\t\t\t\tthis._onDidWatchErrorOccur.fire(msg.message);\n\t\t\t\t}\n\n\t\t\t\tthis.logService[msg.type](msg.message);\n\t\t\t},\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\t//#endregion\n\n\tdispose(): void {\n\t\tsuper.dispose();\n\n\t\tdispose(this.recursiveWatcher);\n\t\tthis.recursiveWatcher = undefined;\n\n\t\tdispose(this.recursiveWatcherLogLevelListener);\n\t\tthis.recursiveWatcherLogLevelListener = undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as pfs from 'vs/base/node/pfs';\nimport { createHash } from 'crypto';\nimport { IExtensionManagementService, ILocalExtension, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { Queue } from 'vs/base/common/async';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isValidLocalization, ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tprivate readonly _onDidLanguagesChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidLanguagesChange: Event<void> = this._onDidLanguagesChange.event;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\n\t\tthis._register(extensionManagementService.onDidInstallExtension(({ local }) => this.onDidInstallExtension(local)));\n\t\tthis._register(extensionManagementService.onDidUninstallExtension(({ identifier }) => this.onDidUninstallExtension(identifier)));\n\t}\n\n\tgetLanguageIds(): Promise<string[]> {\n\t\treturn this.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\t\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\t\t\treturn distinct(languages);\n\t\t\t});\n\t}\n\n\tprivate onDidInstallExtension(extension: ILocalExtension | undefined): void {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.debug('Adding language packs from the extension', extension.identifier.id);\n\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(identifier: IExtensionIdentifier): void {\n\t\tthis.cache.getLanguagePacks()\n\t\t\t.then(languagePacks => {\n\t\t\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, identifier)))) {\n\t\t\t\t\tthis.logService.debug('Removing language packs from the extension', identifier.id);\n\t\t\t\t\tthis.update().then(changed => { if (changed) { this._onDidLanguagesChange.fire(); } });\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tupdate(): Promise<boolean> {\n\t\treturn Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()])\n\t\t\t.then(([current, installed]) => this.cache.update(installed)\n\t\t\t\t.then(updated => !equals(Object.keys(current), Object.keys(updated))));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn pfs.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn pfs.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogLevel, ILogService, DelegatedLogService } from 'vs/platform/log/common/log';\nimport { Event } from 'vs/base/common/event';\n\nexport class LoggerChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': this.service.setLevel(arg); return Promise.resolve();\n\t\t\tcase 'consoleLog': this.consoleLog(arg[0], arg[1]); return Promise.resolve();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate consoleLog(severity: string, args: string[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (severity) {\n\t\t\tcase 'error':\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase 'warn':\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase 'info':\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n}\n\nexport class LoggerChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLoggerChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n\tconsoleLog(severity: string, args: string[]): void {\n\t\tthis.channel.call('consoleLog', [severity, args]);\n\t}\n}\n\nexport class FollowerLogService extends DelegatedLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private parent: LoggerChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport { ILogService, LogLevel, AbstractLogService } from 'vs/platform/log/common/log';\nimport * as spdlog from 'spdlog';\n\nasync function createSpdLogLogger(processName: string, logsFolder: string): Promise<spdlog.RotatingLogger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setAsyncMode(8192, 500);\n\t\tconst logfilePath = path.join(logsFolder, `${processName}.log`);\n\t\treturn _spdlog.createRotatingLoggerAsync(processName, logfilePath, 1024 * 1024 * 5, 6);\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\nexport function createRotatingLogger(name: string, filename: string, filesize: number, filecount: number): spdlog.RotatingLogger {\n\tconst _spdlog: typeof spdlog = require.__$__nodeRequire('spdlog');\n\treturn _spdlog.createRotatingLogger(name, filename, filesize, filecount);\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.RotatingLogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogService extends AbstractLogService implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate buffer: ILog[] = [];\n\tprivate _loggerCreationPromise: Promise<void> | undefined = undefined;\n\tprivate _logger: spdlog.RotatingLogger | undefined;\n\n\tconstructor(private readonly name: string, private readonly logsFolder: string, level: LogLevel) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._createSpdLogLogger();\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _createSpdLogLogger(): Promise<void> {\n\t\tif (!this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise = createSpdLogLogger(this.name, this.logsFolder)\n\t\t\t\t.then(logger => {\n\t\t\t\t\tif (logger) {\n\t\t\t\t\t\tthis._logger = logger;\n\t\t\t\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\t\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\t\t\t\tlog(this._logger, level, message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.buffer = [];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\treturn this._loggerCreationPromise;\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, this.format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, this.format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis._log(LogLevel.Error, this.format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, this.format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, this.format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else if (this._loggerCreationPromise) {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t\tthis._loggerCreationPromise = undefined;\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n\n\tprivate format(args: any): string {\n\t\tlet result = '';\n\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tlet a = args[i];\n\n\t\t\tif (typeof a === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\ta = JSON.stringify(a);\n\t\t\t\t} catch (e) { }\n\t\t\t}\n\n\t\t\tresult += (i > 0 ? ' ' : '') + a;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport BaseSeverity from 'vs/base/common/severity';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAction } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport import Severity = BaseSeverity;\n\nexport const INotificationService = createDecorator<INotificationService>('notificationService');\n\nexport type NotificationMessage = string | Error;\n\nexport interface INotificationProperties {\n\n\t/**\n\t * Sticky notifications are not automatically removed after a certain timeout. By\n\t * default, notifications with primary actions and severity error are always sticky.\n\t */\n\treadonly sticky?: boolean;\n\n\t/**\n\t * Silent notifications are not shown to the user unless the notification center\n\t * is opened. The status bar will still indicate all number of notifications to\n\t * catch some attention.\n\t */\n\treadonly silent?: boolean;\n\n\t/**\n\t * Adds an action to never show the notification again. The choice will be persisted\n\t * such as future requests will not cause the notification to show again.\n\t */\n\treadonly neverShowAgain?: INeverShowAgainOptions;\n}\n\nexport enum NeverShowAgainScope {\n\n\t/**\n\t * Will never show this notification on the current workspace again.\n\t */\n\tWORKSPACE,\n\n\t/**\n\t * Will never show this notification on any workspace again.\n\t */\n\tGLOBAL\n}\n\nexport interface INeverShowAgainOptions {\n\n\t/**\n\t * The id is used to persist the selection of not showing the notification again.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * By default the action will show up as primary action. Setting this to true will\n\t * make it a secondary action instead.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to persist the choice in the current workspace or for all workspaces. By\n\t * default it will be persisted for all workspaces (= `NeverShowAgainScope.GLOBAL`).\n\t */\n\treadonly scope?: NeverShowAgainScope;\n}\n\nexport interface INotification extends INotificationProperties {\n\n\t/**\n\t * The severity of the notification. Either `Info`, `Warning` or `Error`.\n\t */\n\treadonly severity: Severity;\n\n\t/**\n\t * The message of the notification. This can either be a `string` or `Error`. Messages\n\t * can optionally include links in the format: `[text](link)`\n\t */\n\treadonly message: NotificationMessage;\n\n\t/**\n\t * The source of the notification appears as additional information.\n\t */\n\treadonly source?: string;\n\n\t/**\n\t * Actions to show as part of the notification. Primary actions show up as\n\t * buttons as part of the message and will close the notification once clicked.\n\t *\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t */\n\tactions?: INotificationActions;\n\n\t/**\n\t * The initial set of progress properties for the notification. To update progress\n\t * later on, access the `INotificationHandle.progress` property.\n\t */\n\treadonly progress?: INotificationProgressProperties;\n}\n\nexport interface INotificationActions {\n\n\t/**\n\t * Primary actions show up as buttons as part of the message and will close\n\t * the notification once clicked.\n\t */\n\treadonly primary?: ReadonlyArray<IAction>;\n\n\t/**\n\t * Secondary actions are meant to provide additional configuration or context\n\t * for the notification and will show up less prominent. A notification does not\n\t * close automatically when invoking a secondary action.\n\t */\n\treadonly secondary?: ReadonlyArray<IAction>;\n}\n\nexport interface INotificationProgressProperties {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\treadonly infinite?: boolean;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\treadonly total?: number;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\treadonly worked?: number;\n}\n\nexport interface INotificationProgress {\n\n\t/**\n\t * Causes the progress bar to spin infinitley.\n\t */\n\tinfinite(): void;\n\n\t/**\n\t * Indicate the total amount of work.\n\t */\n\ttotal(value: number): void;\n\n\t/**\n\t * Indicate that a specific chunk of work is done.\n\t */\n\tworked(value: number): void;\n\n\t/**\n\t * Indicate that the long running operation is done.\n\t */\n\tdone(): void;\n}\n\nexport interface INotificationHandle {\n\n\t/**\n\t * Will be fired once the notification is closed.\n\t */\n\treadonly onDidClose: Event<void>;\n\n\t/**\n\t * Will be fired whenever the visibility of the notification changes.\n\t * A notification can either be visible as toast or inside the notification\n\t * center if it is visible.\n\t */\n\treadonly onDidChangeVisibility: Event<boolean>;\n\n\t/**\n\t * Allows to indicate progress on the notification even after the\n\t * notification is already visible.\n\t */\n\treadonly progress: INotificationProgress;\n\n\t/**\n\t * Allows to update the severity of the notification.\n\t */\n\tupdateSeverity(severity: Severity): void;\n\n\t/**\n\t * Allows to update the message of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateMessage(message: NotificationMessage): void;\n\n\t/**\n\t * Allows to update the actions of the notification even after the\n\t * notification is already visible.\n\t */\n\tupdateActions(actions?: INotificationActions): void;\n\n\t/**\n\t * Hide the notification and remove it from the notification center.\n\t */\n\tclose(): void;\n}\n\nexport interface IPromptChoice {\n\n\t/**\n\t * Label to show for the choice to the user.\n\t */\n\treadonly label: string;\n\n\t/**\n\t * Primary choices show up as buttons in the notification below the message.\n\t * Secondary choices show up under the gear icon in the header of the notification.\n\t */\n\treadonly isSecondary?: boolean;\n\n\t/**\n\t * Whether to keep the notification open after the choice was selected\n\t * by the user. By default, will close the notification upon click.\n\t */\n\treadonly keepOpen?: boolean;\n\n\t/**\n\t * Triggered when the user selects the choice.\n\t */\n\trun: () => void;\n}\n\nexport interface IPromptOptions extends INotificationProperties {\n\n\t/**\n\t * Will be called if the user closed the notification without picking\n\t * any of the provided choices.\n\t */\n\tonCancel?: () => void;\n}\n\nexport interface IStatusMessageOptions {\n\n\t/**\n\t * An optional timeout after which the status message should show. By default\n\t * the status message will show immediately.\n\t */\n\treadonly showAfter?: number;\n\n\t/**\n\t * An optional timeout after which the status message is to be hidden. By default\n\t * the status message will not hide until another status message is displayed.\n\t */\n\treadonly hideAfter?: number;\n}\n\nexport enum NotificationsFilter {\n\n\t/**\n\t * No filter is enabled.\n\t */\n\tOFF,\n\n\t/**\n\t * All notifications are configured as silent. See\n\t * `INotificationProperties.silent` for more info.\n\t */\n\tSILENT,\n\n\t/**\n\t * All notifications are silent except error notifications.\n\t*/\n\tERROR\n}\n\n/**\n * A service to bring up notifications and non-modal prompts.\n *\n * Note: use the `IDialogService` for a modal way to ask the user for input.\n */\nexport interface INotificationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Show the provided notification to the user. The returned `INotificationHandle`\n\t * can be used to control the notification afterwards.\n\t *\n\t * **Note:** If your intent is to show a message with actions to the user, consider\n\t * the `INotificationService.prompt()` method instead which are optimized for\n\t * this usecase and much easier to use!\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tnotify(notification: INotification): INotificationHandle;\n\n\t/**\n\t * A convenient way of reporting infos. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\tinfo(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting warnings. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\twarn(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * A convenient way of reporting errors. Use the `INotificationService.notify`\n\t * method if you need more control over the notification.\n\t */\n\terror(message: NotificationMessage | NotificationMessage[]): void;\n\n\t/**\n\t * Shows a prompt in the notification area with the provided choices. The prompt\n\t * is non-modal. If you want to show a modal dialog instead, use `IDialogService`.\n\t *\n\t * @param severity the severity of the notification. Either `Info`, `Warning` or `Error`.\n\t * @param message the message to show as status.\n\t * @param choices options to be choosen from.\n\t * @param options provides some optional configuration options.\n\t *\n\t * @returns a handle on the notification to e.g. hide it or update message, buttons, etc.\n\t */\n\tprompt(severity: Severity, message: string, choices: IPromptChoice[], options?: IPromptOptions): INotificationHandle;\n\n\t/**\n\t * Shows a status message in the status area with the provided text.\n\t *\n\t * @param message the message to show as status\n\t * @param options provides some optional configuration options\n\t *\n\t * @returns a disposable to hide the status message\n\t */\n\tstatus(message: NotificationMessage, options?: IStatusMessageOptions): IDisposable;\n\n\t/**\n\t * Allows to configure a filter for notifications.\n\t *\n\t * @param filter the filter to use\n\t */\n\tsetFilter(filter: NotificationsFilter): void;\n}\n\nexport class NoOpNotification implements INotificationHandle {\n\n\treadonly progress = new NoOpProgress();\n\n\treadonly onDidClose = Event.None;\n\treadonly onDidChangeVisibility = Event.None;\n\n\tupdateSeverity(severity: Severity): void { }\n\tupdateMessage(message: NotificationMessage): void { }\n\tupdateActions(actions?: INotificationActions): void { }\n\n\tclose(): void { }\n}\n\nexport class NoOpProgress implements INotificationProgress {\n\tinfinite(): void { }\n\tdone(): void { }\n\ttotal(value: number): void { }\n\tworked(value: number): void { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/platform/product/common/productService';\nimport { isWeb } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, joinPath } from 'vs/base/common/resources';\n\nlet product: IProductConfiguration;\n\n// Web or Native (sandbox TODO@sandbox need to add all properties of product.json)\nif (isWeb || typeof require === 'undefined' || typeof require.__$__nodeRequire !== 'function') {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.50.0-dev',\n\t\t\tnameShort: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tnameLong: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/master/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'ms-vscode.references-view',\n\t\t\t\t'ms-vscode.github-browser'\n\t\t\t],\n\t\t});\n\t}\n\t// NOTE@coder: Add the ability to inject settings from the server.\n\tconst el = document.getElementById('vscode-remote-product-configuration');\n\tconst rawProductConfiguration = el && el.getAttribute('data-settings');\n\tif (rawProductConfiguration) {\n\t\tObject.assign(product, JSON.parse(rawProductConfiguration));\n\t}\n}\n\n// Native (non-sandboxed)\nelse {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport * as crypto from 'crypto';\nimport * as paths from 'vs/base/node/paths';\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as resources from 'vs/base/common/resources';\nimport { memoize } from 'vs/base/common/decorators';\nimport product from 'vs/platform/product/common/product';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { isWindows, Platform, platform } from 'vs/base/common/platform';\nimport { FileAccess } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\n\nexport class NativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\t@memoize\n\tget appRoot(): string { return path.dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\treadonly logsPath: string;\n\n\t@memoize\n\tget userHome(): URI { return URI.file(os.homedir()); }\n\n\t@memoize\n\tget userDataPath(): string {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'user-data');\n\t\t}\n\n\t\treturn parseUserDataDir(this._args, process);\n\t}\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(path.join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(os.tmpdir()); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'sync'); }\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(path.join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return resources.joinPath(URI.file(path.join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return resources.joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(path.join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return resources.joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this._args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget backupHome(): string { return path.join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return path.join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(path.join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return path.join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['builtin-extensions-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t\t}\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-download-dir'], process);\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t} else {\n\t\t\treturn path.join(this.userDataPath, 'CachedExtensionVSIXs');\n\t\t}\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst fromArgs = parsePathArg(this._args['extensions-dir'], process);\n\n\t\tif (fromArgs) {\n\t\t\treturn fromArgs;\n\t\t}\n\n\t\tconst vscodeExtensions = process.env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn path.join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn resources.joinPath(this.userHome, product.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize get extraExtensionPaths(): string[] {\n\t\treturn (this._args['extra-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\t@memoize get extraBuiltinExtensionPaths(): string[] {\n\t\treturn (this._args['extra-builtin-extensions-dir'] || []).map((p) => <string>parsePathArg(p, process));\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst s = this._args.extensionDevelopmentPath;\n\t\tif (Array.isArray(s)) {\n\t\t\treturn s.map(p => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(p)) {\n\t\t\t\t\treturn URI.parse(p);\n\t\t\t\t}\n\t\t\t\treturn URI.file(path.normalize(p));\n\t\t\t});\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst s = this._args.extensionTestsPath;\n\t\tif (s) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(s)) {\n\t\t\t\treturn URI.parse(s);\n\t\t\t}\n\t\t\treturn URI.file(path.normalize(s));\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this._args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\t\tconst disableExtensions = this._args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this._args, this.isBuilt); }\n\n\tget isBuilt(): boolean { return !process.env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this._args.verbose; }\n\tget logLevel(): string | undefined { return this._args.log; }\n\n\t@memoize\n\tget mainIPCHandle(): string { return getIPCHandle(this.userDataPath, 'main'); }\n\n\t@memoize\n\tget sharedIPCHandle(): string { return getIPCHandle(this.userDataPath, 'shared'); }\n\n\t@memoize\n\tget nodeCachedDataDir(): string | undefined { return process.env['VSCODE_NODE_CACHED_DATA_DIR'] || undefined; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return resources.joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget disableUpdates(): boolean { return !!this._args['disable-updates']; }\n\tget crashReporterId(): string | undefined { return this._args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this._args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this._args['driver']; }\n\tget driverVerbose(): boolean { return !!this._args['driver-verbose']; }\n\n\tget disableTelemetry(): boolean { return !!this._args['disable-telemetry']; }\n\n\tget sandbox(): boolean { return !!this._args['__sandbox']; }\n\n\tconstructor(private _args: NativeParsedArgs) {\n\t\tif (!process.env['VSCODE_LOGS']) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tprocess.env['VSCODE_LOGS'] = path.join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\tthis.logsPath = process.env['VSCODE_LOGS']!;\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const xdgRuntimeDir = process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nfunction getNixIPCHandle(userDataPath: string, type: string): string {\n\tconst vscodePortable = process.env['VSCODE_PORTABLE'];\n\n\tlet result: string;\n\tif (xdgRuntimeDir && !vscodePortable) {\n\t\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex').substr(0, 8);\n\t\tresult = path.join(xdgRuntimeDir, `vscode-${scope}-${product.version}-${type}.sock`);\n\t} else {\n\t\tresult = path.join(userDataPath, `${product.version}-${type}.sock`);\n\t}\n\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number') {\n\t\tif (result.length >= limit) {\n\t\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\t\tconsole.warn(`WARNING: IPC handle \"${result}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction getWin32IPCHandle(userDataPath: string, type: string): string {\n\tconst scope = crypto.createHash('md5').update(userDataPath).digest('hex');\n\n\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${product.version}-${type}-sock`;\n}\n\nfunction getIPCHandle(userDataPath: string, type: string): string {\n\tif (isWindows) {\n\t\treturn getWin32IPCHandle(userDataPath, type);\n\t}\n\n\treturn getNixIPCHandle(userDataPath, type);\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugPort(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugPort(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild);\n}\n\nfunction parseDebugPort(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\n\treturn { port, break: brk, debugId };\n}\n\nexport function parsePathArg(arg: string | undefined, process: NodeJS.Process): string | undefined {\n\tif (!arg) {\n\t\treturn undefined;\n\t}\n\n\t// Determine if the arg is relative or absolute, if relative use the original CWD\n\t// (VSCODE_CWD), not the potentially overridden one (process.cwd()).\n\tconst resolved = path.resolve(arg);\n\n\tif (path.normalize(arg) === resolved) {\n\t\treturn resolved;\n\t}\n\n\treturn path.resolve(process.env['VSCODE_CWD'] || process.cwd(), arg);\n}\n\nexport function parseUserDataDir(args: NativeParsedArgs, process: NodeJS.Process): string {\n\treturn parsePathArg(args['user-data-dir'], process) || path.resolve(paths.getDefaultUserDataPath(process.platform));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n\nexport interface IBuiltInExtension {\n\treadonly name: string;\n\treadonly version: string;\n\treadonly repo: string;\n\treadonly metadata: any;\n}\n\nexport type ConfigurationSyncStore = {\n\tweb?: Partial<Omit<ConfigurationSyncStore, 'web'>>,\n\turl: string,\n\tinsidersUrl: string,\n\tstableUrl: string,\n\tcanSwitch: boolean,\n\tauthenticationProviders: IStringDictionary<{ scopes: string[] }>\n};\n\nexport interface IProductConfiguration {\n\treadonly codeServerVersion?: string;\n\n\treadonly version: string;\n\treadonly date?: string;\n\treadonly quality?: string;\n\treadonly commit?: string;\n\n\treadonly nameShort: string;\n\treadonly nameLong: string;\n\n\treadonly win32AppUserModelId?: string;\n\treadonly win32MutexName?: string;\n\treadonly applicationName: string;\n\n\treadonly urlProtocol: string;\n\treadonly dataFolderName: string;\n\n\treadonly builtInExtensions?: IBuiltInExtension[];\n\n\treadonly downloadUrl?: string;\n\treadonly updateUrl?: string;\n\treadonly target?: string;\n\n\treadonly settingsSearchBuildId?: number;\n\treadonly settingsSearchUrl?: string;\n\n\treadonly tasConfig?: {\n\t\tendpoint: string;\n\t\ttelemetryEventName: string;\n\t\tfeaturesTelemetryPropertyName: string;\n\t\tassignmentContextTelemetryPropertyName: string;\n\t};\n\n\treadonly experimentsUrl?: string;\n\n\treadonly extensionsGallery?: {\n\t\treadonly serviceUrl: string;\n\t\treadonly itemUrl: string;\n\t\treadonly controlUrl: string;\n\t\treadonly recommendationsUrl: string;\n\t};\n\n\treadonly extensionTips?: { [id: string]: string; };\n\treadonly extensionImportantTips?: IStringDictionary<ImportantExtensionTip>;\n\treadonly configBasedExtensionTips?: { [id: string]: IConfigBasedExtensionTip; };\n\treadonly exeBasedExtensionTips?: { [id: string]: IExeBasedExtensionTip; };\n\treadonly remoteExtensionTips?: { [remoteName: string]: IRemoteExtensionTip; };\n\treadonly extensionKeywords?: { [extension: string]: readonly string[]; };\n\treadonly keymapExtensionTips?: readonly string[];\n\n\treadonly crashReporter?: {\n\t\treadonly companyName: string;\n\t\treadonly productName: string;\n\t};\n\n\treadonly enableTelemetry?: boolean;\n\treadonly aiConfig?: {\n\t\treadonly asimovKey: string;\n\t};\n\n\treadonly sendASmile?: {\n\t\treadonly reportIssueUrl: string,\n\t\treadonly requestFeatureUrl: string\n\t};\n\n\treadonly documentationUrl?: string;\n\treadonly releaseNotesUrl?: string;\n\treadonly keyboardShortcutsUrlMac?: string;\n\treadonly keyboardShortcutsUrlLinux?: string;\n\treadonly keyboardShortcutsUrlWin?: string;\n\treadonly introductoryVideosUrl?: string;\n\treadonly tipsAndTricksUrl?: string;\n\treadonly newsletterSignupUrl?: string;\n\treadonly twitterUrl?: string;\n\treadonly requestFeatureUrl?: string;\n\treadonly reportIssueUrl?: string;\n\treadonly licenseUrl?: string;\n\treadonly privacyStatementUrl?: string;\n\treadonly telemetryOptOutUrl?: string;\n\n\treadonly npsSurveyUrl?: string;\n\treadonly surveys?: readonly ISurveyData[];\n\n\treadonly checksums?: { [path: string]: string; };\n\treadonly checksumFailMoreInfoUrl?: string;\n\n\treadonly appCenter?: IAppCenterConfiguration;\n\n\treadonly portable?: string;\n\n\treadonly extensionKind?: { readonly [extensionId: string]: ExtensionKind[]; };\n\treadonly extensionAllowedProposedApi?: readonly string[];\n\n\treadonly msftInternalDomains?: string[];\n\treadonly linkProtectionTrustedDomains?: readonly string[];\n\n\treadonly 'configurationSync.store'?: ConfigurationSyncStore;\n}\n\nexport type ImportantExtensionTip = { name: string; languages?: string[]; pattern?: string; isExtensionPack?: boolean };\n\nexport interface IAppCenterConfiguration {\n\treadonly 'win32-ia32': string;\n\treadonly 'win32-x64': string;\n\treadonly 'linux-x64': string;\n\treadonly 'darwin': string;\n}\n\nexport interface IConfigBasedExtensionTip {\n\tconfigPath: string;\n\tconfigName: string;\n\trecommendations: IStringDictionary<{ name: string, remotes?: string[], important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IExeBasedExtensionTip {\n\tfriendlyName: string;\n\twindowsPath?: string;\n\timportant?: boolean;\n\trecommendations: IStringDictionary<{ name: string, important?: boolean, isExtensionPack?: boolean }>;\n}\n\nexport interface IRemoteExtensionTip {\n\tfriendlyName: string;\n\textensionId: string;\n}\n\nexport interface ISurveyData {\n\tsurveyId: string;\n\tsurveyUrl: string;\n\tlanguageId: string;\n\teditCount: number;\n\tuserProbability: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Types from 'vs/base/common/types';\nimport * as Assert from 'vs/base/common/assert';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { Event, Emitter } from 'vs/base/common/event';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport * as types from 'vs/base/common/types';\nimport { IJSONContributionRegistry, Extensions as JSONExtensions } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\tonDidUpdateConfiguration: Event<string[]>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema };\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\tscope?: ConfigurationScope;\n\tincluded?: boolean;\n\ttags?: string[];\n\tdisallowSyncIgnore?: boolean;\n}\n\nexport interface IConfigurationExtensionInfo {\n\tid: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: { [path: string]: IConfigurationPropertySchema; };\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IConfigurationExtensionInfo;\n}\n\ntype SettingProperties = { [key: string]: any };\n\nexport const allSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: SettingProperties, patternProperties: SettingProperties } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly defaultValues: IStringDictionary<any>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly excludedConfigurationProperties: { [qualifiedKey: string]: IJSONSchema };\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration: Emitter<string[]> = new Emitter<string[]>();\n\treadonly onDidUpdateConfiguration: Event<string[]> = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.defaultValues = {};\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic registerDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.defaultValues[key] = defaultConfiguration[key];\n\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tconst property: IConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: this.defaultValues[key],\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(overrideIdentifierFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IStringDictionary<any>[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const defaultConfiguration of defaultConfigurations) {\n\t\t\tfor (const key in defaultConfiguration) {\n\t\t\t\tproperties.push(key);\n\t\t\t\tdelete this.defaultValues[key];\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire(properties);\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property = properties[key];\n\n\t\t\t\t// update default value\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): { [qualifiedKey: string]: IConfigurationPropertySchema } {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IConfigurationPropertySchema): void {\n\t\tlet defaultValue = this.defaultValues[key];\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.default;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t}\n}\n\nconst OVERRIDE_PROPERTY = '\\\\[.*\\\\]$';\nexport const OVERRIDE_PROPERTY_PATTERN = new RegExp(OVERRIDE_PROPERTY);\n\nexport function overrideIdentifierFromKey(key: string): string {\n\treturn key.substring(1, key.length - 1);\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (OVERRIDE_PROPERTY_PATTERN.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as objects from 'vs/base/common/objects';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions, OVERRIDE_PROPERTY_PATTERN, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<T>;\n\n\treloadConfiguration(folder?: IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function compare(from: IConfigurationModel | undefined, to: IConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst overrides: [string, string[]][] = [];\n\tconst byOverrideIdentifier = (overrides: IOverrides[]): IStringDictionary<IOverrides> => {\n\t\tconst result: IStringDictionary<IOverrides> = {};\n\t\tfor (const override of overrides) {\n\t\t\tfor (const identifier of override.identifiers) {\n\t\t\t\tresult[keyFromOverrideIdentifier(identifier)] = override;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\tconst toOverridesByIdentifier: IStringDictionary<IOverrides> = to ? byOverrideIdentifier(to.overrides) : {};\n\tconst fromOverridesByIdentifier: IStringDictionary<IOverrides> = from ? byOverrideIdentifier(from.overrides) : {};\n\n\tif (Object.keys(toOverridesByIdentifier).length) {\n\t\tfor (const key of added) {\n\t\t\tconst override = toOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\tif (Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of removed) {\n\t\t\tconst override = fromOverridesByIdentifier[key];\n\t\t\tif (override) {\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), override.keys]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (Object.keys(toOverridesByIdentifier).length && Object.keys(fromOverridesByIdentifier).length) {\n\t\tfor (const key of updated) {\n\t\t\tconst fromOverride = fromOverridesByIdentifier[key];\n\t\t\tconst toOverride = toOverridesByIdentifier[key];\n\t\t\tif (fromOverride && toOverride) {\n\t\t\t\tconst result = compare({ contents: fromOverride.contents, keys: fromOverride.keys, overrides: [] }, { contents: toOverride.contents, keys: toOverride.keys, overrides: [] });\n\t\t\t\toverrides.push([overrideIdentifierFromKey(key), [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nexport function toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\tconst overrides: IOverrides[] = [];\n\tfor (const key of Object.keys(raw)) {\n\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\tconst overrideRaw: any = {};\n\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t}\n\t\t\toverrides.push({\n\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t});\n\t\t}\n\t}\n\treturn overrides;\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getConfigurationKeys(): string[] {\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(properties);\n}\n\nexport function getDefaultValues(): any {\n\tconst valueTreeRoot: any = Object.create(null);\n\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\n\tfor (let key in properties) {\n\t\tlet value = properties[key].default;\n\t\taddToValueTree(valueTreeRoot, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t}\n\n\treturn valueTreeRoot;\n}\n\nexport function keyFromOverrideIdentifier(overrideIdentifier: string): string {\n\treturn `[${overrideIdentifier}]`;\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as json from 'vs/base/common/json';\nimport { ResourceMap, getOrSet } from 'vs/base/common/map';\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as objects from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { OVERRIDE_PROPERTY_PATTERN, ConfigurationScope, IConfigurationRegistry, Extensions, IConfigurationPropertySchema, overrideIdentifierFromKey } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IOverrides, addToValueTree, toValuesTree, IConfigurationModel, getConfigurationValue, IConfigurationOverrides, IConfigurationData, getDefaultValues, getConfigurationKeys, removeFromValueTree, toOverrides, IConfigurationValue, ConfigurationTarget, compare, IConfigurationChangeEvent, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { dirname } from 'vs/base/common/resources';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\n\tconstructor(\n\t\tprivate _contents: any = {},\n\t\tprivate _keys: string[] = [],\n\t\tprivate _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.keys;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.indexOf(identifier) !== -1) {\n\t\t\t\treturn override.contents;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor() {\n\t\tconst contents = getDefaultValues();\n\t\tconst keys = getConfigurationKeys();\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: [overrideIdentifierFromKey(key).trim()],\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string, private _scopes?: ConfigurationScope[]) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parseContent(content: string | null | undefined): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any): void {\n\t\tthis._raw = raw;\n\t\tconst configurationModel = this.doParseRaw(raw);\n\t\tthis._configurationModel = new ConfigurationModel(configurationModel.contents, configurationModel.keys, configurationModel.overrides);\n\t}\n\n\tpublic parse(): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw);\n\t\t}\n\t}\n\n\tprotected doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any): IConfigurationModel {\n\t\tif (this._scopes) {\n\t\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\t\traw = this.filterByScope(raw, configurationProperties, true, this._scopes);\n\t\t}\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides: IOverrides[] = toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides };\n\t}\n\n\tprivate filterByScope(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }, filterOverriddenProperties: boolean, scopes: ConfigurationScope[]): {} {\n\t\tconst result: any = {};\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_PATTERN.test(key) && filterOverriddenProperties) {\n\t\t\t\tresult[key] = this.filterByScope(properties[key], configurationProperties, false, scopes);\n\t\t\t} else {\n\t\t\t\tconst scope = this.getScope(key, configurationProperties);\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || scopes.indexOf(scope) !== -1) {\n\t\t\t\t\tresult[key] = properties[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getScope(key: string, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema }): ConfigurationScope | undefined {\n\t\tconst propertySchema = configurationProperties[key];\n\t\treturn propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t}\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString(), this.scopes);\n\t\tthis._register(this.fileService.watch(dirname(this.userSettingsResource)));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parseContent(content.value.toString() || '{}');\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treprocess(): ConfigurationModel {\n\t\tthis.parser.parse();\n\t\treturn this.parser.configurationModel;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = keys\n\t\t\t.filter(key => OVERRIDE_PROPERTY_PATTERN.test(key))\n\t\t\t.map(key => {\n\t\t\t\tconst overrideIdentifier = overrideIdentifierFromKey(key);\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\treturn [overrideIdentifier, keys];\n\t\t\t});\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, public source: ConfigurationTarget, public sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, IConfigurationChangeEvent, IConfigurationOverrides, ConfigurationTarget, isConfigurationOverrides, IConfigurationData, IConfigurationValue, IConfigurationChange } from 'vs/platform/configuration/common/configuration';\nimport { DefaultConfigurationModel, Configuration, ConfigurationModel, ConfigurationChangeEvent, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { RunOnceScheduler } from 'vs/base/common/async';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(configurationProperties => this.onDidDefaultConfigurationChange(configurationProperties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(keys: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), keys);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration)\n\t.registerConfiguration({\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\")\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\")\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\")\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\")\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)\")\n\t\t\t}\n\t\t}\n\t});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Event } from 'vs/base/common/event';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { VSBuffer, bufferToStream, streamToBuffer } from 'vs/base/common/buffer';\n\ntype RequestResponse = [\n\t{\n\t\theaders: IHeaders;\n\t\tstatusCode?: number;\n\t},\n\tVSBuffer\n];\n\nexport class RequestChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IRequestService) { }\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'request': return this.service.request(args[0], CancellationToken.None)\n\t\t\t\t.then(async ({ res, stream }) => {\n\t\t\t\t\tconst buffer = await streamToBuffer(stream);\n\t\t\t\t\treturn <RequestResponse>[{ statusCode: res.statusCode, headers: res.headers }, buffer];\n\t\t\t\t});\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class RequestChannelClient {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tasync request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn RequestChannelClient.request(this.channel, options, token);\n\t}\n\n\tstatic async request(channel: IChannel, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tconst [res, buffer] = await channel.call<RequestResponse>('request', [options]);\n\t\treturn { res, stream: bufferToStream(buffer) };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Url, parse as parseUrl } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope } from 'vs/platform/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { isUUID, generateUuid } from 'vs/base/common/uuid';\nimport { VSBuffer } from 'vs/base/common/buffer';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateService = createDecorator<IStateService>('stateService');\n\nexport interface IStateService {\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tremoveItem(key: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { writeFileSync, readFile } from 'vs/base/node/pfs';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ntype StorageDatabase = { [key: string]: any; };\n\nexport class FileStorage {\n\n\tprivate _database: StorageDatabase | null = null;\n\tprivate lastFlushedSerializedDatabase: string | null = null;\n\n\tconstructor(private dbPath: string, private onError: (error: Error) => void) { }\n\n\tprivate get database(): StorageDatabase {\n\t\tif (!this._database) {\n\t\t\tthis._database = this.loadSync();\n\t\t}\n\n\t\treturn this._database;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tconst database = await this.loadAsync();\n\n\t\tif (this._database) {\n\t\t\treturn; // return if database was already loaded\n\t\t}\n\n\t\tthis._database = database;\n\t}\n\n\tprivate loadSync(): StorageDatabase {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = fs.readFileSync(this.dbPath).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate async loadAsync(): Promise<StorageDatabase> {\n\t\ttry {\n\t\t\tthis.lastFlushedSerializedDatabase = (await readFile(this.dbPath)).toString();\n\n\t\t\treturn JSON.parse(this.lastFlushedSerializedDatabase);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.database[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\n\t\t// Remove an item when it is undefined or null\n\t\tif (isUndefinedOrNull(data)) {\n\t\t\treturn this.removeItem(key);\n\t\t}\n\n\t\t// Shortcut for primitives that did not change\n\t\tif (typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean') {\n\t\t\tif (this.database[key] === data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.database[key] = data;\n\t\tthis.saveSync();\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.database[key])) {\n\t\t\tthis.database[key] = undefined;\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate saveSync(): void {\n\t\tconst serializedDatabase = JSON.stringify(this.database, null, 4);\n\t\tif (serializedDatabase === this.lastFlushedSerializedDatabase) {\n\t\t\treturn; // return early if the database has not changed\n\t\t}\n\n\t\ttry {\n\t\t\twriteFileSync(this.dbPath, serializedDatabase); // permission issue can happen here\n\t\t\tthis.lastFlushedSerializedDatabase = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.onError(error);\n\t\t}\n\t}\n}\n\nexport class StateService implements IStateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService logService: ILogService\n\t) {\n\t\tthis.fileStorage = new FileStorage(path.join(environmentService.userDataPath, StateService.STATE_FILE), error => logService.error(error));\n\t}\n\n\tinit(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue: T | undefined): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\tNONE = 0,\n\tSHUTDOWN = 1\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IWorkspaceStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a boolean.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined. The element\n\t * will be converted to a number using parseInt with a base of 10.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be converted to a string.\n\t * Storing either undefined or null will remove the entry under the key.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> | void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t *\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the onWillSaveState to ask\n\t * everyone for latest state.\n\t */\n\tflush(): void;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport interface IWorkspaceStorageChangeEvent {\n\treadonly key: string;\n\treadonly scope: StorageScope;\n}\n\nexport class InMemoryStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<IWorkspaceStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprotected readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate readonly globalCache = new Map<string, string>();\n\tprivate readonly workspaceCache = new Map<string, string>();\n\n\tprivate getCache(scope: StorageScope): Map<string, string> {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalCache : this.workspaceCache;\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\tconst value = this.getCache(scope).get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope): Promise<void> {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.remove(key, scope);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.getCache(scope).get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\t// Update in cache\n\t\tthis.getCache(scope).set(key, valueStr);\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tremove(key: string, scope: StorageScope): Promise<void> {\n\t\tconst wasDeleted = this.getCache(scope).delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn Promise.resolve(); // Return early if value already deleted\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidChangeStorage.fire({ scope, key });\n\n\t\treturn Promise.resolve();\n\t}\n\n\tlogStorage(): void {\n\t\tlogStorage(this.globalCache, this.workspaceCache, 'inMemory', 'inMemory');\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n\n\tflush(): void {\n\t\tthis._onWillSaveState.fire({ reason: WillSaveStateReason.NONE });\n\t}\n\n\tisNew(): boolean {\n\t\treturn true; // always new when in-memory\n\t}\n\n\tasync close(): Promise<void> { }\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { binarySearch } from 'vs/base/common/arrays';\nimport * as Errors from 'vs/base/common/errors';\nimport { toDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ErrorEventFragment = {\n\tcallstack: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tmsg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tfile?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tline?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tcolumn?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\tuncaught_error_name?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tuncaught_error_msg?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth' };\n\tcount?: { classification: 'CallstackOrException', purpose: 'PerformanceAndHealth', isMeasurement: true };\n};\nexport interface ErrorEvent {\n\tcallstack: string;\n\tmsg?: string;\n\tfile?: string;\n\tline?: number;\n\tcolumn?: number;\n\tuncaught_error_name?: string;\n\tuncaught_error_msg?: string;\n\tcount?: number;\n}\n\nexport namespace ErrorEvent {\n\texport function compare(a: ErrorEvent, b: ErrorEvent) {\n\t\tif (a.callstack < b.callstack) {\n\t\t\treturn -1;\n\t\t} else if (a.callstack > b.callstack) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n}\n\nexport default abstract class BaseErrorTelemetry {\n\n\tpublic static ERROR_FLUSH_TIMEOUT: number = 5 * 1000;\n\n\tprivate _telemetryService: ITelemetryService;\n\tprivate _flushDelay: number;\n\tprivate _flushHandle: any = -1;\n\tprivate _buffer: ErrorEvent[] = [];\n\tprotected readonly _disposables = new DisposableStore();\n\n\tconstructor(telemetryService: ITelemetryService, flushDelay = BaseErrorTelemetry.ERROR_FLUSH_TIMEOUT) {\n\t\tthis._telemetryService = telemetryService;\n\t\tthis._flushDelay = flushDelay;\n\n\t\t// (1) check for unexpected but handled errors\n\t\tconst unbind = Errors.errorHandler.addListener((err) => this._onErrorEvent(err));\n\t\tthis._disposables.add(toDisposable(unbind));\n\n\t\t// (2) install implementation-specific error listeners\n\t\tthis.installErrorListeners();\n\t}\n\n\tdispose() {\n\t\tclearTimeout(this._flushHandle);\n\t\tthis._flushBuffer();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprotected installErrorListeners(): void {\n\t\t// to override\n\t}\n\n\tprivate _onErrorEvent(err: any): void {\n\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\n\t\t// unwrap nested errors from loader\n\t\tif (err.detail && err.detail.stack) {\n\t\t\terr = err.detail;\n\t\t}\n\n\t\t// work around behavior in workerServer.ts that breaks up Error.stack\n\t\tlet callstack = Array.isArray(err.stack) ? err.stack.join('\\n') : err.stack;\n\t\tlet msg = err.message ? err.message : safeStringify(err);\n\n\t\t// errors without a stack are not useful telemetry\n\t\tif (!callstack) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._enqueue({ msg, callstack });\n\t}\n\n\tprotected _enqueue(e: ErrorEvent): void {\n\n\t\tconst idx = binarySearch(this._buffer, e, ErrorEvent.compare);\n\t\tif (idx < 0) {\n\t\t\te.count = 1;\n\t\t\tthis._buffer.splice(~idx, 0, e);\n\t\t} else {\n\t\t\tif (!this._buffer[idx].count) {\n\t\t\t\tthis._buffer[idx].count = 0;\n\t\t\t}\n\t\t\tthis._buffer[idx].count! += 1;\n\t\t}\n\n\t\tif (this._flushHandle === -1) {\n\t\t\tthis._flushHandle = setTimeout(() => {\n\t\t\t\tthis._flushBuffer();\n\t\t\t\tthis._flushHandle = -1;\n\t\t\t}, this._flushDelay);\n\t\t}\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tfor (let error of this._buffer) {\n\t\t\ttype UnhandledErrorClassification = {} & ErrorEventFragment;\n\t\t\tthis._telemetryService.publicLogError2<ErrorEvent, UnhandledErrorClassification>('UnhandledError', error);\n\t\t}\n\t\tthis._buffer.length = 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { globals } from 'vs/base/common/platform';\nimport BaseErrorTelemetry, { ErrorEvent } from '../common/errorTelemetry';\n\nexport default class ErrorTelemetry extends BaseErrorTelemetry {\n\tprotected installErrorListeners(): void {\n\t\tlet oldOnError: Function;\n\t\tlet that = this;\n\t\tif (typeof globals.onerror === 'function') {\n\t\t\toldOnError = globals.onerror;\n\t\t}\n\t\tglobals.onerror = function (message: string, filename: string, line: number, column?: number, e?: any) {\n\t\t\tthat._onUncaughtError(message, filename, line, column, e);\n\t\t\tif (oldOnError) {\n\t\t\t\toldOnError.apply(this, arguments);\n\t\t\t}\n\t\t};\n\t\tthis._disposables.add(toDisposable(() => {\n\t\t\tif (oldOnError) {\n\t\t\t\tglobals.onerror = oldOnError;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _onUncaughtError(msg: string, file: string, line: number, column?: number, err?: any): void {\n\t\tlet data: ErrorEvent = {\n\t\t\tcallstack: msg,\n\t\t\tmsg,\n\t\t\tfile,\n\t\t\tline,\n\t\t\tcolumn\n\t\t};\n\n\t\tif (err) {\n\t\t\tlet { name, message, stack } = err;\n\t\t\tdata.uncaught_error_name = name;\n\t\t\tif (message) {\n\t\t\t\tdata.uncaught_error_msg = message;\n\t\t\t}\n\t\t\tif (stack) {\n\t\t\t\tdata.callstack = Array.isArray(err.stack)\n\t\t\t\t\t? err.stack = err.stack.join('\\n')\n\t\t\t\t\t: err.stack;\n\t\t\t}\n\t\t}\n\n\t\tthis._enqueue(data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tinstanceId: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tsetEnabled(value: boolean): void;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\tisOptedIn: boolean;\n}\n\n// Keys\nexport const instanceStorageKey = 'telemetry.instanceId';\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getErrorMessage, isPromiseCanceledError, canceled } from 'vs/base/common/errors';\nimport { StatisticType, IGalleryExtension, IExtensionGalleryService, IGalleryExtensionAsset, IQueryOptions, SortBy, SortOrder, IExtensionIdentifier, IReportedExtension, InstallOperation, ITranslation, IGalleryExtensionVersion, IGalleryExtensionAssets, isIExtensionIdentifier, DefaultIconPath } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { getGalleryExtensionId, getGalleryExtensionTelemetryData, adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IPager } from 'vs/base/common/paging';\nimport { IRequestService, asJson, asText } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext, IHeaders } from 'vs/base/parts/request/common/request';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { URI } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, StorageScope } from 'vs/platform/storage/common/storage';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { joinPath } from 'vs/base/common/resources';\n\ninterface IRawGalleryExtensionFile {\n\tassetType: string;\n\tsource: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\tkey: string;\n\tvalue: string;\n}\n\ninterface IRawGalleryExtensionVersion {\n\tversion: string;\n\tlastUpdated: string;\n\tassetUri: string;\n\tfallbackAssetUri: string;\n\tfiles: IRawGalleryExtensionFile[];\n\tproperties?: IRawGalleryExtensionProperty[];\n}\n\ninterface IRawGalleryExtensionStatistics {\n\tstatisticName: string;\n\tvalue: number;\n}\n\ninterface IRawGalleryExtension {\n\textensionId: string;\n\textensionName: string;\n\tdisplayName: string;\n\tshortDescription: string;\n\tpublisher: { displayName: string, publisherId: string, publisherName: string; };\n\tversions: IRawGalleryExtensionVersion[];\n\tstatistics: IRawGalleryExtensionStatistics[];\n\tflags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\tresults: {\n\t\textensions: IRawGalleryExtension[];\n\t\tresultMetadata: {\n\t\t\tmetadataType: string;\n\t\t\tmetadataItems: {\n\t\t\t\tname: string;\n\t\t\t\tcount: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\tfilterType: FilterType;\n\tvalue?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\tpageNumber: number;\n\tpageSize: number;\n\tsortBy: SortBy;\n\tsortOrder: SortOrder;\n\tflags: Flags;\n\tcriteria: ICriterium[];\n\tassetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\w.]+))(:(//)?)([\\w.@\\:/\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getIsWebExtension(version: IRawGalleryExtensionVersion): boolean {\n\tconst webExtensionProperty = version.properties ? version.properties.find(p => p.key === PropertyType.WebExtension) : undefined;\n\treturn !!webExtensionProperty && webExtensionProperty.value === 'true';\n}\n\nfunction getWebResource(version: IRawGalleryExtensionVersion): URI | undefined {\n\treturn version.files.some(f => f.assetType.startsWith('Microsoft.VisualStudio.Code.WebResources'))\n\t\t? joinPath(URI.parse(version.assetUri), 'Microsoft.VisualStudio.Code.WebResources', 'extension')\n\t\t: undefined;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, index: number, query: Query, querySource?: string): IGalleryExtension {\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdate: version.lastUpdated,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tassetUri: URI.parse(version.assetUri),\n\t\twebResource: getWebResource(version),\n\t\tassetTypes: version.files.map(({ assetType }) => assetType),\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\twebExtension: getIsWebExtension(version)\n\t\t},\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"searchText\": { \"classification\": \"CustomerContent\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData: {\n\t\t\tindex: ((query.pageNumber - 1) * query.pageSize) + index,\n\t\t\tsearchText: query.searchText,\n\t\t\tquerySource\n\t\t},\n\t\tpreview: getIsPreview(galleryExtension.flags)\n\t};\n}\n\ninterface IRawExtensionsReport {\n\tmalicious: string[];\n\tslow: string[];\n}\n\nexport class ExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@optional(IStorageService) storageService: IStorageService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, this.environmentService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension = await this.getCompatibleExtensionByEngine(arg1, version);\n\n\t\tif (extension?.properties.webExtension) {\n\t\t\treturn extension.webResource ? extension : null;\n\t\t} else {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\tprivate async getCompatibleExtensionByEngine(arg1: IExtensionIdentifier | IGalleryExtension, version?: string): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension && extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\treturn extension;\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (version) {\n\t\t\tconst versionAsset = rawExtension.versions.filter(v => v.version === version)[0];\n\t\t\tif (versionAsset) {\n\t\t\t\tconst extension = toExtension(rawExtension, versionAsset, 0, query);\n\t\t\t\tif (extension.properties.engine && isEngineValid(extension.properties.engine, this.productService.version)) {\n\t\t\t\t\treturn extension;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rawVersion = await this.getLastValidExtensionVersion(rawExtension, rawExtension.versions);\n\t\tif (rawVersion) {\n\t\t\treturn toExtension(rawExtension, rawVersion, 0, query);\n\t\t}\n\t\treturn null;\n\t}\n\n\tquery(token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tasync query(arg1: any, arg2?: any): Promise<IPager<IGalleryExtension>> {\n\t\tconst options: IQueryOptions = CancellationToken.isCancellationToken(arg1) ? {} : arg1;\n\t\tconst token: CancellationToken = CancellationToken.isCancellationToken(arg1) ? arg1 : arg2;\n\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tconst type = options.names ? 'ids' : (options.text ? 'text' : 'all');\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\ttype GalleryServiceQueryClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\ttext: { classification: 'CustomerContent', purpose: 'FeatureInsight' };\n\t\t};\n\t\ttype GalleryServiceQueryEvent = {\n\t\t\ttype: string;\n\t\t\ttext: string;\n\t\t};\n\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', { type, text });\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, token);\n\t\tconst extensions = galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, query, options.source));\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, ct);\n\t\t\treturn galleryExtensions.map((e, index) => toExtension(e, e.versions[0], index, nextPageQuery, options.source));\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async queryGallery(query: Query, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst context = await this.requestService.request({\n\t\t\ttype: 'POST',\n\t\t\turl: this.api('/extensionquery'),\n\t\t\tdata,\n\t\t\theaders\n\t\t}, token);\n\n\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\treturn { galleryExtensions: [], total: 0 };\n\t\t}\n\n\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\tif (result) {\n\t\t\tconst r = result.results[0];\n\t\t\tconst galleryExtensions = r.extensions;\n\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\tconst total = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\treturn { galleryExtensions, total };\n\t\t}\n\t\treturn { galleryExtensions: [], total: 0 };\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept: '*/*;api-version=4.0-preview.1' };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`),\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}&${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}?${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllVersions(extension: IGalleryExtension, compatible: boolean): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CancellationToken.None);\n\t\tif (galleryExtensions.length) {\n\t\t\tif (compatible) {\n\t\t\t\tawait Promise.all(galleryExtensions[0].versions.map(async v => {\n\t\t\t\t\tlet engine: string | undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tengine = await this.getEngine(v);\n\t\t\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t\t\t\tif (engine && isEngineValid(engine, this.productService.version)) {\n\t\t\t\t\t\tresult.push({ version: v!.version, date: v!.lastUpdated });\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tresult.push(...galleryExtensions[0].versions.map(v => ({ version: v.version, date: v.lastUpdated })));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getLastValidExtensionVersion(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tconst version = this.getLastValidExtensionVersionFromProperties(extension, versions);\n\t\tif (version) {\n\t\t\treturn version;\n\t\t}\n\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions);\n\t}\n\n\tprivate getLastValidExtensionVersionFromProperties(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): IRawGalleryExtensionVersion | null {\n\t\tfor (const version of versions) {\n\t\t\tconst engine = getEngine(version);\n\t\t\tif (!engine) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (isEngineValid(engine, this.productService.version)) {\n\t\t\t\treturn version;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getEngine(version: IRawGalleryExtensionVersion): Promise<string> {\n\t\tconst engine = getEngine(version);\n\t\tif (engine) {\n\t\t\treturn engine;\n\t\t}\n\n\t\tconst manifestAsset = getVersionAsset(version, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\tconst manifest = await asJson<IExtensionManifest>(context);\n\t\tif (manifest) {\n\t\t\treturn manifest.engines.vscode;\n\t\t}\n\n\t\tthrow new Error('Error while reading manifest');\n\t}\n\n\tprivate async getLastValidExtensionVersionRecursively(extension: IRawGalleryExtension, versions: IRawGalleryExtensionVersion[]): Promise<IRawGalleryExtensionVersion | null> {\n\t\tif (!versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst version = versions[0];\n\t\tconst engine = await this.getEngine(version);\n\t\tif (!isEngineValid(engine, this.productService.version)) {\n\t\t\treturn this.getLastValidExtensionVersionRecursively(extension, versions.slice(1));\n\t\t}\n\n\t\tversion.properties = version.properties || [];\n\t\tversion.properties.push({ key: PropertyType.Engine, value: engine });\n\t\treturn version;\n\t}\n\n\tasync getExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsReport>(context);\n\t\tconst map = new Map<string, IReportedExtension>();\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tconst ext = map.get(id) || { id: { id }, malicious: true, slow: false };\n\t\t\t\text.malicious = true;\n\t\t\t\tmap.set(id, ext);\n\t\t\t}\n\t\t}\n\n\t\treturn [...map.values()];\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\theaders['X-Market-User-Id'] = uuid;\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { optional } from 'vs/platform/instantiation/common/instantiation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IConfigurationRegistry, Extensions } from 'vs/platform/configuration/common/configurationRegistry';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport interface ITelemetryServiceConfig {\n\tappender: ITelemetryAppender;\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appender: ITelemetryAppender;\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _userOptIn: boolean;\n\tprivate _enabled: boolean;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@optional(IConfigurationService) private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appender = config.appender;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._userOptIn = true;\n\t\tthis._enabled = true;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\t\tif (this._configurationService) {\n\t\t\tthis._updateUserOptIn();\n\t\t\tthis._configurationService.onDidChangeConfiguration(this._updateUserOptIn, this, this._disposables);\n\t\t\ttype OptInClassification = {\n\t\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\ttype OptInEvent = {\n\t\t\t\toptIn: boolean;\n\t\t\t};\n\t\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._userOptIn });\n\n\t\t\tthis._commonProperties.then(values => {\n\t\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t\t});\n\t\t}\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tsetEnabled(value: boolean): void {\n\t\tthis._enabled = value;\n\t}\n\n\tprivate _updateUserOptIn(): void {\n\t\tconst config = this._configurationService?.getValue<any>(TELEMETRY_SECTION_ID);\n\t\tthis._userOptIn = config ? config.enableTelemetry : this._userOptIn;\n\t}\n\n\tget isOptedIn(): boolean {\n\t\treturn this._userOptIn && this._enabled;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet instanceId = values['common.instanceId'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, instanceId, machineId, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (!this.isOptedIn) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\tthis._appender.log(eventName, data);\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this.publicLog(errorEventName, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _cleanupInfo(stack: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedStack = stack;\n\n\t\tif (anonymizeFilePaths) {\n\t\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\t\tlet lastIndex = 0;\n\t\t\tupdatedStack = '';\n\n\t\t\twhile (true) {\n\t\t\t\tconst result = fileRegex.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastIndex < stack.length) {\n\t\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t\t}\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedStack = updatedStack.replace(regexp, '');\n\t\t}\n\t\treturn updatedStack;\n\t}\n}\n\n\nconst TELEMETRY_SECTION_ID = 'telemetry';\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t'telemetry.enableTelemetry': {\n\t\t\t'type': 'boolean',\n\t\t\t'description': localize('telemetry.enableTelemetry', \"Enable usage data and errors to be sent to a Microsoft online service.\"),\n\t\t\t'default': true,\n\t\t\t'tags': ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService, ConfigurationTarget, ConfigurationTargetToString } from 'vs/platform/configuration/common/configuration';\nimport { ITelemetryService, ITelemetryInfo, ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ClassifiedEvent, StrictPropertyCheck, GDPRClassification } from 'vs/platform/telemetry/common/gdprTypings';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\n\nexport const NullTelemetryService = new class implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\tsetEnabled() { }\n\tisOptedIn = true;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId'\n\t\t});\n\t}\n};\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport function combinedAppender(...appenders: ITelemetryAppender[]): ITelemetryAppender {\n\treturn {\n\t\tlog: (e, d) => appenders.forEach(a => a.log(e, d)),\n\t\tflush: () => Promise.all(appenders.map(a => a.flush()))\n\t};\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\nexport class LogAppender implements ITelemetryAppender {\n\n\tprivate commonPropertiesRegex = /^sessionID$|^version$|^timestamp$|^commitHash$|^common\\./;\n\tconstructor(@ILogService private readonly _logService: ILogService) { }\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tconst strippedData: { [key: string]: any } = {};\n\t\tObject.keys(data).forEach(key => {\n\t\t\tif (!this.commonPropertiesRegex.test(key)) {\n\t\t\t\tstrippedData[key] = data[key];\n\t\t\t}\n\t\t});\n\t\tthis._logService.trace(`telemetry/${eventName}`, strippedData);\n\t}\n}\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\t//enforce property value to be less than 1024 char, take the first 1024 char\n\t\t\tproperties[prop] = value.substring(0, 1023);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as appInsights from 'applicationinsights';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nfunction getClient(aiKey: string): appInsights.TelemetryClient {\n\n\tlet client: appInsights.TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient?: appInsights.TelemetryClient;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => appInsights.TelemetryClient), // allow factory function for testing\n\t\t@ILogService private _logService?: ILogService\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'string') {\n\t\t\tthis._aiClient = getClient(aiKeyOrClientFactory);\n\t\t} else if (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t}\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this._logService) {\n\t\t\tthis._logService.trace(`telemetry/${eventName}`, data);\n\t\t}\n\t\tthis._aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t});\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._aiClient!.flush({\n\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Platform from 'vs/base/common/platform';\nimport * as os from 'os';\nimport * as uuid from 'vs/base/common/uuid';\nimport { readFile } from 'vs/base/node/pfs';\n\nexport async function resolveCommonProperties(\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = uuid.generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (os.release() || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = Platform.PlatformToString(Platform.platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = process.platform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = process.arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (process.platform === 'linux' && process.env.SNAP && process.env.SNAP_REVISION) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\ttry {\n\t\tconst contents = await readFile(installSourcePath, 'utf8');\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nfunction verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tif (!process || !process.env || !process.env['USERDNSDOMAIN']) {\n\t\treturn false;\n\t}\n\n\tconst domain = process.env['USERDNSDOMAIN']!.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { statSync, readFileSync } from 'fs';\nimport { join } from 'vs/base/common/path';\n\nexport function buildTelemetryMessage(appRoot: string, extensionsPath?: string): string {\n\tconst mergedTelemetry = Object.create(null);\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\tif (extensionsPath) {\n\t\t// Gets all the directories inside the extension directory\n\t\tconst dirs = readdirSync(extensionsPath).filter(files => {\n\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\ttry {\n\t\t\t\treturn statSync(join(extensionsPath, files)).isDirectory();\n\t\t\t} catch {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tdirs.forEach((dir) => {\n\t\t\tconst files = readdirSync(join(extensionsPath, dir)).filter(file => file === 'telemetry.json');\n\t\t\t// We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir);\n\t\t\t}\n\t\t});\n\t\ttelemetryJsonFolders.forEach((folder) => {\n\t\t\tconst contents = readFileSync(join(extensionsPath, folder, 'telemetry.json')).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t});\n\t}\n\tlet contents = readFileSync(join(appRoot, 'telemetry-core.json')).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\tcontents = readFileSync(join(appRoot, 'telemetry-extensions.json')).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}\n","import { ReadWriteConnection } from '@coder/node-browser';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const INodeProxyService = createDecorator<INodeProxyService>('nodeProxyService');\n\nexport interface INodeProxyService extends ReadWriteConnection {\n\t_serviceBrand: any;\n\tsend(message: string): void;\n\tonMessage: Event<string>;\n\tonUp: Event<void>;\n\tonClose: Event<void>;\n\tonDown: Event<void>;\n}\n\nexport class NodeProxyChannel implements IServerChannel {\n\tconstructor(private service: INodeProxyService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onMessage': return this.service.onMessage;\n\t\t}\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'send': return this.service.send(args[0]);\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class NodeProxyChannelClient {\n\t_serviceBrand: any;\n\n\tpublic readonly onMessage: Event<string>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.onMessage = this.channel.listen<string>('onMessage');\n\t}\n\n\tpublic send(data: string): void {\n\t\tthis.channel.call('send', [data]);\n\t}\n}\n","import { ITelemetryData } from 'vs/base/common/actions';\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryInfo, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport class TelemetryChannel implements IServerChannel {\n\tconstructor(private service: ITelemetryService) {}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'publicLog': return this.service.publicLog(args[0], args[1], args[2]);\n\t\t\tcase 'publicLog2': return this.service.publicLog2(args[0], args[1], args[2]);\n\t\t\tcase 'publicLogError': return this.service.publicLogError(args[0], args[1]);\n\t\t\tcase 'publicLogError2': return this.service.publicLogError2(args[0], args[1]);\n\t\t\tcase 'setEnabled': return Promise.resolve(this.service.setEnabled(args[0]));\n\t\t\tcase 'getTelemetryInfo': return this.service.getTelemetryInfo();\n\t\t\tcase 'setExperimentProperty': return Promise.resolve(this.service.setExperimentProperty(args[0], args[1]));\n\t\t}\n\t\tthrow new Error(`Invalid call ${command}`);\n\t}\n}\n\nexport class TelemetryChannelClient implements ITelemetryService {\n\t_serviceBrand: any;\n\n\t// These don't matter; telemetry is sent to the Node side which decides\n\t// whether to send the telemetry event.\n\tpublic isOptedIn = true;\n\tpublic sendErrorTelemetry = true;\n\n\tconstructor(private readonly channel: IChannel) {}\n\n\tpublic publicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void> {\n\t\treturn this.channel.call('publicLog2', [eventName, data, anonymizeFilePaths]);\n\t}\n\n\tpublic publicLogError(errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\treturn this.channel.call('publicLogError', [errorEventName, data]);\n\t}\n\n\tpublic publicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void> {\n\t\treturn this.channel.call('publicLogError2', [eventName, data]);\n\t}\n\n\tpublic setEnabled(value: boolean): void {\n\t\tthis.channel.call('setEnable', [value]);\n\t}\n\n\tpublic getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn this.channel.call('getTelemetryInfo');\n\t}\n\n\tpublic setExperimentProperty(name: string, value: string): void {\n\t\tthis.channel.call('setExperimentProperty', [name, value]);\n\t}\n}\n","import * as appInsights from 'applicationinsights';\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as os from 'os';\n\nclass Channel {\n\tpublic get _sender() {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic get _buffer() {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic setUseDiskRetryCaching(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic send(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\tpublic triggerSend(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n}\n\nexport class TelemetryClient  {\n\tpublic context: any = undefined;\n\tpublic commonProperties: any = undefined;\n\tpublic config: any = {};\n\n\tpublic channel: any = new Channel();\n\n\tpublic addTelemetryProcessor(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic clearTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic runTelemetryProcessors(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackTrace(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackMetric(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackException(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic track(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequestSync(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpRequest(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackNodeHttpDependency(): void {\n\t\tthrow new Error('unimplemented');\n\t}\n\n\tpublic trackEvent(options: appInsights.Contracts.EventTelemetry): void {\n\t\tif (!options.properties) {\n\t\t\toptions.properties = {};\n\t\t}\n\t\tif (!options.measurements) {\n\t\t\toptions.measurements = {};\n\t\t}\n\n\t\ttry {\n\t\t\tconst cpus = os.cpus();\n\t\t\toptions.measurements.cores = cpus.length;\n\t\t\toptions.properties['common.cpuModel'] = cpus[0].model;\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.measurements.memoryFree = os.freemem();\n\t\t\toptions.measurements.memoryTotal = os.totalmem();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\toptions.properties['common.shell'] = os.userInfo().shell;\n\t\t\toptions.properties['common.release'] = os.release();\n\t\t\toptions.properties['common.arch'] = os.arch();\n\t\t} catch (error) {}\n\n\t\ttry {\n\t\t\tconst url = process.env.TELEMETRY_URL || 'https://v1.telemetry.coder.com/track';\n\t\t\tconst request = (/^http:/.test(url) ? http : https).request(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t});\n\t\t\trequest.on('error', () => { /* We don't care. */ });\n\t\t\trequest.write(JSON.stringify(options));\n\t\t\trequest.end();\n\t\t} catch (error) {}\n\t}\n\n\tpublic flush(options: { callback: (v: string) => void }): void {\n\t\tif (options.callback) {\n\t\t\toptions.callback('');\n\t\t}\n\t}\n}\n","import { logger as baseLogger } from '@coder/logger';\nexport const logger = baseLogger.named('vscode');\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as util from 'util';\nimport { getPathFromAmdModule } from 'vs/base/common/amd';\nimport * as lp from 'vs/base/node/languagePacks';\nimport product from 'vs/platform/product/common/product';\nimport { Translations } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst configurations = new Map<string, Promise<lp.NLSConfiguration>>();\nconst metadataPath = path.join(getPathFromAmdModule(require, ''), 'nls.metadata.json');\n\nexport const isInternalConfiguration = (config: lp.NLSConfiguration): config is lp.InternalNLSConfiguration => {\n\treturn config && !!(<lp.InternalNLSConfiguration>config)._languagePackId;\n};\n\nconst DefaultConfiguration = {\n\tlocale: 'en',\n\tavailableLanguages: {},\n};\n\nexport const getNlsConfiguration = async (locale: string, userDataPath: string): Promise<lp.NLSConfiguration> => {\n\tconst id = `${locale}: ${userDataPath}`;\n\tif (!configurations.has(id)) {\n\t\tconfigurations.set(id, new Promise(async (resolve) =>  {\n\t\t\tconst config = product.commit && await util.promisify(fs.exists)(metadataPath)\n\t\t\t\t? await lp.getNLSConfiguration(product.commit, userDataPath, metadataPath, locale)\n\t\t\t\t: DefaultConfiguration;\n\t\t\tif (isInternalConfiguration(config)) {\n\t\t\t\tconfig._languagePackSupport = true;\n\t\t\t}\n\t\t\t// If the configuration has no results keep trying since code-server\n\t\t\t// doesn't restart when a language is installed so this result would\n\t\t\t// persist (the plugin might not be installed yet or something).\n\t\t\tif (config.locale !== 'en' && config.locale !== 'en-us' && Object.keys(config.availableLanguages).length === 0) {\n\t\t\t\tconfigurations.delete(id);\n\t\t\t}\n\t\t\tresolve(config);\n\t\t}));\n\t}\n\treturn configurations.get(id)!;\n};\n\nexport const getTranslations = async (locale: string, userDataPath: string): Promise<Translations> => {\n\tconst config = await getNlsConfiguration(locale, userDataPath);\n\tif (isInternalConfiguration(config)) {\n\t\ttry {\n\t\t\treturn JSON.parse(await util.promisify(fs.readFile)(config._translationsConfigFile, 'utf8'));\n\t\t} catch (error) { /* Nothing yet. */}\n\t}\n\treturn {};\n};\n\nexport const getLocaleFromConfig = async (userDataPath: string): Promise<string> => {\n\tconst files = ['locale.json', 'argv.json'];\n\tfor (let i = 0; i < files.length; ++i) {\n\t\ttry {\n\t\t\tconst localeConfigUri = path.join(userDataPath, 'User', files[i]);\n\t\t\tconst content = stripComments(await util.promisify(fs.readFile)(localeConfigUri, 'utf8'));\n\t\t\treturn JSON.parse(content).locale;\n\t\t} catch (error) { /* Ignore. */ }\n\t}\n\treturn 'en';\n};\n\n// Taken from src/main.js in the main VS Code source.\nconst stripComments = (content: string): string => {\n\tconst regexp = /('(?:[^\\\\']*(?:\\\\.)?)*')|('(?:[^\\\\']*(?:\\\\.)?)*')|(\\/\\*(?:\\r?\\n|.)*?\\*\\/)|(\\/{2,}.*?(?:(?:\\r?\\n)|$))/g;\n\n\treturn content.replace(regexp, (match, _m1, _m2, m3, m4) => {\n\t\t// Only one of m1, m2, m3, m4 matches\n\t\tif (m3) {\n\t\t\t// A block comment. Replace with nothing\n\t\t\treturn '';\n\t\t} else if (m4) {\n\t\t\t// A line comment. If it ends in \\r?\\n then keep it.\n\t\t\tconst length_1 = m4.length;\n\t\t\tif (length_1 > 2 && m4[length_1 - 1] === '\\n') {\n\t\t\t\treturn m4[length_1 - 2] === '\\r' ? '\\r\\n' : '\\n';\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t} else {\n\t\t\t// We match a string\n\t\t\treturn match;\n\t\t}\n\t});\n};\n","import * as cp from 'child_process';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ISocket } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { IExtHostReadyMessage } from 'vs/workbench/services/extensions/common/extensionHostProtocol';\n\nexport abstract class Connection {\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\tprivate disposed = false;\n\tprivate _offline: number | undefined;\n\n\tpublic constructor(protected protocol: Protocol, public readonly token: string) {}\n\n\tpublic get offline(): number | undefined {\n\t\treturn this._offline;\n\t}\n\n\tpublic reconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis._offline = undefined;\n\t\tthis.doReconnect(socket, buffer);\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this.disposed) {\n\t\t\tthis.disposed = true;\n\t\t\tthis.doDispose();\n\t\t\tthis._onClose.fire();\n\t\t}\n\t}\n\n\tprotected setOffline(): void {\n\t\tif (!this._offline) {\n\t\t\tthis._offline = Date.now();\n\t\t}\n\t}\n\n\t/**\n\t * Set up the connection on a new socket.\n\t */\n\tprotected abstract doReconnect(socket: ISocket, buffer: VSBuffer): void;\n\tprotected abstract doDispose(): void;\n}\n\n/**\n * Used for all the IPC channels.\n */\nexport class ManagementConnection extends Connection {\n\tpublic constructor(protected protocol: Protocol, token: string) {\n\t\tsuper(protocol, token);\n\t\tprotocol.onClose(() => this.dispose()); // Explicit close.\n\t\tprotocol.onSocketClose(() => this.setOffline()); // Might reconnect.\n\t}\n\n\tprotected doDispose(): void {\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\tthis.protocol.beginAcceptReconnection(socket, buffer);\n\t\tthis.protocol.endAcceptReconnection();\n\t}\n}\n\nexport class ExtensionHostConnection extends Connection {\n\tprivate process?: cp.ChildProcess;\n\n\tpublic constructor(\n\t\tlocale:string, protocol: Protocol, buffer: VSBuffer, token: string,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t) {\n\t\tsuper(protocol, token);\n\t\tthis.protocol.dispose();\n\t\tthis.spawn(locale, buffer).then((p) => this.process = p);\n\t\tthis.protocol.getUnderlyingSocket().pause();\n\t}\n\n\tprotected doDispose(): void {\n\t\tif (this.process) {\n\t\t\tthis.process.kill();\n\t\t}\n\t\tthis.protocol.getUnderlyingSocket().destroy();\n\t}\n\n\tprotected doReconnect(socket: ISocket, buffer: VSBuffer): void {\n\t\t// This is just to set the new socket.\n\t\tthis.protocol.beginAcceptReconnection(socket, null);\n\t\tthis.protocol.dispose();\n\t\tthis.sendInitMessage(buffer);\n\t}\n\n\tprivate sendInitMessage(buffer: VSBuffer): void {\n\t\tconst socket = this.protocol.getUnderlyingSocket();\n\t\tsocket.pause();\n\t\tthis.process!.send({ // Process must be set at this point.\n\t\t\ttype: 'VSCODE_EXTHOST_IPC_SOCKET',\n\t\t\tinitialDataChunk: (buffer.buffer as Buffer).toString('base64'),\n\t\t\tskipWebSocketFrames: this.protocol.getSocket() instanceof NodeSocket,\n\t\t}, socket);\n\t}\n\n\tprivate async spawn(locale: string, buffer: VSBuffer): Promise<cp.ChildProcess> {\n\t\tconst config = await getNlsConfiguration(locale, this.environment.userDataPath);\n\t\tconst proc = cp.fork(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t[ '--type=extensionHost' ],\n\t\t\t{\n\t\t\t\tenv: {\n\t\t\t\t\t...process.env,\n\t\t\t\t\tAMD_ENTRYPOINT: 'vs/workbench/services/extensions/node/extensionHostProcess',\n\t\t\t\t\tPIPE_LOGGING: 'true',\n\t\t\t\t\tVERBOSE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_EXTHOST_WILL_SEND_SOCKET: 'true',\n\t\t\t\t\tVSCODE_HANDLES_UNCAUGHT_ERRORS: 'true',\n\t\t\t\t\tVSCODE_LOG_STACK: 'false',\n\t\t\t\t\tVSCODE_LOG_LEVEL: process.env.LOG_LEVEL,\n\t\t\t\t\tVSCODE_NLS_CONFIG: JSON.stringify(config),\n\t\t\t\t},\n\t\t\t\tsilent: true,\n\t\t\t},\n\t\t);\n\n\t\tproc.on('error', () => this.dispose());\n\t\tproc.on('exit', () => this.dispose());\n\t\tif (proc.stdout && proc.stderr) {\n\t\t\tproc.stdout.setEncoding('utf8').on('data', (d) => this.log.info('Extension host stdout', d));\n\t\t\tproc.stderr.setEncoding('utf8').on('data', (d) => this.log.error('Extension host stderr', d));\n\t\t}\n\t\tproc.on('message', (event) => {\n\t\t\tif (event && event.type === '__$console') {\n\t\t\t\tconst severity = (<any>this.log)[event.severity] ? event.severity : 'info';\n\t\t\t\t(<any>this.log)[severity]('Extension host', event.arguments);\n\t\t\t}\n\t\t\tif (event && event.type === 'VSCODE_EXTHOST_DISCONNECTED') {\n\t\t\t\tthis.setOffline();\n\t\t\t}\n\t\t});\n\n\t\tconst listen = (message: IExtHostReadyMessage) => {\n\t\t\tif (message.type === 'VSCODE_EXTHOST_IPC_READY') {\n\t\t\t\tproc.removeListener('message', listen);\n\t\t\t\tthis.sendInitMessage(buffer);\n\t\t\t}\n\t\t};\n\n\t\treturn proc.on('message', listen);\n\t}\n}\n","import * as net from 'net';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { PersistentProtocol } from 'vs/base/parts/ipc/common/ipc.net';\nimport { NodeSocket, WebSocketNodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { AuthRequest, ConnectionTypeRequest, HandshakeMessage } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport interface SocketOptions {\n\treadonly reconnectionToken: string;\n\treadonly reconnection: boolean;\n\treadonly skipWebSocketFrames: boolean;\n}\n\nexport class Protocol extends PersistentProtocol {\n\tpublic constructor(socket: net.Socket, public readonly options: SocketOptions) {\n\t\tsuper(\n\t\t\toptions.skipWebSocketFrames\n\t\t\t\t? new NodeSocket(socket)\n\t\t\t\t: new WebSocketNodeSocket(new NodeSocket(socket)),\n\t\t);\n\t}\n\n\tpublic getUnderlyingSocket(): net.Socket {\n\t\tconst socket = this.getSocket();\n\t\treturn socket instanceof NodeSocket\n\t\t\t? socket.socket\n\t\t\t: (socket as WebSocketNodeSocket).socket.socket;\n\t}\n\n\t/**\n\t * Perform a handshake to get a connection request.\n\t */\n\tpublic handshake(): Promise<ConnectionTypeRequest> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst handler = this.onControlMessage((rawMessage) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst message = JSON.parse(rawMessage.toString());\n\t\t\t\t\tswitch (message.type) {\n\t\t\t\t\t\tcase 'auth': return this.authenticate(message);\n\t\t\t\t\t\tcase 'connectionType':\n\t\t\t\t\t\t\thandler.dispose();\n\t\t\t\t\t\t\treturn resolve(message);\n\t\t\t\t\t\tdefault: throw new Error('Unrecognized message type');\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandler.dispose();\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: This ignores the authentication process entirely for now.\n\t */\n\tprivate authenticate(_message: AuthRequest): void {\n\t\tthis.sendMessage({ type: 'sign', data: '' });\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tpublic tunnel(): void {\n\t\tthrow new Error('Tunnel is not implemented yet');\n\t}\n\n\t/**\n\t * Send a handshake message. In the case of the extension host, it just sends\n\t * back a debug port.\n\t */\n\tpublic sendMessage(message: HandshakeMessage | { debugPort?: number } ): void {\n\t\tthis.sendControl(VSBuffer.fromString(JSON.stringify(message)));\n\t}\n}\n","import { URITransformer } from 'vs/base/common/uriIpc';\n\nexport const getUriTransformer = (remoteAuthority: string): URITransformer => {\n\treturn new URITransformer(remoteAuthority);\n};\n\n/**\n * Encode a path for opening via the folder or workspace query parameter. This\n * preserves slashes so it can be edited by hand more easily.\n */\nexport const encodePath = (path: string): string => {\n\treturn path.split(\"/\").map((p) => encodeURIComponent(p)).join(\"/\");\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from 'vs/platform/notification/common/notification';\n\nexport interface Translations {\n\t[id: string]: string;\n}\n\nexport namespace Translations {\n\texport function equals(a: Translations, b: Translations): boolean {\n\t\tif (a === b) {\n\t\t\treturn true;\n\t\t}\n\t\tlet aKeys = Object.keys(a);\n\t\tlet bKeys: Set<string> = new Set<string>();\n\t\tfor (let key of Object.keys(b)) {\n\t\t\tbKeys.add(key);\n\t\t}\n\t\tif (aKeys.length !== bKeys.size) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let key of aKeys) {\n\t\t\tif (a[key] !== b[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tbKeys.delete(key);\n\t\t}\n\t\treturn bKeys.size === 0;\n\t}\n}\n\nexport interface ILog {\n\terror(source: string, message: string): void;\n\twarn(source: string, message: string): void;\n\tinfo(source: string, message: string): void;\n}\n\nexport class Logger implements ILog {\n\n\tprivate readonly _messageHandler: (severity: Severity, source: string, message: string) => void;\n\n\tconstructor(\n\t\tmessageHandler: (severity: Severity, source: string, message: string) => void\n\t) {\n\t\tthis._messageHandler = messageHandler;\n\t}\n\n\tpublic error(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Error, source, message);\n\t}\n\n\tpublic warn(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Warning, source, message);\n\t}\n\n\tpublic info(source: string, message: string): void {\n\t\tthis._messageHandler(Severity.Info, source, message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as semver from 'semver-umd';\nimport * as json from 'vs/base/common/json';\nimport * as arrays from 'vs/base/common/arrays';\nimport { getParseErrorMessage } from 'vs/base/common/jsonErrorMessages';\nimport * as types from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { getGalleryExtensionId, groupByExtension, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { isValidExtensionVersion } from 'vs/platform/extensions/common/extensionValidator';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { Translations, ILog } from 'vs/workbench/services/extensions/common/extensionPoints';\n\nconst MANIFEST_FILE = 'package.json';\n\nexport interface NlsConfiguration {\n\treadonly devMode: boolean;\n\treadonly locale: string | undefined;\n\treadonly pseudo: boolean;\n\treadonly translations: Translations;\n}\n\nabstract class ExtensionManifestHandler {\n\n\tprotected readonly _ourVersion: string;\n\tprotected readonly _log: ILog;\n\tprotected readonly _absoluteFolderPath: string;\n\tprotected readonly _isBuiltin: boolean;\n\tprotected readonly _isUnderDevelopment: boolean;\n\tprotected readonly _absoluteManifestPath: string;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean) {\n\t\tthis._ourVersion = ourVersion;\n\t\tthis._log = log;\n\t\tthis._absoluteFolderPath = absoluteFolderPath;\n\t\tthis._isBuiltin = isBuiltin;\n\t\tthis._isUnderDevelopment = isUnderDevelopment;\n\t\tthis._absoluteManifestPath = path.join(absoluteFolderPath, MANIFEST_FILE);\n\t}\n}\n\nclass ExtensionManifestParser extends ExtensionManifestHandler {\n\n\tpublic parse(): Promise<IExtensionDescription> {\n\t\treturn pfs.readFile(this._absoluteManifestPath).then((manifestContents) => {\n\t\t\tconst errors: json.ParseError[] = [];\n\t\t\tconst manifest = json.parse(manifestContents.toString(), errors);\n\t\t\tif (errors.length === 0 && json.getNodeType(manifest) === 'object') {\n\t\t\t\tif (manifest.__metadata) {\n\t\t\t\t\tmanifest.uuid = manifest.__metadata.id;\n\t\t\t\t}\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\treturn manifest;\n\t\t\t} else {\n\t\t\t\terrors.forEach(e => {\n\t\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonParseFail', \"Failed to parse {0}: [{1}, {2}] {3}.\", this._absoluteManifestPath, e.offset, e.length, getParseErrorMessage(e.error)));\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}, (err) => {\n\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('fileReadFail', \"Cannot read file {0}: {1}.\", this._absoluteManifestPath, err.message));\n\t\t\treturn null;\n\t\t});\n\t}\n}\n\nclass ExtensionManifestNLSReplacer extends ExtensionManifestHandler {\n\n\tprivate readonly _nlsConfig: NlsConfiguration;\n\n\tconstructor(ourVersion: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration) {\n\t\tsuper(ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\tthis._nlsConfig = nlsConfig;\n\t}\n\n\tpublic replaceNLS(extensionDescription: IExtensionDescription): Promise<IExtensionDescription> {\n\t\tinterface MessageBag {\n\t\t\t[key: string]: string;\n\t\t}\n\n\t\tinterface TranslationBundle {\n\t\t\tcontents: {\n\t\t\t\tpackage: MessageBag;\n\t\t\t};\n\t\t}\n\n\t\tinterface LocalizedMessages {\n\t\t\tvalues: MessageBag | undefined;\n\t\t\tdefault: string | null;\n\t\t}\n\n\t\tconst reportErrors = (localized: string | null, errors: json.ParseError[]): void => {\n\t\t\terrors.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonsParseReportErrors', \"Failed to parse {0}: {1}.\", localized, getParseErrorMessage(error.error)));\n\t\t\t});\n\t\t};\n\t\tconst reportInvalidFormat = (localized: string | null): void => {\n\t\t\tthis._log.error(this._absoluteFolderPath, nls.localize('jsonInvalidFormat', \"Invalid format {0}: JSON object expected.\", localized));\n\t\t};\n\n\t\tlet extension = path.extname(this._absoluteManifestPath);\n\t\tlet basename = this._absoluteManifestPath.substr(0, this._absoluteManifestPath.length - extension.length);\n\n\t\tconst translationId = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\tlet translationPath = this._nlsConfig.translations[translationId];\n\t\tlet localizedMessages: Promise<LocalizedMessages | undefined>;\n\t\tif (translationPath) {\n\t\t\tlocalizedMessages = pfs.readFile(translationPath, 'utf8').then<LocalizedMessages, LocalizedMessages>((content) => {\n\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\tlet translationBundle: TranslationBundle = json.parse(content, errors);\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(translationPath, errors);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else if (json.getNodeType(translationBundle) !== 'object') {\n\t\t\t\t\treportInvalidFormat(translationPath);\n\t\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t\t} else {\n\t\t\t\t\tlet values = translationBundle.contents ? translationBundle.contents.package : undefined;\n\t\t\t\t\treturn { values: values, default: `${basename}.nls.json` };\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\treturn { values: undefined, default: `${basename}.nls.json` };\n\t\t\t});\n\t\t} else {\n\t\t\tlocalizedMessages = pfs.fileExists(basename + '.nls' + extension).then<LocalizedMessages | undefined, LocalizedMessages | undefined>(exists => {\n\t\t\t\tif (!exists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\treturn ExtensionManifestNLSReplacer.findMessageBundles(this._nlsConfig, basename).then((messageBundle) => {\n\t\t\t\t\tif (!messageBundle.localized) {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t}\n\t\t\t\t\treturn pfs.readFile(messageBundle.localized, 'utf8').then(messageBundleContent => {\n\t\t\t\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t\t\t\tlet messages: MessageBag = json.parse(messageBundleContent, errors);\n\t\t\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\t\t\treportErrors(messageBundle.localized, errors);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t} else if (json.getNodeType(messages) !== 'object') {\n\t\t\t\t\t\t\treportInvalidFormat(messageBundle.localized);\n\t\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn { values: messages, default: messageBundle.original };\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\treturn { values: undefined, default: messageBundle.original };\n\t\t\t\t\t});\n\t\t\t\t}, (err) => {\n\t\t\t\t\treturn undefined;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn localizedMessages.then((localizedMessages) => {\n\t\t\tif (localizedMessages === undefined) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\t\t\tlet errors: json.ParseError[] = [];\n\t\t\t// resolveOriginalMessageBundle returns null if localizedMessages.default === undefined;\n\t\t\treturn ExtensionManifestNLSReplacer.resolveOriginalMessageBundle(localizedMessages.default, errors).then((defaults) => {\n\t\t\t\tif (errors.length > 0) {\n\t\t\t\t\treportErrors(localizedMessages.default, errors);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t} else if (json.getNodeType(localizedMessages) !== 'object') {\n\t\t\t\t\treportInvalidFormat(localizedMessages.default);\n\t\t\t\t\treturn extensionDescription;\n\t\t\t\t}\n\t\t\t\tconst localized = localizedMessages.values || Object.create(null);\n\t\t\t\tExtensionManifestNLSReplacer._replaceNLStrings(this._nlsConfig, extensionDescription, localized, defaults, this._log, this._absoluteFolderPath);\n\t\t\t\treturn extensionDescription;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn extensionDescription;\n\t\t});\n\t}\n\n\t/**\n\t * Parses original message bundle, returns null if the original message bundle is null.\n\t */\n\tprivate static resolveOriginalMessageBundle(originalMessageBundle: string | null, errors: json.ParseError[]) {\n\t\treturn new Promise<{ [key: string]: string; } | null>((c, e) => {\n\t\t\tif (originalMessageBundle) {\n\t\t\t\tpfs.readFile(originalMessageBundle).then(originalBundleContent => {\n\t\t\t\t\tc(json.parse(originalBundleContent.toString(), errors));\n\t\t\t\t}, (err) => {\n\t\t\t\t\tc(null);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tc(null);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Finds localized message bundle and the original (unlocalized) one.\n\t * If the localized file is not present, returns null for the original and marks original as localized.\n\t */\n\tprivate static findMessageBundles(nlsConfig: NlsConfiguration, basename: string): Promise<{ localized: string; original: string | null; }> {\n\t\treturn new Promise<{ localized: string; original: string | null; }>((c, e) => {\n\t\t\tfunction loop(basename: string, locale: string): void {\n\t\t\t\tlet toCheck = `${basename}.nls.${locale}.json`;\n\t\t\t\tpfs.fileExists(toCheck).then(exists => {\n\t\t\t\t\tif (exists) {\n\t\t\t\t\t\tc({ localized: toCheck, original: `${basename}.nls.json` });\n\t\t\t\t\t}\n\t\t\t\t\tlet index = locale.lastIndexOf('-');\n\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\tc({ localized: `${basename}.nls.json`, original: null });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlocale = locale.substring(0, index);\n\t\t\t\t\t\tloop(basename, locale);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (nlsConfig.devMode || nlsConfig.pseudo || !nlsConfig.locale) {\n\t\t\t\treturn c({ localized: basename + '.nls.json', original: null });\n\t\t\t}\n\t\t\tloop(basename, nlsConfig.locale);\n\t\t});\n\t}\n\n\t/**\n\t * This routine makes the following assumptions:\n\t * The root element is an object literal\n\t */\n\tprivate static _replaceNLStrings<T extends object>(nlsConfig: NlsConfiguration, literal: T, messages: { [key: string]: string; }, originalMessages: { [key: string]: string } | null, log: ILog, messageScope: string): void {\n\t\tfunction processEntry(obj: any, key: string | number, command?: boolean) {\n\t\t\tlet value = obj[key];\n\t\t\tif (types.isString(value)) {\n\t\t\t\tlet str = <string>value;\n\t\t\t\tlet length = str.length;\n\t\t\t\tif (length > 1 && str[0] === '%' && str[length - 1] === '%') {\n\t\t\t\t\tlet messageKey = str.substr(1, length - 2);\n\t\t\t\t\tlet message = messages[messageKey];\n\t\t\t\t\t// If the messages come from a language pack they might miss some keys\n\t\t\t\t\t// Fill them from the original messages.\n\t\t\t\t\tif (message === undefined && originalMessages) {\n\t\t\t\t\t\tmessage = originalMessages[messageKey];\n\t\t\t\t\t}\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tif (nlsConfig.pseudo) {\n\t\t\t\t\t\t\t// FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n\t\t\t\t\t\t\tmessage = '\\uFF3B' + message.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tobj[key] = command && (key === 'title' || key === 'category') && originalMessages ? { value: message, original: originalMessages[messageKey] } : message;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog.warn(messageScope, nls.localize('missingNLSKey', \"Couldn't find message for key {0}.\", messageKey));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isObject(value)) {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tif (value.hasOwnProperty(k)) {\n\t\t\t\t\t\tk === 'commands' ? processEntry(value, k, true) : processEntry(value, k, command);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (types.isArray(value)) {\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\t\tprocessEntry(value, i, command);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let key in literal) {\n\t\t\tif (literal.hasOwnProperty(key)) {\n\t\t\t\tprocessEntry(literal, key);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Relax the readonly properties here, it is the one place where we check and normalize values\nexport interface IRelaxedExtensionDescription {\n\tid: string;\n\tuuid?: string;\n\tidentifier: ExtensionIdentifier;\n\tname: string;\n\tversion: string;\n\tpublisher: string;\n\tisBuiltin: boolean;\n\tisUnderDevelopment: boolean;\n\textensionLocation: URI;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n\tenableProposedApi?: boolean;\n}\n\nclass ExtensionManifestValidator extends ExtensionManifestHandler {\n\tvalidate(_extensionDescription: IExtensionDescription): IExtensionDescription | null {\n\t\tlet extensionDescription = <IRelaxedExtensionDescription>_extensionDescription;\n\t\textensionDescription.isBuiltin = this._isBuiltin;\n\t\textensionDescription.isUnderDevelopment = this._isUnderDevelopment;\n\n\t\tlet notices: string[] = [];\n\t\tif (!ExtensionManifestValidator.isValidExtensionDescription(this._ourVersion, this._absoluteFolderPath, extensionDescription, notices)) {\n\t\t\tnotices.forEach((error) => {\n\t\t\t\tthis._log.error(this._absoluteFolderPath, error);\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\t// in this case the notices are warnings\n\t\tnotices.forEach((error) => {\n\t\t\tthis._log.warn(this._absoluteFolderPath, error);\n\t\t});\n\n\t\t// allow publisher to be undefined to make the initial extension authoring experience smoother\n\t\tif (!extensionDescription.publisher) {\n\t\t\textensionDescription.publisher = 'undefined_publisher';\n\t\t}\n\n\t\t// id := `publisher.name`\n\t\textensionDescription.id = `${extensionDescription.publisher}.${extensionDescription.name}`;\n\t\textensionDescription.identifier = new ExtensionIdentifier(extensionDescription.id);\n\n\t\textensionDescription.extensionLocation = URI.file(this._absoluteFolderPath);\n\n\t\treturn extensionDescription;\n\t}\n\n\tprivate static isValidExtensionDescription(version: string, extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\n\t\tif (!ExtensionManifestValidator.baseIsValidExtensionDescription(extensionFolderPath, extensionDescription, notices)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!semver.valid(extensionDescription.version)) {\n\t\t\tnotices.push(nls.localize('notSemver', \"Extension version is not semver compatible.\"));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isValidExtensionVersion(version, extensionDescription, notices);\n\t}\n\n\tprivate static baseIsValidExtensionDescription(extensionFolderPath: string, extensionDescription: IExtensionDescription, notices: string[]): boolean {\n\t\tif (!extensionDescription) {\n\t\t\tnotices.push(nls.localize('extensionDescription.empty', \"Got empty extension description\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.publisher !== 'undefined' && typeof extensionDescription.publisher !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.publisher', \"property publisher must be of type `string`.\"));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.name !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.name', \"property `{0}` is mandatory and must be of type `string`\", 'name'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.version !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.version', \"property `{0}` is mandatory and must be of type `string`\", 'version'));\n\t\t\treturn false;\n\t\t}\n\t\tif (!extensionDescription.engines) {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines', \"property `{0}` is mandatory and must be of type `object`\", 'engines'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.engines.vscode !== 'string') {\n\t\t\tnotices.push(nls.localize('extensionDescription.engines.vscode', \"property `{0}` is mandatory and must be of type `string`\", 'engines.vscode'));\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof extensionDescription.extensionDependencies !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.extensionDependencies)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.extensionDependencies', \"property `{0}` can be omitted or must be of type `string[]`\", 'extensionDependencies'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.activationEvents !== 'undefined') {\n\t\t\tif (!ExtensionManifestValidator._isStringArray(extensionDescription.activationEvents)) {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents1', \"property `{0}` can be omitted or must be of type `string[]`\", 'activationEvents'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (typeof extensionDescription.main === 'undefined' && typeof extensionDescription.browser === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.activationEvents2', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.main !== 'undefined') {\n\t\t\tif (typeof extensionDescription.main !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main1', \"property `{0}` can be omitted or must be of type `string`\", 'main'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.main);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.main2', \"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.main3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'main'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (typeof extensionDescription.browser !== 'undefined') {\n\t\t\tif (typeof extensionDescription.browser !== 'string') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser1', \"property `{0}` can be omitted or must be of type `string`\", 'browser'));\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tconst normalizedAbsolutePath = path.join(extensionFolderPath, extensionDescription.browser);\n\t\t\t\tif (!normalizedAbsolutePath.startsWith(extensionFolderPath)) {\n\t\t\t\t\tnotices.push(nls.localize('extensionDescription.browser2', \"Expected `browser` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.\", normalizedAbsolutePath, extensionFolderPath));\n\t\t\t\t\t// not a failure case\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof extensionDescription.activationEvents === 'undefined') {\n\t\t\t\tnotices.push(nls.localize('extensionDescription.browser3', \"properties `{0}` and `{1}` must both be specified or must both be omitted\", 'activationEvents', 'browser'));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _isStringArray(arr: string[]): boolean {\n\t\tif (!Array.isArray(arr)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\tif (typeof arr[i] !== 'string') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class ExtensionScannerInput {\n\n\tpublic mtime: number | undefined;\n\n\tconstructor(\n\t\tpublic readonly ourVersion: string,\n\t\tpublic readonly commit: string | undefined,\n\t\tpublic readonly locale: string | undefined,\n\t\tpublic readonly devMode: boolean,\n\t\tpublic readonly absoluteFolderPath: string,\n\t\tpublic readonly isBuiltin: boolean,\n\t\tpublic readonly isUnderDevelopment: boolean,\n\t\tpublic readonly tanslations: Translations\n\t) {\n\t\t// Keep empty!! (JSON.parse)\n\t}\n\n\tpublic static createNLSConfig(input: ExtensionScannerInput): NlsConfiguration {\n\t\treturn {\n\t\t\tdevMode: input.devMode,\n\t\t\tlocale: input.locale,\n\t\t\tpseudo: input.locale === 'pseudo',\n\t\t\ttranslations: input.tanslations\n\t\t};\n\t}\n\n\tpublic static equals(a: ExtensionScannerInput, b: ExtensionScannerInput): boolean {\n\t\treturn (\n\t\t\ta.ourVersion === b.ourVersion\n\t\t\t&& a.commit === b.commit\n\t\t\t&& a.locale === b.locale\n\t\t\t&& a.devMode === b.devMode\n\t\t\t&& a.absoluteFolderPath === b.absoluteFolderPath\n\t\t\t&& a.isBuiltin === b.isBuiltin\n\t\t\t&& a.isUnderDevelopment === b.isUnderDevelopment\n\t\t\t&& a.mtime === b.mtime\n\t\t\t&& Translations.equals(a.tanslations, b.tanslations)\n\t\t);\n\t}\n}\n\nexport interface IExtensionReference {\n\tname: string;\n\tpath: string;\n}\n\nexport interface IExtensionResolver {\n\tresolveExtensions(): Promise<IExtensionReference[]>;\n}\n\nclass DefaultExtensionResolver implements IExtensionResolver {\n\n\tconstructor(private root: string) { }\n\n\tresolveExtensions(): Promise<IExtensionReference[]> {\n\t\treturn pfs.readDirsInDir(this.root)\n\t\t\t.then(folders => folders.map(name => ({ name, path: path.join(this.root, name) })));\n\t}\n}\n\nexport class ExtensionScanner {\n\n\t/**\n\t * Read the extension defined in `absoluteFolderPath`\n\t */\n\tprivate static scanExtension(version: string, log: ILog, absoluteFolderPath: string, isBuiltin: boolean, isUnderDevelopment: boolean, nlsConfig: NlsConfiguration): Promise<IExtensionDescription | null> {\n\t\tabsoluteFolderPath = path.normalize(absoluteFolderPath);\n\n\t\tlet parser = new ExtensionManifestParser(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\treturn parser.parse().then<IExtensionDescription | null>((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet nlsReplacer = new ExtensionManifestNLSReplacer(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t\t\treturn nlsReplacer.replaceNLS(extensionDescription);\n\t\t}).then((extensionDescription) => {\n\t\t\tif (extensionDescription === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tlet validator = new ExtensionManifestValidator(version, log, absoluteFolderPath, isBuiltin, isUnderDevelopment);\n\t\t\treturn validator.validate(extensionDescription);\n\t\t});\n\t}\n\n\t/**\n\t * Scan a list of extensions defined in `absoluteFolderPath`\n\t */\n\tpublic static async scanExtensions(input: ExtensionScannerInput, log: ILog, resolver: IExtensionResolver | null = null): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\tif (!resolver) {\n\t\t\tresolver = new DefaultExtensionResolver(absoluteFolderPath);\n\t\t}\n\n\t\ttry {\n\t\t\tlet obsolete: { [folderName: string]: boolean; } = {};\n\t\t\tif (!isBuiltin) {\n\t\t\t\ttry {\n\t\t\t\t\tconst obsoleteFileContents = await pfs.readFile(path.join(absoluteFolderPath, '.obsolete'), 'utf8');\n\t\t\t\t\tobsolete = JSON.parse(obsoleteFileContents);\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Don't care\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet refs = await resolver.resolveExtensions();\n\n\t\t\t// Ensure the same extension order\n\t\t\trefs.sort((a, b) => a.name < b.name ? -1 : 1);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\trefs = refs.filter(ref => ref.name.indexOf('.') !== 0); // Do not consider user extension folder starting with `.`\n\t\t\t}\n\n\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\tlet _extensionDescriptions = await Promise.all(refs.map(r => this.scanExtension(input.ourVersion, log, r.path, isBuiltin, isUnderDevelopment, nlsConfig)));\n\t\t\tlet extensionDescriptions = arrays.coalesce(_extensionDescriptions);\n\t\t\textensionDescriptions = extensionDescriptions.filter(item => item !== null && !obsolete[new ExtensionIdentifierWithVersion({ id: getGalleryExtensionId(item.publisher, item.name) }, item.version).key()]);\n\n\t\t\tif (!isBuiltin) {\n\t\t\t\t// Filter out outdated extensions\n\t\t\t\tconst byExtension: IExtensionDescription[][] = groupByExtension(extensionDescriptions, e => ({ id: e.identifier.value, uuid: e.uuid }));\n\t\t\t\textensionDescriptions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.version, b.version))[0]);\n\t\t\t}\n\n\t\t\textensionDescriptions.sort((a, b) => {\n\t\t\t\tif (a.extensionLocation.fsPath < b.extensionLocation.fsPath) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn extensionDescriptions;\n\t\t} catch (err) {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t}\n\t}\n\n\t/**\n\t * Combination of scanExtension and scanExtensions: If an extension manifest is found at root, we load just this extension,\n\t * otherwise we assume the folder contains multiple extensions.\n\t */\n\tpublic static scanOneOrMultipleExtensions(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription[]> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\n\t\treturn pfs.fileExists(path.join(absoluteFolderPath, MANIFEST_FILE)).then((exists) => {\n\t\t\tif (exists) {\n\t\t\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\t\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig).then((extensionDescription) => {\n\t\t\t\t\tif (extensionDescription === null) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t\t\treturn [extensionDescription];\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this.scanExtensions(input, log);\n\t\t}, (err) => {\n\t\t\tlog.error(absoluteFolderPath, err);\n\t\t\treturn [];\n\t\t});\n\t}\n\n\tpublic static scanSingleExtension(input: ExtensionScannerInput, log: ILog): Promise<IExtensionDescription | null> {\n\t\tconst absoluteFolderPath = input.absoluteFolderPath;\n\t\tconst isBuiltin = input.isBuiltin;\n\t\tconst isUnderDevelopment = input.isUnderDevelopment;\n\t\tconst nlsConfig = ExtensionScannerInput.createNLSConfig(input);\n\t\treturn this.scanExtension(input.ourVersion, log, absoluteFolderPath, isBuiltin, isUnderDevelopment, nlsConfig);\n\t}\n\n\tpublic static mergeBuiltinExtensions(builtinExtensions: Promise<IExtensionDescription[]>, extraBuiltinExtensions: Promise<IExtensionDescription[]>): Promise<IExtensionDescription[]> {\n\t\treturn Promise.all([builtinExtensions, extraBuiltinExtensions]).then(([builtinExtensions, extraBuiltinExtensions]) => {\n\t\t\tlet resultMap: { [id: string]: IExtensionDescription; } = Object.create(null);\n\t\t\tfor (let i = 0, len = builtinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(builtinExtensions[i].identifier)] = builtinExtensions[i];\n\t\t\t}\n\t\t\t// Overwrite with extensions found in extra\n\t\t\tfor (let i = 0, len = extraBuiltinExtensions.length; i < len; i++) {\n\t\t\t\tresultMap[ExtensionIdentifier.toKey(extraBuiltinExtensions[i].identifier)] = extraBuiltinExtensions[i];\n\t\t\t}\n\n\t\t\tlet resultArr = Object.keys(resultMap).map((id) => resultMap[id]);\n\t\t\tresultArr.sort((a, b) => {\n\t\t\t\tconst aLastSegment = path.basename(a.extensionLocation.fsPath);\n\t\t\t\tconst bLastSegment = path.basename(b.extensionLocation.fsPath);\n\t\t\t\tif (aLastSegment < bLastSegment) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (aLastSegment > bLastSegment) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\treturn resultArr;\n\t\t});\n\t}\n}\n","import { Server } from '@coder/node-browser';\nimport * as path from 'path';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { transformOutgoingURIs } from 'vs/base/common/uriIpc';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileType, FileWriteOptions, IStat, IWatchOptions } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IRemoteAgentEnvironment, RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { INodeProxyService } from 'vs/server/common/nodeProxy';\nimport { getTranslations } from 'vs/server/node/nls';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { IFileChangeDto } from 'vs/workbench/api/common/extHost.protocol';\nimport { ExtensionScanner, ExtensionScannerInput } from 'vs/workbench/services/extensions/node/extensionPoints';\n\n/**\n * Extend the file provider to allow unwatching.\n */\nclass Watcher extends DiskFileSystemProvider {\n\tpublic readonly watches = new Map<number, IDisposable>();\n\n\tpublic dispose(): void {\n\t\tthis.watches.forEach((w) => w.dispose());\n\t\tthis.watches.clear();\n\t\tsuper.dispose();\n\t}\n\n\tpublic _watch(req: number, resource: URI, opts: IWatchOptions): void {\n\t\tthis.watches.set(req, this.watch(resource, opts));\n\t}\n\n\tpublic unwatch(req: number): void {\n\t\tthis.watches.get(req)!.dispose();\n\t\tthis.watches.delete(req);\n\t}\n}\n\nexport class FileProviderChannel implements IServerChannel<RemoteAgentConnectionContext>, IDisposable {\n\tprivate readonly provider: DiskFileSystemProvider;\n\tprivate readonly watchers = new Map<string, Watcher>();\n\n\tpublic constructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\tprivate readonly logService: ILogService,\n\t) {\n\t\tthis.provider = new DiskFileSystemProvider(this.logService);\n\t}\n\n\tpublic listen(context: RemoteAgentConnectionContext, event: string, args?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'filechange': return this.filechange(context, args[0]);\n\t\t\tcase 'readFileStream': return this.readFileStream(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tprivate filechange(context: RemoteAgentConnectionContext, session: string): Event<IFileChangeDto[]> {\n\t\tconst emitter = new Emitter<IFileChangeDto[]>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst provider = new Watcher(this.logService);\n\t\t\t\tthis.watchers.set(session, provider);\n\t\t\t\tconst transformer = getUriTransformer(context.remoteAuthority);\n\t\t\t\tprovider.onDidChangeFile((events) => {\n\t\t\t\t\temitter.fire(events.map((event) => ({\n\t\t\t\t\t\t...event,\n\t\t\t\t\t\tresource: transformer.transformOutgoing(event.resource),\n\t\t\t\t\t})));\n\t\t\t\t});\n\t\t\t\tprovider.onDidErrorOccur((event) => this.logService.error(event));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.watchers.get(session)!.dispose();\n\t\t\t\tthis.watchers.delete(session);\n\t\t\t},\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate readFileStream(resource: UriComponents, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst cts = new CancellationTokenSource();\n\t\tconst fileStream = this.provider.readFileStream(this.transform(resource), opts, cts.token);\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tfileStream.on('data', (data) => emitter.fire(VSBuffer.wrap(data)));\n\t\t\t\tfileStream.on('error', (error) => emitter.fire(error));\n\t\t\t\tfileStream.on('end', () => emitter.fire('end'));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => cts.cancel(),\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tpublic call(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(args[0]);\n\t\t\tcase 'open': return this.open(args[0], args[1]);\n\t\t\tcase 'close': return this.close(args[0]);\n\t\t\tcase 'read': return this.read(args[0], args[1], args[2]);\n\t\t\tcase 'readFile': return this.readFile(args[0]);\n\t\t\tcase 'write': return this.write(args[0], args[1], args[2], args[3], args[4]);\n\t\t\tcase 'writeFile': return this.writeFile(args[0], args[1], args[2]);\n\t\t\tcase 'delete': return this.delete(args[0], args[1]);\n\t\t\tcase 'mkdir': return this.mkdir(args[0]);\n\t\t\tcase 'readdir': return this.readdir(args[0]);\n\t\t\tcase 'rename': return this.rename(args[0], args[1], args[2]);\n\t\t\tcase 'copy': return this.copy(args[0], args[1], args[2]);\n\t\t\tcase 'watch': return this.watch(args[0], args[1], args[2], args[3]);\n\t\t\tcase 'unwatch': return this.unwatch(args[0], args[1]);\n\t\t}\n\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.watchers.forEach((w) => w.dispose());\n\t\tthis.watchers.clear();\n\t}\n\n\tprivate async stat(resource: UriComponents): Promise<IStat> {\n\t\treturn this.provider.stat(this.transform(resource));\n\t}\n\n\tprivate async open(resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.provider.open(this.transform(resource), opts);\n\t}\n\n\tprivate async close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, 0, length);\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate async readFile(resource: UriComponents): Promise<VSBuffer> {\n\t\treturn VSBuffer.wrap(await this.provider.readFile(this.transform(resource)));\n\t}\n\n\tprivate write(fd: number, pos: number, buffer: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, buffer.buffer, offset, length);\n\t}\n\n\tprivate writeFile(resource: UriComponents, buffer: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.provider.writeFile(this.transform(resource), buffer.buffer, opts);\n\t}\n\n\tprivate async delete(resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.provider.delete(this.transform(resource), opts);\n\t}\n\n\tprivate async mkdir(resource: UriComponents): Promise<void> {\n\t\treturn this.provider.mkdir(this.transform(resource));\n\t}\n\n\tprivate async readdir(resource: UriComponents): Promise<[string, FileType][]> {\n\t\treturn this.provider.readdir(this.transform(resource));\n\t}\n\n\tprivate async rename(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.rename(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate copy(resource: UriComponents, target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.provider.copy(this.transform(resource), URI.from(target), opts);\n\t}\n\n\tprivate async watch(session: string, req: number, resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tthis.watchers.get(session)!._watch(req, this.transform(resource), opts);\n\t}\n\n\tprivate async unwatch(session: string, req: number): Promise<void> {\n\t\tthis.watchers.get(session)!.unwatch(req);\n\t}\n\n\tprivate transform(resource: UriComponents): URI {\n\t\t// Used for walkthrough content.\n\t\tif (/^\\/static[^/]*\\//.test(resource.path)) {\n\t\t\treturn URI.file(this.environmentService.appRoot + resource.path.replace(/^\\/static[^/]*\\//, '/'));\n\t\t// Used by the webview service worker to load resources.\n\t\t} else if (resource.path === '/vscode-resource' && resource.query) {\n\t\t\ttry {\n\t\t\t\tconst query = JSON.parse(resource.query);\n\t\t\t\tif (query.requestResourcePath) {\n\t\t\t\t\treturn URI.file(query.requestResourcePath);\n\t\t\t\t}\n\t\t\t} catch (error) { /* Carry on. */ }\n\t\t}\n\t\treturn URI.from(resource);\n\t}\n}\n\n// See ../../workbench/services/remote/common/remoteAgentEnvironmentChannel.ts\nexport class ExtensionEnvironmentChannel implements IServerChannel {\n\tpublic constructor(\n\t\tprivate readonly environment: INativeEnvironmentService,\n\t\tprivate readonly log: ILogService,\n\t\tprivate readonly telemetry: ITelemetryService,\n\t\tprivate readonly connectionToken: string,\n\t) {}\n\n\tpublic listen(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Invalid listen '${event}'`);\n\t}\n\n\tpublic async call(context: any, command: string, args: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getEnvironmentData':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.getEnvironmentData(),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'scanExtensions':\n\t\t\t\treturn transformOutgoingURIs(\n\t\t\t\t\tawait this.scanExtensions(args.language),\n\t\t\t\t\tgetUriTransformer(context.remoteAuthority),\n\t\t\t\t);\n\t\t\tcase 'getDiagnosticInfo': return this.getDiagnosticInfo();\n\t\t\tcase 'disableTelemetry': return this.disableTelemetry();\n\t\t\tcase 'logTelemetry': return this.logTelemetry(args[0], args[1]);\n\t\t\tcase 'flushTelemetry': return this.flushTelemetry();\n\t\t}\n\t\tthrow new Error(`Invalid call '${command}'`);\n\t}\n\n\tprivate async getEnvironmentData(): Promise<IRemoteAgentEnvironment> {\n\t\treturn {\n\t\t\tpid: process.pid,\n\t\t\tconnectionToken: this.connectionToken,\n\t\t\tappRoot: URI.file(this.environment.appRoot),\n\t\t\tsettingsPath: this.environment.settingsResource,\n\t\t\tlogsPath: URI.file(this.environment.logsPath),\n\t\t\textensionsPath: URI.file(this.environment.extensionsPath!),\n\t\t\textensionHostLogsPath: URI.file(path.join(this.environment.logsPath, 'extension-host')),\n\t\t\tglobalStorageHome: this.environment.globalStorageHome,\n\t\t\tworkspaceStorageHome: this.environment.workspaceStorageHome,\n\t\t\tuserHome: this.environment.userHome,\n\t\t\tos: OS,\n\t\t};\n\t}\n\n\tprivate async scanExtensions(language: string): Promise<IExtensionDescription[]> {\n\t\tconst translations = await getTranslations(language, this.environment.userDataPath);\n\n\t\tconst scanMultiple = (isBuiltin: boolean, isUnderDevelopment: boolean, paths: string[]): Promise<IExtensionDescription[][]> => {\n\t\t\treturn Promise.all(paths.map((path) => {\n\t\t\t\treturn ExtensionScanner.scanExtensions(new ExtensionScannerInput(\n\t\t\t\t\tproduct.version,\n\t\t\t\t\tproduct.commit,\n\t\t\t\t\tlanguage,\n\t\t\t\t\t!!process.env.VSCODE_DEV,\n\t\t\t\t\tpath,\n\t\t\t\t\tisBuiltin,\n\t\t\t\t\tisUnderDevelopment,\n\t\t\t\t\ttranslations,\n\t\t\t\t), this.log);\n\t\t\t}));\n\t\t};\n\n\t\tconst scanBuiltin = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(true, false, [this.environment.builtinExtensionsPath, ...this.environment.extraBuiltinExtensionPaths]);\n\t\t};\n\n\t\tconst scanInstalled = async (): Promise<IExtensionDescription[][]> => {\n\t\t\treturn scanMultiple(false, true, [this.environment.extensionsPath!, ...this.environment.extraExtensionPaths]);\n\t\t};\n\n\t\treturn Promise.all([scanBuiltin(), scanInstalled()]).then((allExtensions) => {\n\t\t\tconst uniqueExtensions = new Map<string, IExtensionDescription>();\n\t\t\tallExtensions.forEach((multipleExtensions) => {\n\t\t\t\tmultipleExtensions.forEach((extensions) => {\n\t\t\t\t\textensions.forEach((extension) => {\n\t\t\t\t\t\tconst id = ExtensionIdentifier.toKey(extension.identifier);\n\t\t\t\t\t\tif (uniqueExtensions.has(id)) {\n\t\t\t\t\t\t\tconst oldPath = uniqueExtensions.get(id)!.extensionLocation.fsPath;\n\t\t\t\t\t\t\tconst newPath = extension.extensionLocation.fsPath;\n\t\t\t\t\t\t\tthis.log.warn(`${oldPath} has been overridden ${newPath}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuniqueExtensions.set(id, {\n\t\t\t\t\t\t\t...extension,\n\t\t\t\t\t\t\t// Force extensions that should run on the client due to latency\n\t\t\t\t\t\t\t// issues.\n\t\t\t\t\t\t\textensionKind: extension.identifier.value === 'vscodevim.vim'\n\t\t\t\t\t\t\t\t? [ 'web' ]\n\t\t\t\t\t\t\t\t: extension.extensionKind,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn Array.from(uniqueExtensions.values());\n\t\t});\n\t}\n\n\tprivate getDiagnosticInfo(): Promise<IDiagnosticInfo> {\n\t\tthrow new Error('not implemented');\n\t}\n\n\tprivate async disableTelemetry(): Promise<void> {\n\t\tthis.telemetry.setEnabled(false);\n\t}\n\n\tprivate async logTelemetry(eventName: string, data: ITelemetryData): Promise<void> {\n\t\tthis.telemetry.publicLog(eventName, data);\n\t}\n\n\tprivate async flushTelemetry(): Promise<void> {\n\t\t// We always send immediately at the moment.\n\t}\n}\n\nexport class NodeProxyService implements INodeProxyService {\n\tpublic _serviceBrand = undefined;\n\n\tpublic readonly server: Server;\n\n\tprivate readonly _onMessage = new Emitter<string>();\n\tpublic readonly onMessage = this._onMessage.event;\n\tprivate readonly _$onMessage = new Emitter<string>();\n\tpublic readonly $onMessage = this._$onMessage.event;\n\tpublic readonly _onDown = new Emitter<void>();\n\tpublic readonly onDown = this._onDown.event;\n\tpublic readonly _onUp = new Emitter<void>();\n\tpublic readonly onUp = this._onUp.event;\n\n\t// Unused because the server connection will never permanently close.\n\tprivate readonly _onClose = new Emitter<void>();\n\tpublic readonly onClose = this._onClose.event;\n\n\tpublic constructor() {\n\t\t// TODO: down/up\n\t\tthis.server = new Server({\n\t\t\tonMessage: this.$onMessage,\n\t\t\tonClose: this.onClose,\n\t\t\tonDown: this.onDown,\n\t\t\tonUp: this.onUp,\n\t\t\tsend: (message: string): void => {\n\t\t\t\tthis._onMessage.fire(message);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic send(message: string): void {\n\t\tthis._$onMessage.fire(message);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { FileChangeType, FileDeleteOptions, FileOverwriteOptions, FileSystemProviderCapabilities, FileType, IFileChange, IStat, IWatchOptions, FileOpenOptions, IFileSystemProviderWithFileReadWriteCapability, FileWriteOptions, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileFolderCopyCapability, FileReadStreamOptions, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { IRemoteAgentService } from 'vs/workbench/services/remote/common/remoteAgentService';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { newWriteableStream, ReadableStreamEvents, ReadableStreamEventPayload } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport const REMOTE_FILE_SYSTEM_CHANNEL_NAME = 'remotefilesystem';\n\nexport interface IFileChangeDto {\n\tresource: UriComponents;\n\ttype: FileChangeType;\n}\n\nexport class RemoteFileSystemProvider extends Disposable implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tprivate readonly session: string = generateUuid();\n\tprivate readonly channel: IChannel;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChange.event;\n\n\tprivate _onDidWatchErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidWatchErrorOccur.event;\n\n\tprivate readonly _onDidChangeCapabilities = this._register(new Emitter<void>());\n\treadonly onDidChangeCapabilities = this._onDidChangeCapabilities.event;\n\n\tprivate _capabilities!: FileSystemProviderCapabilities;\n\tget capabilities(): FileSystemProviderCapabilities { return this._capabilities; }\n\n\tconstructor(remoteAgentService: IRemoteAgentService) {\n\t\tsuper();\n\n\t\tconst connection = remoteAgentService.getConnection()!;\n\t\tthis.channel = connection.getChannel<IChannel>(REMOTE_FILE_SYSTEM_CHANNEL_NAME);\n\n\t\t// Initially assume case sensitivity until remote environment is resolved\n\t\tthis.setCaseSensitive(true);\n\t\t(async () => {\n\t\t\tconst remoteAgentEnvironment = await remoteAgentService.getEnvironment();\n\t\t\tthis.setCaseSensitive(remoteAgentEnvironment?.os === OperatingSystem.Linux);\n\t\t})();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<IFileChangeDto[] | string>('filechange', [this.session])(eventsOrError => {\n\t\t\tif (Array.isArray(eventsOrError)) {\n\t\t\t\tconst events = eventsOrError;\n\t\t\t\tthis._onDidChange.fire(events.map(event => ({ resource: URI.revive(event.resource), type: event.type })));\n\t\t\t} else {\n\t\t\t\tconst error = eventsOrError;\n\t\t\t\tthis._onDidWatchErrorOccur.fire(error);\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetCaseSensitive(isCaseSensitive: boolean) {\n\t\tlet capabilities = (\n\t\t\tFileSystemProviderCapabilities.FileReadWrite\n\t\t\t| FileSystemProviderCapabilities.FileOpenReadWriteClose\n\t\t\t| FileSystemProviderCapabilities.FileReadStream\n\t\t\t| FileSystemProviderCapabilities.FileFolderCopy\n\t\t);\n\n\t\tif (isCaseSensitive) {\n\t\t\tcapabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t}\n\n\t\tthis._capabilities = capabilities;\n\t\tthis._onDidChangeCapabilities.fire(undefined);\n\t}\n\n\t// --- forwarding calls\n\n\tstat(resource: URI): Promise<IStat> {\n\t\treturn this.channel.call('stat', [resource]);\n\t}\n\n\topen(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\treturn this.channel.call('open', [resource, opts]);\n\t}\n\n\tclose(fd: number): Promise<void> {\n\t\treturn this.channel.call('close', [fd]);\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst [bytes, bytesRead]: [VSBuffer, number] = await this.channel.call('read', [fd, pos, length]);\n\n\t\t// copy back the data that was written into the buffer on the remote\n\t\t// side. we need to do this because buffers are not referenced by\n\t\t// pointer, but only by value and as such cannot be directly written\n\t\t// to from the other process.\n\t\tdata.set(bytes.buffer.slice(0, bytesRead), offset);\n\n\t\treturn bytesRead;\n\t}\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\tconst buff = <VSBuffer>await this.channel.call('readFile', [resource]);\n\n\t\treturn buff.buffer;\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\t// Reading as file stream goes through an event to the remote side\n\t\tconst listener = this.channel.listen<ReadableStreamEventPayload<VSBuffer>>('readFileStream', [resource, opts])(dataOrErrorOrEnd => {\n\n\t\t\t// data\n\t\t\tif (dataOrErrorOrEnd instanceof VSBuffer) {\n\t\t\t\tstream.write(dataOrErrorOrEnd.buffer);\n\t\t\t}\n\n\t\t\t// end or error\n\t\t\telse {\n\t\t\t\tif (dataOrErrorOrEnd === 'end') {\n\t\t\t\t\tstream.end();\n\t\t\t\t} else {\n\n\t\t\t\t\t// Since we receive data through a IPC channel, it is likely\n\t\t\t\t\t// that the error was not serialized, or only partially. To\n\t\t\t\t\t// ensure our API use is correct, we convert the data to an\n\t\t\t\t\t// error here to forward it properly.\n\t\t\t\t\tlet error = dataOrErrorOrEnd;\n\t\t\t\t\tif (!(error instanceof Error)) {\n\t\t\t\t\t\terror = new Error(toErrorMessage(error));\n\t\t\t\t\t}\n\n\t\t\t\t\tstream.end(error);\n\t\t\t\t}\n\n\t\t\t\t// Signal to the remote side that we no longer listen\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\t// Support cancellation\n\t\ttoken.onCancellationRequested(() => {\n\n\t\t\t// Ensure to end the stream properly with an error\n\t\t\t// to indicate the cancellation.\n\t\t\tstream.end(canceled());\n\n\t\t\t// Ensure to dispose the listener upon cancellation. This will\n\t\t\t// bubble through the remote side as event and allows to stop\n\t\t\t// reading the file.\n\t\t\tlistener.dispose();\n\t\t});\n\n\t\treturn stream;\n\t}\n\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\treturn this.channel.call('write', [fd, pos, VSBuffer.wrap(data), offset, length]);\n\t}\n\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\treturn this.channel.call('writeFile', [resource, VSBuffer.wrap(content), opts]);\n\t}\n\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\treturn this.channel.call('delete', [resource, opts]);\n\t}\n\n\tmkdir(resource: URI): Promise<void> {\n\t\treturn this.channel.call('mkdir', [resource]);\n\t}\n\n\treaddir(resource: URI): Promise<[string, FileType][]> {\n\t\treturn this.channel.call('readdir', [resource]);\n\t}\n\n\trename(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('rename', [resource, target, opts]);\n\t}\n\n\tcopy(resource: URI, target: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\treturn this.channel.call('copy', [resource, target, opts]);\n\t}\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tconst req = Math.random();\n\t\tthis.channel.call('watch', [this.session, req, resource, opts]);\n\n\t\treturn toDisposable(() => this.channel.call('unwatch', [this.session, req]));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { RemoteAgentConnectionContext, IRemoteAgentEnvironment } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDiagnosticInfoOptions, IDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { Event } from 'vs/base/common/event';\nimport { PersistenConnectionEvent as PersistentConnectionEvent, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { ITelemetryData } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionIdentifier, IExtensionDescription } from 'vs/platform/extensions/common/extensions';\nimport { URI } from 'vs/base/common/uri';\n\nexport const RemoteExtensionLogFileName = 'remoteagent';\n\nexport const IRemoteAgentService = createDecorator<IRemoteAgentService>('remoteAgentService');\n\nexport interface IRemoteAgentService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly socketFactory: ISocketFactory;\n\n\tgetConnection(): IRemoteAgentConnection | null;\n\t/**\n\t * Get the remote environment. In case of an error, returns `null`.\n\t */\n\tgetEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Get the remote environment. Can return an error.\n\t */\n\tgetRawEnvironment(): Promise<IRemoteAgentEnvironment | null>;\n\t/**\n\t * Scan remote extensions.\n\t */\n\tscanExtensions(skipExtensions?: ExtensionIdentifier[]): Promise<IExtensionDescription[]>;\n\t/**\n\t * Scan a single remote extension.\n\t */\n\tscanSingleExtension(extensionLocation: URI, isBuiltin: boolean): Promise<IExtensionDescription | null>;\n\tgetDiagnosticInfo(options: IDiagnosticInfoOptions): Promise<IDiagnosticInfo | undefined>;\n\tdisableTelemetry(): Promise<void>;\n\tlogTelemetry(eventName: string, data?: ITelemetryData): Promise<void>;\n\tflushTelemetry(): Promise<void>;\n}\n\nexport interface IRemoteAgentConnection {\n\treadonly remoteAuthority: string;\n\n\treadonly onReconnecting: Event<void>;\n\treadonly onDidStateChange: Event<PersistentConnectionEvent>;\n\n\tgetChannel<T extends IChannel>(channelName: string): T;\n\twithChannel<T extends IChannel, R>(channelName: string, callback: (channel: T) => Promise<R>): Promise<R>;\n\tregisterChannel<T extends IServerChannel<RemoteAgentConnectionContext>>(channelName: string, channel: T): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { Sequencer, createCancelablePromise } from 'vs/base/common/async';\nimport { mkdirp, rimraf } from 'vs/base/node/pfs';\nimport { open as _openZip, Entry, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { assertIsDefined } from 'vs/base/common/types';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(mkdirp(targetDirName)).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => mkdirp(targetFileName).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => rimraf(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as semver from 'semver-umd';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as path from 'vs/base/common/path';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ILocalExtension, IGalleryMetadata, ExtensionManagementError } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, groupByExtension, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { Limiter, Queue } from 'vs/base/common/async';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { localize } from 'vs/nls';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { isWindows } from 'vs/base/common/platform';\nimport { flatten } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { FileAccess } from 'vs/base/common/network';\n\nconst ERROR_SCANNING_SYS_EXTENSIONS = 'scanningSystem';\nconst ERROR_SCANNING_USER_EXTENSIONS = 'scanningUser';\nconst INSTALL_ERROR_EXTRACTING = 'extracting';\nconst INSTALL_ERROR_DELETING = 'deleting';\nconst INSTALL_ERROR_RENAMING = 'renaming';\n\nexport type IMetadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; }>;\ntype ILocalExtensionManifest = IExtensionManifest & { __metadata?: IMetadata };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath!;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_SYS_EXTENSIONS))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ERROR_SCANNING_USER_EXTENSIONS))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDirs(this.extensionsPath, this.environmentService.extraExtensionPaths, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${folderName}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.rimraf(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.rimraf(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifier.id), INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifier, zipPath, tempPath, token);\n\t\ttry {\n\t\t\tawait this.rename(identifier, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.info('Rename failed. Deleting from extracted location', tempPath);\n\t\t\ttry {\n\t\t\t\tpfs.rimraf(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet local: ILocalExtension | null = null;\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(folderName, this.extensionsPath, ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: IMetadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\n\t\t// unset if false\n\t\tmetadata.isMachineScoped = metadata.isMachineScoped || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = metadata;\n\t\tawait pfs.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<{ [id: string]: boolean; }> {\n\t\treturn this.withUninstalledExtensions(uninstalled => uninstalled);\n\t}\n\n\tasync withUninstalledExtensions<T>(fn: (uninstalled: IStringDictionary<boolean>) => T): Promise<T> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tconst result = fn(uninstalled);\n\n\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\tawait pfs.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t} else {\n\t\t\t\tawait pfs.rimraf(this.uninstalledPath);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.rimraf(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.rimraf(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, INSTALL_ERROR_DELETING);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.rimraf(location); } catch (e) { /* Ignore */ }\n\t\t\tthrow new ExtensionManagementError(e.message, e instanceof ExtractError && e.type ? e.type : INSTALL_ERROR_EXTRACTING);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || INSTALL_ERROR_RENAMING);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst extensionsFolders = await pfs.readdir(dir)\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn <string[]>[];\n\t\t\t});\n\t\tconst extensions = await Promise.all<ILocalExtension>(extensionsFolders.map(extensionFolder => limiter.queue(() => this.scanExtension(extensionFolder, dir, type))));\n\t\treturn extensions.filter(e => e && e.identifier);\n\t}\n\n\tprivate async scanExtension(folderName: string, root: string, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\tif (type === ExtensionType.User && folderName.indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\treturn null;\n\t\t}\n\t\tconst extensionPath = path.join(root, folderName);\n\t\ttry {\n\t\t\tconst children = await pfs.readdir(extensionPath);\n\t\t\tconst { manifest, metadata } = await this.readManifest(extensionPath);\n\t\t\tconst readme = children.filter(child => /^readme(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst readmeUrl = readme ? URI.file(path.join(extensionPath, readme)) : undefined;\n\t\t\tconst changelog = children.filter(child => /^changelog(\\.txt|\\.md|)$/i.test(child))[0];\n\t\t\tconst changelogUrl = changelog ? URI.file(path.join(extensionPath, changelog)) : undefined;\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: URI.file(extensionPath), readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false };\n\t\t\tif (metadata) {\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (e) {\n\t\t\tthis.logService.trace(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDirs(this.systemExtensionsPath, this.environmentService.extraBuiltinExtensionPaths, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: ILocalExtension, metadata: IMetadata): void {\n\t\tlocal.publisherDisplayName = metadata.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata.publisherId || null;\n\t\tlocal.identifier.uuid = metadata.id;\n\t\tlocal.isMachineScoped = !!metadata.isMachineScoped;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promise.all(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promise.all(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promise.all(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: IMetadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tdelete manifest.__metadata;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async scanExtensionsInDirs(dir: string, dirs: string[], type: ExtensionType): Promise<ILocalExtension[]>{\n\t\tconst results = await Promise.all([dir, ...dirs].map((path) => this.scanExtensionsInDir(path, type)));\n\t\treturn results.reduce((flat, current) => flat.concat(current), []);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { toDisposable, Disposable } from 'vs/base/common/lifecycle';\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { zip, IFile } from 'vs/base/node/zip';\nimport {\n\tIExtensionManagementService, IExtensionGalleryService, ILocalExtension,\n\tIGalleryExtension, IGalleryMetadata,\n\tInstallExtensionEvent, DidInstallExtensionEvent, DidUninstallExtensionEvent,\n\tStatisticType,\n\tIExtensionIdentifier,\n\tIReportedExtension,\n\tInstallOperation,\n\tINSTALL_ERROR_MALICIOUS,\n\tINSTALL_ERROR_INCOMPATIBLE,\n\tExtensionManagementError\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getGalleryExtensionId, getMaliciousExtensionsSet, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, ExtensionIdentifierWithVersion } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createCancelablePromise, CancelablePromise } from 'vs/base/common/async';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport * as semver from 'semver-umd';\nimport { URI } from 'vs/base/common/uri';\nimport product from 'vs/platform/product/common/product';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { joinPath } from 'vs/base/common/resources';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { optional, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { Schemas } from 'vs/base/common/network';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType } from 'vs/platform/extensions/common/extensions';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsScanner, IMetadata } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\n\nconst INSTALL_ERROR_UNSET_UNINSTALLED = 'unsetUninstalled';\nconst INSTALL_ERROR_DOWNLOADING = 'downloading';\nconst INSTALL_ERROR_VALIDATING = 'validating';\nconst INSTALL_ERROR_LOCAL = 'local';\nconst ERROR_UNKNOWN = 'unknown';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: IMetadata;\n}\n\nexport class ExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate reportedExtensions: Promise<IReportedExtension[]> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, CancelablePromise<ILocalExtension>>();\n\tprivate readonly uninstallingExtensions: Map<string, CancelablePromise<void>> = new Map<string, CancelablePromise<void>>();\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtension = this._register(new Emitter<DidInstallExtensionEvent>());\n\treadonly onDidInstallExtension: Event<DidInstallExtensionEvent> = this._onDidInstallExtension.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprivate _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@optional(IDownloadService) private downloadService: IDownloadService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n\tasync install(vsix: URI, isMachineScoped?: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\t\treturn createCancelablePromise(async token => {\n\n\t\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, product.version)) {\n\t\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", identifier.id, product.version));\n\t\t\t}\n\n\t\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(identifier, manifest.version);\n\t\t\tconst installedExtensions = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existing = installedExtensions.find(i => areSameExtensions(identifier, i.identifier));\n\t\t\tif (existing) {\n\t\t\t\tisMachineScoped = isMachineScoped || existing.isMachineScoped;\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t} else if (semver.gt(existing.manifest.version, manifest.version)) {\n\t\t\t\t\tawait this.uninstallExtension(existing);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\t\tif (existing) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", manifest.displayName || manifest.name));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info('Installing the extension:', identifier.id);\n\t\t\tthis._onInstallExtension.fire({ identifier, zipPath });\n\n\t\t\tlet metadata: IGalleryMetadata | undefined;\n\t\t\ttry {\n\t\t\t\tmetadata = await this.getGalleryMetadata(getGalleryExtensionId(manifest.publisher, manifest.name));\n\t\t\t} catch (e) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tconst local = await this.installFromZipPath(identifierWithVersion, zipPath, isMachineScoped ? { ...(metadata || {}), isMachineScoped } : metadata, operation, token);\n\t\t\t\tthis.logService.info('Successfully installed the extension:', identifier.id);\n\t\t\t\treturn local;\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error('Failed to install the extension:', identifier.id, e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tif (!this.downloadService) {\n\t\t\tthrow new Error('Download service is not available');\n\t\t}\n\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprivate async installFromZipPath(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: IMetadata | undefined, operation: InstallOperation, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.installExtension({ zipPath, identifierWithVersion, metadata }, token);\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, undefined);\n\t\t\t} catch (error) {\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionDependencies)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t\tif (isNonEmptyArray(local.manifest.extensionPack)) {\n\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, local.identifier.id, error.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, local, operation });\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tthis._onDidInstallExtension.fire({ identifier: identifierWithVersion.identifier, zipPath, operation, error });\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\treturn true;\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, isMachineScoped?: boolean): Promise<ILocalExtension> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\ttry {\n\t\t\textension = await this.checkAndGetCompatibleVersion(extension);\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(InstallOperation.Install), getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst key = new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key();\n\t\tlet cancellablePromise = this.installingExtensions.get(key);\n\t\tif (!cancellablePromise) {\n\t\t\tcancellablePromise = createCancelablePromise(token => this.doInstallFromGallery(extension, !!isMachineScoped, token));\n\t\t\tthis.installingExtensions.set(key, cancellablePromise);\n\t\t\tcancellablePromise.finally(() => this.installingExtensions.delete(key));\n\t\t}\n\n\t\treturn cancellablePromise;\n\t}\n\n\tprivate async doInstallFromGallery(extension: IGalleryExtension, isMachineScoped: boolean, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst startTime = new Date().getTime();\n\t\tlet operation: InstallOperation = InstallOperation.Install;\n\t\tthis.logService.info('Installing extension:', extension.identifier.id);\n\t\tthis._onInstallExtension.fire({ identifier: extension.identifier, gallery: extension });\n\n\t\ttry {\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (existingExtension) {\n\t\t\t\toperation = InstallOperation.Update;\n\t\t\t}\n\n\t\t\tconst installableExtension = await this.downloadInstallableExtension(extension, operation);\n\t\t\tinstallableExtension.metadata.isMachineScoped = isMachineScoped || existingExtension?.isMachineScoped;\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\n\t\t\ttry { await this.extensionsDownloader.delete(URI.file(installableExtension.zipPath)); } catch (error) { /* Ignore */ }\n\n\t\t\ttry {\n\t\t\t\tawait this.installDependenciesAndPackExtensions(local, existingExtension);\n\t\t\t} catch (error) {\n\t\t\t\ttry { await this.uninstall(local); } catch (error) { /* Ignore */ }\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, extension.version)) {\n\t\t\t\tawait this.setUninstalled(existingExtension);\n\t\t\t}\n\n\t\t\tthis.logService.info(`Extensions installed successfully:`, extension.identifier.id);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, local, operation });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, undefined);\n\t\t\treturn local;\n\n\t\t} catch (error) {\n\t\t\tconst errorCode = error && (<ExtensionManagementError>error).code ? (<ExtensionManagementError>error).code : ERROR_UNKNOWN;\n\t\t\tthis.logService.error(`Failed to install extension:`, extension.identifier.id, error ? error.message : errorCode);\n\t\t\tthis._onDidInstallExtension.fire({ identifier: extension.identifier, gallery: extension, operation, error: errorCode });\n\t\t\tthis.reportTelemetry(this.getTelemetryEvent(operation), getGalleryExtensionTelemetryData(extension), new Date().getTime() - startTime, error);\n\t\t\tif (error instanceof Error) {\n\t\t\t\terror.name = errorCode;\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension): Promise<IGalleryExtension> {\n\t\tif (await this.isMalicious(extension)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install extension since it was reported to be problematic.\"), INSTALL_ERROR_MALICIOUS);\n\t\t}\n\n\t\tconst compatibleExtension = await this.galleryService.getCompatibleExtension(extension);\n\t\tif (!compatibleExtension) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).\", extension.identifier.id, product.version), INSTALL_ERROR_INCOMPATIBLE);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.setUninstalled(extension);\n\t\ttry {\n\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t} catch (e) {\n\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t}\n\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tprivate getTelemetryEvent(operation: InstallOperation): string {\n\t\treturn operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install';\n\t}\n\n\tprivate async isMalicious(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst report = await this.getExtensionsReport();\n\t\treturn getMaliciousExtensionsSet(report).has(extension.identifier.id);\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tconst zip = await this.extensionsDownloader.downloadExtension(extension, operation);\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t\tzipPath = zip.fsPath;\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_DOWNLOADING);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(error).message, INSTALL_ERROR_VALIDATING);\n\t\t}\n\t}\n\n\tprivate async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), INSTALL_ERROR_UNSET_UNINSTALLED);\n\t\t\t}\n\t\t}\n\t\treturn this.extractAndInstall(installableExtension, token);\n\t}\n\n\tprivate async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tawait this.unsetUninstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.identifier.id);\n\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\treturn installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t}\n\n\tprivate async extractAndInstall({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst { identifier } = identifierWithVersion;\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, token);\n\t\tthis.logService.info('Installation completed.', identifier.id);\n\t\tif (metadata) {\n\t\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, metadata);\n\t\t}\n\t\treturn local;\n\t}\n\n\tprivate async installDependenciesAndPackExtensions(installed: ILocalExtension, existing: ILocalExtension | undefined): Promise<void> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tconst dependenciesAndPackExtensions: string[] = installed.manifest.extensionDependencies || [];\n\t\tif (installed.manifest.extensionPack) {\n\t\t\tfor (const extension of installed.manifest.extensionPack) {\n\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\tconst installed = await this.getInstalled();\n\t\t\t// filter out installed extensions\n\t\t\tconst names = dependenciesAndPackExtensions.filter(id => installed.every(({ identifier: galleryIdentifier }) => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\tif (names.length) {\n\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\tconst extensionsToInstall = galleryResult.firstPage;\n\t\t\t\ttry {\n\t\t\t\t\tawait Promise.all(extensionsToInstall.map(e => this.installFromGallery(e)));\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttry { await this.rollback(extensionsToInstall); } catch (e) { /* ignore */ }\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async rollback(extensions: IGalleryExtension[]): Promise<void> {\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionsToUninstall = installed.filter(local => extensions.some(galleryExtension => new ExtensionIdentifierWithVersion(local.identifier, local.manifest.version).equals(new ExtensionIdentifierWithVersion(galleryExtension.identifier, galleryExtension.version)))); // Check with version because we want to rollback the exact version\n\t\tawait Promise.all(extensionsToUninstall.map(local => this.uninstall(local)));\n\t}\n\n\tasync uninstall(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\tconst extensionToUninstall = installed.find(e => areSameExtensions(e.identifier, extension.identifier));\n\t\tif (!extensionToUninstall) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", extension.manifest.displayName || extension.manifest.name));\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.checkForDependenciesAndUninstall(extensionToUninstall, installed);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...metadata, isMachineScoped: local.isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tprivate async getGalleryMetadata(extensionName: string): Promise<IGalleryMetadata | undefined> {\n\t\tconst galleryExtension = await this.findGalleryExtensionByName(extensionName);\n\t\treturn galleryExtension ? <IGalleryMetadata>{ id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId } : undefined;\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate async checkForDependenciesAndUninstall(extension: ILocalExtension, installed: ILocalExtension[]): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\tif (packedExtensions.length) {\n\t\t\t\tawait this.uninstallExtensions(extension, packedExtensions, installed);\n\t\t\t} else {\n\t\t\t\tawait this.uninstallExtensions(extension, [], installed);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async uninstallExtensions(extension: ILocalExtension, otherExtensionsToUninstall: ILocalExtension[], installed: ILocalExtension[]): Promise<void> {\n\t\tconst extensionsToUninstall = [extension, ...otherExtensionsToUninstall];\n\t\tfor (const e of extensionsToUninstall) {\n\t\t\tthis.checkForDependents(e, extensionsToUninstall, installed, extension);\n\t\t}\n\t\tawait Promise.all([this.uninstallExtension(extension), ...otherExtensionsToUninstall.map(d => this.doUninstall(d))]);\n\t}\n\n\tprivate checkForDependents(extension: ILocalExtension, extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tconst dependents = this.getDependents(extension, installed);\n\t\tif (dependents.length) {\n\t\t\tconst remainingDependents = dependents.filter(dependent => extensionsToUninstall.indexOf(dependent) === -1);\n\t\t\tif (remainingDependents.length) {\n\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async doUninstall(extension: ILocalExtension): Promise<void> {\n\t\ttry {\n\t\t\tawait this.preUninstallExtension(extension);\n\t\t\tawait this.uninstallExtension(extension);\n\t\t} catch (error) {\n\t\t\tawait this.postUninstallExtension(extension, new ExtensionManagementError(error instanceof Error ? error.message : error, INSTALL_ERROR_LOCAL));\n\t\t\tthrow error;\n\t\t}\n\t\tawait this.postUninstallExtension(extension);\n\t}\n\n\tprivate async preUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst exists = await pfs.exists(extension.location.fsPath);\n\t\tif (!exists) {\n\t\t\tthrow new Error(nls.localize('notExists', \"Could not find extension\"));\n\t\t}\n\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t}\n\n\tprivate async uninstallExtension(local: ILocalExtension): Promise<void> {\n\t\tlet promise = this.uninstallingExtensions.get(local.identifier.id);\n\t\tif (!promise) {\n\t\t\t// Set all versions of the extension as uninstalled\n\t\t\tpromise = createCancelablePromise(async () => {\n\t\t\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\t\t\tawait this.setUninstalled(...userExtensions.filter(u => areSameExtensions(u.identifier, local.identifier)));\n\t\t\t});\n\t\t\tthis.uninstallingExtensions.set(local.identifier.id, promise);\n\t\t\tpromise.finally(() => this.uninstallingExtensions.delete(local.identifier.id));\n\t\t}\n\t\treturn promise;\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension, error?: Error): Promise<void> {\n\t\tif (error) {\n\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t} else {\n\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\tif (extension.identifier.uuid) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.galleryService.reportStatistic(extension.manifest.publisher, extension.manifest.name, extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t}\n\t\t}\n\t\tthis.reportTelemetry('extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: errorcode });\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.filterUninstalled(identifier);\n\t\treturn uninstalled.length === 1;\n\t}\n\n\tprivate filterUninstalled(...identifiers: ExtensionIdentifierWithVersion[]): Promise<string[]> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions(allUninstalled => {\n\t\t\tconst uninstalled: string[] = [];\n\t\t\tfor (const identifier of identifiers) {\n\t\t\t\tif (!!allUninstalled[identifier.key()]) {\n\t\t\t\t\tuninstalled.push(identifier.key());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate setUninstalled(...extensions: ILocalExtension[]): Promise<{ [id: string]: boolean }> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\treturn this.extensionsScanner.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tprivate unsetUninstalled(extensionIdentifier: ExtensionIdentifierWithVersion): Promise<void> {\n\t\treturn this.extensionsScanner.withUninstalledExtensions<void>(uninstalled => delete uninstalled[extensionIdentifier.key()]);\n\t}\n\n\tgetExtensionsReport(): Promise<IReportedExtension[]> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.reportedExtensions || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.reportedExtensions = this.updateReportCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.reportedExtensions;\n\t}\n\n\tprivate async updateReportCache(): Promise<IReportedExtension[]> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst result = await this.galleryService.getExtensionsReport();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshReportedCache - got ${result.length} reported extensions from service`);\n\t\t\treturn result;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache - failed to get extension report');\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate reportTelemetry(eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\t\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ERROR_UNKNOWN : undefined;\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:install\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\t/* __GDPR__\n\t\t\t\"extensionGallery:update\" : {\n\t\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n\t}\n}\n","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as tarStream from 'tar-stream';\nimport * as util from 'util';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mkdirp } from 'vs/base/node/pfs';\nimport * as vszip from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport product from 'vs/platform/product/common/product';\n\n// We will be overriding these, so keep a reference to the original.\nconst vszipExtract = vszip.extract;\nconst vszipBuffer = vszip.buffer;\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\t/**\n\t * Source path within the TAR/ZIP archive. Only the files\n\t * contained in this path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport const tar = async (tarPath: string, files: IFile[]): Promise<string> => {\n\tconst pack = tarStream.pack();\n\tconst chunks: Buffer[] = [];\n\tconst ended = new Promise<Buffer>((resolve) => {\n\t\tpack.on('end', () => resolve(Buffer.concat(chunks)));\n\t});\n\tpack.on('data', (chunk: Buffer) => chunks.push(chunk));\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tpack.entry({ name: file.path }, file.contents);\n\t}\n\tpack.finalize();\n\tawait util.promisify(fs.writeFile)(tarPath, await ended);\n\treturn tarPath;\n};\n\nexport const extract = async (archivePath: string, extractPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\ttry {\n\t\tawait extractTar(archivePath, extractPath, options, token);\n\t} catch (error) {\n\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\tawait vszipExtract(archivePath, extractPath, options, token);\n\t\t}\n\t}\n};\n\nexport const buffer = (targetPath: string, filePath: string): Promise<Buffer> => {\n\treturn new Promise<Buffer>(async (resolve, reject) => {\n\t\ttry {\n\t\t\tlet done: boolean = false;\n\t\t\tawait extractAssets(targetPath, new RegExp(filePath), (assetPath: string, data: Buffer) => {\n\t\t\t\tif (path.normalize(assetPath) === path.normalize(filePath)) {\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(data);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (!done) {\n\t\t\t\tthrow new Error('couldn\\'t find asset ' + filePath);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.toString().includes('Invalid tar header')) {\n\t\t\t\tvszipBuffer(targetPath, filePath).then(resolve).catch(reject);\n\t\t\t} else {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst extractAssets = async (tarPath: string, match: RegExp, callback: (path: string, data: Buffer) => void): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst name = header.name;\n\t\t\tif (match.test(name)) {\n\t\t\t\textractData(stream).then((data) => {\n\t\t\t\t\tcallback(name, data);\n\t\t\t\t\tnext();\n\t\t\t\t}).catch(fail);\n\t\t\t} else {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume(); // Just drain it.\n\t\t\t}\n\t\t});\n\t\textractor.on('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\nconst extractData = (stream: NodeJS.ReadableStream): Promise<Buffer> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst fileData: Buffer[] = [];\n\t\tstream.on('error', reject);\n\t\tstream.on('end', () => resolve(Buffer.concat(fileData)));\n\t\tstream.on('data', (data) => fileData.push(data));\n\t});\n};\n\nconst extractTar = async (tarPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> => {\n\treturn new Promise<void>((resolve, reject): void => {\n\t\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\t\tconst extractor = tarStream.extract();\n\t\tconst fail = (error: Error) => {\n\t\t\textractor.destroy();\n\t\t\treject(error);\n\t\t};\n\t\textractor.once('error', fail);\n\t\textractor.on('entry', async (header, stream, next) => {\n\t\t\tconst nextEntry = (): void => {\n\t\t\t\tstream.on('end', () => next());\n\t\t\t\tstream.resume();\n\t\t\t};\n\n\t\t\tconst rawName = path.normalize(header.name);\n\t\t\tif (token.isCancellationRequested || !sourcePathRegex.test(rawName)) {\n\t\t\t\treturn nextEntry();\n\t\t\t}\n\n\t\t\tconst fileName = rawName.replace(sourcePathRegex, '');\n\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\treturn mkdirp(targetFileName).then(nextEntry);\n\t\t\t}\n\n\t\t\tconst dirName = path.dirname(fileName);\n\t\t\tconst targetDirName = path.join(targetPath, dirName);\n\t\t\tif (targetDirName.indexOf(targetPath) !== 0) {\n\t\t\t\treturn fail(new Error(nls.localize('invalid file', 'Error extracting {0}. Invalid file.', fileName)));\n\t\t\t}\n\n\t\t\tawait mkdirp(targetDirName, undefined);\n\n\t\t\tconst fstream = fs.createWriteStream(targetFileName, { mode: header.mode });\n\t\t\tfstream.once('close', () => next());\n\t\t\tfstream.once('error', fail);\n\t\t\tstream.pipe(fstream);\n\t\t});\n\t\textractor.once('finish', resolve);\n\t\tfs.createReadStream(tarPath).pipe(extractor);\n\t});\n};\n\n/**\n * Override original functionality so we can use a custom marketplace with\n * either tars or zips.\n */\nexport const enableCustomMarketplace = (): void => {\n\t(<any>product).extensionsGallery = { // Use `any` to override readonly.\n\t\tserviceUrl: process.env.SERVICE_URL || 'https://extensions.coder.com/api',\n\t\titemUrl: process.env.ITEM_URL || '',\n\t\tcontrolUrl: '',\n\t\trecommendationsUrl: '',\n\t\t...(product.extensionsGallery || {}),\n\t};\n\n\tconst target = vszip as typeof vszip;\n\ttarget.zip = tar;\n\ttarget.extract = extract;\n\ttarget.buffer = buffer;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as https from 'https';\nimport * as http from 'http';\nimport * as streams from 'vs/base/common/stream';\nimport { createGunzip } from 'zlib';\nimport { parse as parseUrl } from 'url';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { canceled } from 'vs/base/common/errors';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestService, IHTTPConfiguration } from 'vs/platform/request/common/request';\nimport { IRequestOptions, IRequestContext } from 'vs/base/parts/request/common/request';\nimport { getProxyAgent, Agent } from 'vs/platform/request/node/proxy';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn new Promise<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { raceTimeout } from 'vs/base/common/async';\nimport product from 'vs/platform/product/common/product';\nimport * as path from 'vs/base/common/path';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { IExtensionManagementService, IExtensionGalleryService, IGalleryExtension, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { combinedAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { TelemetryService, ITelemetryServiceConfig } from 'vs/platform/telemetry/common/telemetryService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { mkdirp, writeFile } from 'vs/base/node/pfs';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { IStateService } from 'vs/platform/state/node/state';\nimport { StateService } from 'vs/platform/state/node/stateService';\nimport { ILogService, getLogLevel } from 'vs/platform/log/common/log';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { areSameExtensions, adoptToGalleryExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { URI } from 'vs/base/common/uri';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { IExtensionManifest, ExtensionType, isLanguagePackExtension, EXTENSION_CATEGORIES } from 'vs/platform/extensions/common/extensions';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { Schemas } from 'vs/base/common/network';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst notInstalled = (id: string) => localize('notInstalled', \"Extension '{0}' is not installed.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\n\nexport class Main {\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tasync run(argv: NativeParsedArgs): Promise<void> {\n\t\tif (argv['install-source']) {\n\t\t\tawait this.setInstallSource(argv['install-source']);\n\t\t} else if (argv['list-extensions']) {\n\t\t\tawait this.listExtensions(!!argv['show-versions'], argv['category']);\n\t\t} else if (argv['install-extension']) {\n\t\t\tawait this.installExtensions(argv['install-extension'], !!argv['force']);\n\t\t} else if (argv['uninstall-extension']) {\n\t\t\tawait this.uninstallExtension(argv['uninstall-extension']);\n\t\t} else if (argv['locate-extension']) {\n\t\t\tawait this.locateExtension(argv['locate-extension']);\n\t\t} else if (argv['telemetry']) {\n\t\t\tconsole.log(buildTelemetryMessage(this.environmentService.appRoot, this.environmentService.extensionsPath ? this.environmentService.extensionsPath : undefined));\n\t\t}\n\t}\n\n\tprivate setInstallSource(installSource: string): Promise<void> {\n\t\treturn writeFile(this.environmentService.installSourcePath, installSource.slice(0, 30));\n\t}\n\n\tprivate async listExtensions(showVersions: boolean, category?: string): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\tconsole.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\tconsole.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\tconsole.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\textensions.forEach(e => console.log(getId(e.manifest, showVersions)));\n\t}\n\n\tprivate async installExtensions(extensions: string[], force: boolean): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\tconsole.log(localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tfor (const extension of extensions) {\n\t\t\ttry {\n\t\t\t\tconst manifest = await this.installExtension(extension, force);\n\t\t\t\tif (manifest) {\n\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tconsole.error(err.message || err.stack || err);\n\t\t\t\tfailed.push(extension);\n\t\t\t}\n\t\t}\n\t\tif (installedExtensionsManifests.some(manifest => isLanguagePackExtension(manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t\treturn failed.length ? Promise.reject(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', '))) : Promise.resolve();\n\t}\n\n\tprivate async installExtension(extension: string, force: boolean): Promise<IExtensionManifest | null> {\n\t\tif (/\\.vsix$/i.test(extension)) {\n\t\t\textension = path.isAbsolute(extension) ? extension : path.join(process.cwd(), extension);\n\n\t\t\tconst manifest = await getManifest(extension);\n\t\t\tconst valid = await this.validate(manifest, force);\n\n\t\t\tif (valid) {\n\t\t\t\treturn this.extensionManagementService.install(URI.file(extension)).then(id => {\n\t\t\t\t\tconsole.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(extension)));\n\t\t\t\t\treturn manifest;\n\t\t\t\t}, error => {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(extension)));\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [id, version] = getIdAndVersion(extension);\n\t\treturn this.extensionManagementService.getInstalled(ExtensionType.User)\n\t\t\t.then(installed => this.extensionGalleryService.getCompatibleExtension({ id }, version)\n\t\t\t\t.then<IGalleryExtension>(null, err => {\n\t\t\t\t\tif (err.responseText) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst response = JSON.parse(err.responseText);\n\t\t\t\t\t\t\treturn Promise.reject(response.message);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// noop\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t})\n\t\t\t\t.then(async extension => {\n\t\t\t\t\tif (!extension) {\n\t\t\t\t\t\treturn Promise.reject(new Error(`${notFound(version ? `${id}@${version}` : id)}\\n${useId}`));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst manifest = await this.extensionGalleryService.getManifest(extension, CancellationToken.None);\n\t\t\t\t\tconst [installedExtension] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\t\t\tif (installedExtension) {\n\t\t\t\t\t\tif (extension.version === installedExtension.manifest.version) {\n\t\t\t\t\t\t\tconsole.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!version && !force) {\n\t\t\t\t\t\t\tconsole.log(localize('forceUpdate', \"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.\", id, installedExtension.manifest.version, extension.version));\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, extension.version));\n\t\t\t\t\t}\n\t\t\t\t\tawait this.installFromGallery(id, extension);\n\t\t\t\t\treturn manifest;\n\t\t\t\t}));\n\t}\n\n\tprivate async validate(manifest: IExtensionManifest, force: boolean): Promise<boolean> {\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst semver = await import('semver-umd');\n\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && semver.gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\tconsole.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async installFromGallery(id: string, extension: IGalleryExtension): Promise<void> {\n\t\tconsole.log(localize('installing', \"Installing extension '{0}' v{1}...\", id, extension.version));\n\n\t\ttry {\n\t\t\tawait this.extensionManagementService.installFromGallery(extension);\n\t\t\tconsole.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, extension.version));\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\tconsole.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async uninstallExtension(extensions: string[]): Promise<void> {\n\t\tasync function getExtensionId(extensionDescription: string): Promise<string> {\n\t\t\tif (!/\\.vsix$/i.test(extensionDescription)) {\n\t\t\t\treturn extensionDescription;\n\t\t\t}\n\n\t\t\tconst zipPath = path.isAbsolute(extensionDescription) ? extensionDescription : path.join(process.cwd(), extensionDescription);\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn getId(manifest);\n\t\t}\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst [extensionToUninstall] = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionToUninstall) {\n\t\t\t\treturn Promise.reject(new Error(`${notInstalled(id)}\\n${useId}`));\n\t\t\t}\n\t\t\tconsole.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall, true);\n\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\tconsole.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t}\n\n\t\tif (uninstalledExtensions.some(e => isLanguagePackExtension(e.manifest))) {\n\t\t\tawait this.updateLocalizationsCache();\n\t\t}\n\t}\n\n\tprivate async locateExtension(extensions: string[]): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\tconsole.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async updateLocalizationsCache(): Promise<void> {\n\t\tconst localizationService = this.instantiationService.createInstance(LocalizationsService);\n\t\tawait localizationService.update();\n\t\tlocalizationService.dispose();\n\t}\n}\n\nconst eventPrefix = 'monacoworkbench';\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst services = new ServiceCollection();\n\tconst disposables = new DisposableStore();\n\n\tconst environmentService = new NativeEnvironmentService(argv);\n\tconst logService: ILogService = new SpdLogService('cli', environmentService.logsPath, getLogLevel(environmentService));\n\tprocess.once('exit', () => logService.dispose());\n\tlogService.info('main', argv);\n\n\tawait Promise.all<void | undefined>([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath]\n\t\t.map((path): undefined | Promise<void> => path ? mkdirp(path) : undefined));\n\n\t// Files\n\tconst fileService = new FileService(logService);\n\tdisposables.add(fileService);\n\tservices.set(IFileService, fileService);\n\n\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\tdisposables.add(diskFileSystemProvider);\n\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\tdisposables.add(configurationService);\n\tawait configurationService.initialize();\n\n\tservices.set(IEnvironmentService, environmentService);\n\tservices.set(INativeEnvironmentService, environmentService);\n\n\tservices.set(ILogService, logService);\n\tservices.set(IConfigurationService, configurationService);\n\tservices.set(IStateService, new SyncDescriptor(StateService));\n\tservices.set(IProductService, { _serviceBrand: undefined, ...product });\n\n\tconst instantiationService: IInstantiationService = new InstantiationService(services);\n\n\treturn instantiationService.invokeFunction(async accessor => {\n\t\tconst stateService = accessor.get(IStateService);\n\n\t\tconst { appRoot, extensionsPath, extensionDevelopmentLocationURI, isBuilt, installSourcePath } = environmentService;\n\n\t\tconst services = new ServiceCollection();\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (isBuilt && !extensionDevelopmentLocationURI && !environmentService.disableTelemetry && product.enableTelemetry) {\n\t\t\tif (product.aiConfig && product.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender(eventPrefix, null, product.aiConfig.asimovKey, logService));\n\t\t\t}\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappender: combinedAppender(...appenders),\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: resolveCommonProperties(product.commit, product.version, stateService.getItem('telemetry.machineId'), product.msftInternalDomains, installSourcePath),\n\t\t\t\tpiiPaths: extensionsPath ? [appRoot, extensionsPath] : [appRoot]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tconst instantiationService2 = instantiationService.createChild(services);\n\t\tconst main = instantiationService2.createInstance(Main);\n\n\t\ttry {\n\t\t\tawait main.run(argv);\n\n\t\t\t// Flush the remaining data in AI adapter.\n\t\t\t// If it does not complete in 1 second, exit the process.\n\t\t\tawait raceTimeout(combinedAppender(...appenders).flush(), 1000);\n\t\t} finally {\n\t\t\tdisposables.dispose();\n\t\t}\n\t});\n}\n","import * as fs from 'fs';\nimport * as net from 'net';\nimport * as path from 'path';\nimport { Emitter } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { getMachineId } from 'vs/base/node/id';\nimport { ClientConnectionEvent, createChannelReceiver, IPCServer, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { main } from \"vs/code/node/cliProcessMain\";\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { getLogLevel, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel } from 'vs/platform/log/common/logIpc';\nimport { SpdLogService } from 'vs/platform/log/node/spdlogService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ConnectionType, ConnectionTypeRequest } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestChannel } from 'vs/platform/request/common/requestIpc';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport ErrorTelemetry from 'vs/platform/telemetry/browser/errorTelemetry';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { combinedAppender, LogAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/node/commonProperties';\nimport { INodeProxyService, NodeProxyChannel } from 'vs/server/common/nodeProxy';\nimport { TelemetryChannel } from 'vs/server/common/telemetry';\nimport { Query, VscodeOptions, WorkbenchOptions } from 'vs/server/ipc';\nimport { ExtensionEnvironmentChannel, FileProviderChannel, NodeProxyService } from 'vs/server/node/channel';\nimport { Connection, ExtensionHostConnection, ManagementConnection } from 'vs/server/node/connection';\nimport { TelemetryClient } from 'vs/server/node/insights';\nimport { logger } from 'vs/server/node/logger';\nimport { getLocaleFromConfig, getNlsConfiguration } from 'vs/server/node/nls';\nimport { Protocol } from 'vs/server/node/protocol';\nimport { getUriTransformer } from 'vs/server/node/util';\nimport { REMOTE_FILE_SYSTEM_CHANNEL_NAME } from \"vs/workbench/services/remote/common/remoteAgentFileSystemChannel\";\nimport { RemoteExtensionLogFileName } from 'vs/workbench/services/remote/common/remoteAgentService';\n\nexport class Vscode {\n\tpublic readonly _onDidClientConnect = new Emitter<ClientConnectionEvent>();\n\tpublic readonly onDidClientConnect = this._onDidClientConnect.event;\n\tprivate readonly ipc = new IPCServer<RemoteAgentConnectionContext>(this.onDidClientConnect);\n\n\tprivate readonly maxExtraOfflineConnections = 0;\n\tprivate readonly connections = new Map<ConnectionType, Map<string, Connection>>();\n\n\tprivate readonly services = new ServiceCollection();\n\tprivate servicesPromise?: Promise<void>;\n\n\tpublic async cli(args: NativeParsedArgs): Promise<void> {\n\t\treturn main(args);\n\t}\n\n\tpublic async initialize(options: VscodeOptions): Promise<WorkbenchOptions> {\n\t\tconst transformer = getUriTransformer(options.remoteAuthority);\n\t\tif (!this.servicesPromise) {\n\t\t\tthis.servicesPromise = this.initializeServices(options.args);\n\t\t}\n\t\tawait this.servicesPromise;\n\t\tconst environment = this.services.get(IEnvironmentService) as INativeEnvironmentService;\n\t\tconst startPath = options.startPath;\n\t\tconst parseUrl = (url: string): URI => {\n\t\t\t// This might be a fully-specified URL or just a path.\n\t\t\ttry {\n\t\t\t\treturn URI.parse(url, true);\n\t\t\t} catch (error) {\n\t\t\t\treturn URI.from({\n\t\t\t\t\tscheme: Schemas.vscodeRemote,\n\t\t\t\t\tauthority: options.remoteAuthority,\n\t\t\t\t\tpath: url,\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\treturn {\n\t\t\tworkbenchWebConfiguration: {\n\t\t\t\tworkspaceUri: startPath && startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tfolderUri: startPath && !startPath.workspace ? parseUrl(startPath.url) : undefined,\n\t\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\t\tlogLevel: getLogLevel(environment),\n\t\t\t\tworkspaceProvider: {\n\t\t\t\t\tpayload: [\n\t\t\t\t\t\t[\"userDataPath\", environment.userDataPath],\n\t\t\t\t\t\t[\"enableProposedApi\", JSON.stringify(options.args[\"enable-proposed-api\"] || [])]\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t},\n\t\t\tremoteUserDataUri: transformer.transformOutgoing(URI.file(environment.userDataPath)),\n\t\t\tproductConfiguration: product,\n\t\t\tnlsConfiguration: await getNlsConfiguration(environment.args.locale || await getLocaleFromConfig(environment.userDataPath), environment.userDataPath),\n\t\t\tcommit: product.commit || 'development',\n\t\t};\n\t}\n\n\tpublic async handleWebSocket(socket: net.Socket, query: Query): Promise<true> {\n\t\tif (!query.reconnectionToken) {\n\t\t\tthrow new Error('Reconnection token is missing from query parameters');\n\t\t}\n\t\tconst protocol = new Protocol(socket, {\n\t\t\treconnectionToken: <string>query.reconnectionToken,\n\t\t\treconnection: query.reconnection === 'true',\n\t\t\tskipWebSocketFrames: query.skipWebSocketFrames === 'true',\n\t\t});\n\t\ttry {\n\t\t\tawait this.connect(await protocol.handshake(), protocol);\n\t\t} catch (error) {\n\t\t\tprotocol.sendMessage({ type: 'error', reason: error.message });\n\t\t\tprotocol.dispose();\n\t\t\tprotocol.getSocket().dispose();\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate async connect(message: ConnectionTypeRequest, protocol: Protocol): Promise<void> {\n\t\tif (product.commit && message.commit !== product.commit) {\n\t\t\tlogger.warn(`Version mismatch (${message.commit} instead of ${product.commit})`);\n\t\t}\n\n\t\tswitch (message.desiredConnectionType) {\n\t\t\tcase ConnectionType.ExtensionHost:\n\t\t\tcase ConnectionType.Management:\n\t\t\t\tif (!this.connections.has(message.desiredConnectionType)) {\n\t\t\t\t\tthis.connections.set(message.desiredConnectionType, new Map());\n\t\t\t\t}\n\t\t\t\tconst connections = this.connections.get(message.desiredConnectionType)!;\n\n\t\t\t\tconst ok = async () => {\n\t\t\t\t\treturn message.desiredConnectionType === ConnectionType.ExtensionHost\n\t\t\t\t\t\t? { debugPort: await this.getDebugPort() }\n\t\t\t\t\t\t: { type: 'ok' };\n\t\t\t\t};\n\n\t\t\t\tconst token = protocol.options.reconnectionToken;\n\t\t\t\tif (protocol.options.reconnection && connections.has(token)) {\n\t\t\t\t\tprotocol.sendMessage(await ok());\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tprotocol.dispose();\n\t\t\t\t\treturn connections.get(token)!.reconnect(protocol.getSocket(), buffer);\n\t\t\t\t} else if (protocol.options.reconnection || connections.has(token)) {\n\t\t\t\t\tthrow new Error(protocol.options.reconnection\n\t\t\t\t\t\t? 'Unrecognized reconnection token'\n\t\t\t\t\t\t: 'Duplicate reconnection token'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tprotocol.sendMessage(await ok());\n\n\t\t\t\tlet connection: Connection;\n\t\t\t\tif (message.desiredConnectionType === ConnectionType.Management) {\n\t\t\t\t\tconnection = new ManagementConnection(protocol, token);\n\t\t\t\t\tthis._onDidClientConnect.fire({\n\t\t\t\t\t\tprotocol, onDidClientDisconnect: connection.onClose,\n\t\t\t\t\t});\n\t\t\t\t\t// TODO: Need a way to match clients with a connection. For now\n\t\t\t\t\t// dispose everything which only works because no extensions currently\n\t\t\t\t\t// utilize long-running proxies.\n\t\t\t\t\t(this.services.get(INodeProxyService) as NodeProxyService)._onUp.fire();\n\t\t\t\t\tconnection.onClose(() => (this.services.get(INodeProxyService) as NodeProxyService)._onDown.fire());\n\t\t\t\t} else {\n\t\t\t\t\tconst buffer = protocol.readEntireBuffer();\n\t\t\t\t\tconnection = new ExtensionHostConnection(\n\t\t\t\t\t\tmessage.args ? message.args.language : 'en',\n\t\t\t\t\t\tprotocol, buffer, token,\n\t\t\t\t\t\tthis.services.get(ILogService) as ILogService,\n\t\t\t\t\t\tthis.services.get(IEnvironmentService) as INativeEnvironmentService,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconnections.set(token, connection);\n\t\t\t\tconnection.onClose(() => connections.delete(token));\n\t\t\t\tthis.disposeOldOfflineConnections(connections);\n\t\t\t\tbreak;\n\t\t\tcase ConnectionType.Tunnel: return protocol.tunnel();\n\t\t\tdefault: throw new Error('Unrecognized connection type');\n\t\t}\n\t}\n\n\tprivate disposeOldOfflineConnections(connections: Map<string, Connection>): void {\n\t\tconst offline = Array.from(connections.values())\n\t\t\t.filter((connection) => typeof connection.offline !== 'undefined');\n\t\tfor (let i = 0, max = offline.length - this.maxExtraOfflineConnections; i < max; ++i) {\n\t\t\toffline[i].dispose();\n\t\t}\n\t}\n\n\tprivate async initializeServices(args: NativeParsedArgs): Promise<void> {\n\t\tconst environmentService = new NativeEnvironmentService(args);\n\t\t// https://github.com/cdr/code-server/issues/1693\n\t\tfs.mkdirSync(environmentService.globalStorageHome.fsPath, { recursive: true });\n\n\t\tconst logService = new SpdLogService(RemoteExtensionLogFileName, environmentService.logsPath, getLogLevel(environmentService));\n\t\tconst fileService = new FileService(logService);\n\t\tfileService.registerProvider(Schemas.file, new DiskFileSystemProvider(logService));\n\n\t\tconst piiPaths = [\n\t\t\tpath.join(environmentService.userDataPath, 'clp'), // Language packs.\n\t\t\tenvironmentService.appRoot,\n\t\t\tenvironmentService.extensionsPath,\n\t\t\tenvironmentService.builtinExtensionsPath,\n\t\t\t...environmentService.extraExtensionPaths,\n\t\t\t...environmentService.extraBuiltinExtensionPaths,\n\t\t];\n\n\t\tthis.ipc.registerChannel('logger', new LoggerChannel(logService));\n\t\tthis.ipc.registerChannel(ExtensionHostDebugBroadcastChannel.ChannelName, new ExtensionHostDebugBroadcastChannel());\n\n\t\tthis.services.set(ILogService, logService);\n\t\tthis.services.set(IEnvironmentService, environmentService);\n\t\tthis.services.set(INativeEnvironmentService, environmentService);\n\n\t\tconst configurationService = new ConfigurationService(environmentService.settingsResource, fileService);\n\t\tawait configurationService.initialize();\n\t\tthis.services.set(IConfigurationService, configurationService);\n\n\t\tthis.services.set(IRequestService, new SyncDescriptor(RequestService));\n\t\tthis.services.set(IFileService, fileService);\n\t\tthis.services.set(IProductService, { _serviceBrand: undefined, ...product });\n\t\tthis.services.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\t\tthis.services.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\tif (!environmentService.disableTelemetry) {\n\t\t\tthis.services.set(ITelemetryService, new TelemetryService({\n\t\t\t\tappender: combinedAppender(\n\t\t\t\t\tnew AppInsightsAppender('code-server', null, () => new TelemetryClient() as any, logService),\n\t\t\t\t\tnew LogAppender(logService),\n\t\t\t\t),\n\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\tcommonProperties: resolveCommonProperties(\n\t\t\t\t\tproduct.commit, product.version, await getMachineId(),\n\t\t\t\t\t[], environmentService.installSourcePath, 'code-server',\n\t\t\t\t),\n\t\t\t\tpiiPaths,\n\t\t\t}, configurationService));\n\t\t} else {\n\t\t\tthis.services.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\tawait new Promise((resolve) => {\n\t\t\tconst instantiationService = new InstantiationService(this.services);\n\t\t\tthis.services.set(ILocalizationsService, instantiationService.createInstance(LocalizationsService));\n\t\t\tthis.services.set(INodeProxyService, instantiationService.createInstance(NodeProxyService));\n\n\t\t\tinstantiationService.invokeFunction(() => {\n\t\t\t\tinstantiationService.createInstance(LogsDataCleaner);\n\t\t\t\tconst telemetryService = this.services.get(ITelemetryService) as ITelemetryService;\n\t\t\t\tthis.ipc.registerChannel('extensions', new ExtensionManagementChannel(\n\t\t\t\t\tthis.services.get(IExtensionManagementService) as IExtensionManagementService,\n\t\t\t\t\t(context) => getUriTransformer(context.remoteAuthority),\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('remoteextensionsenvironment', new ExtensionEnvironmentChannel(\n\t\t\t\t\tenvironmentService, logService, telemetryService, '',\n\t\t\t\t));\n\t\t\t\tthis.ipc.registerChannel('request', new RequestChannel(this.services.get(IRequestService) as IRequestService));\n\t\t\t\tthis.ipc.registerChannel('telemetry', new TelemetryChannel(telemetryService));\n\t\t\t\tthis.ipc.registerChannel('nodeProxy', new NodeProxyChannel(this.services.get(INodeProxyService) as INodeProxyService));\n\t\t\t\tthis.ipc.registerChannel('localizations', <IServerChannel<any>>createChannelReceiver(this.services.get(ILocalizationsService) as ILocalizationsService));\n\t\t\t\tthis.ipc.registerChannel(REMOTE_FILE_SYSTEM_CHANNEL_NAME, new FileProviderChannel(environmentService, logService));\n\t\t\t\tresolve(new ErrorTelemetry(telemetryService));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * TODO: implement.\n\t */\n\tprivate async getDebugPort(): Promise<number | undefined> {\n\t\treturn undefined;\n\t}\n}\n","import { field } from '@coder/logger';\nimport { setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { CodeServerMessage, VscodeMessage } from 'vs/server/ipc';\nimport { logger } from 'vs/server/node/logger';\nimport { enableCustomMarketplace } from 'vs/server/node/marketplace';\nimport { Vscode } from 'vs/server/node/server';\n\nsetUnexpectedErrorHandler((error) => logger.warn(error instanceof Error ? error.message : error));\nenableCustomMarketplace();\n\n/**\n * Ensure we control when the process exits.\n */\nconst exit = process.exit;\nprocess.exit = function(code?: number) {\n\tlogger.warn(`process.exit() was prevented: ${code || 'unknown code'}.`);\n} as (code?: number) => never;\n\n// Kill VS Code if the parent process dies.\nif (typeof process.env.CODE_SERVER_PARENT_PID !== 'undefined') {\n\tconst parentPid = parseInt(process.env.CODE_SERVER_PARENT_PID, 10);\n\tsetInterval(() => {\n\t\ttry {\n\t\t\tprocess.kill(parentPid, 0); // Throws an exception if the process doesn't exist anymore.\n\t\t} catch (e) {\n\t\t\texit();\n\t\t}\n\t}, 5000);\n} else {\n\tlogger.error('no parent process');\n\texit(1);\n}\n\nconst vscode = new Vscode();\nconst send = (message: VscodeMessage): void => {\n\tif (!process.send) {\n\t\tthrow new Error('not spawned with IPC');\n\t}\n\tprocess.send(message);\n};\n\n// Wait for the init message then start up VS Code. Subsequent messages will\n// return new workbench options without starting a new instance.\nprocess.on('message', async (message: CodeServerMessage, socket) => {\n\tlogger.debug('got message from code-server', field('message', message));\n\tswitch (message.type) {\n\t\tcase 'init':\n\t\t\ttry {\n\t\t\t\tconst options = await vscode.initialize(message.options);\n\t\t\t\tsend({ type: 'options', id: message.id, options });\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'cli':\n\t\t\ttry {\n\t\t\t\tawait vscode.cli(message.args);\n\t\t\t\texit(0);\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error(error.message);\n\t\t\t\tlogger.error(error.stack);\n\t\t\t\texit(1);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'socket':\n\t\t\tvscode.handleWebSocket(socket, message.query);\n\t\t\tbreak;\n\t}\n});\nif (!process.send) {\n\tlogger.error('not spawned with IPC');\n\texit(1);\n} else {\n\t// This lets the parent know the child is ready to receive messages.\n\tsend({ type: 'ready' });\n}\n"]}