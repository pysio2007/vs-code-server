{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"",".././src/utils.ts",".././src/extension.ts",".././src/calls/index.ts",".././src/calls/model.ts",".././src/references/index.ts",".././src/references/model.ts",".././src/tree.ts",".././src/highlights.ts",".././src/navigation.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","array","e","idx","indexOf","splice","length","async","uri","position","doc","vscode","workspace","openTextDocument","range","getWordRangeAtPosition","Boolean","beforeLen","trim","previewStart","start","with","character","Math","max","wordRange","before","getText","Range","inside","previewEnd","end","translate","after","replace","commands","executeCommand","this","undefined","_doc","_position","_version","version","_word","_getAnchorWord","pos","wordNow","startLine","line","checked","lineCount","ch","lineAt","text","Position","context","tree","SymbolsTree","references","register","calls","setInput","input","showCallItem","item","preserveFocus","CallItem","selection","selectionRange","removeCallItem","remove","direction","RichCallsDirection","workspaceState","setCallsDirection","anchor","newInput","oldInput","getInput","CallsTreeInput","Location","location","subscriptions","push","registerCommand","window","activeTextEditor","document","active","_mem","_value","_ctxMode","ContextKey","raw","_key","set","update","contextValue","title","items","Promise","resolve","model","CallsModel","provider","CallItemDataProvider","roots","navigation","highlights","dispose","parent","locations","_onDidChange","EventEmitter","onDidChange","event","map","from","fromRanges","to","children","_resolveCalls","find","toString","_move","fwd","tail","includes","filter","loc","siblings","del","fire","_model","_emitter","onDidChangeTreeData","_modelListener","element","TreeItem","description","detail","iconPath","_getThemeIcon","kind","command","arguments","collapsibleState","TreeItemCollapsibleState","Collapsed","getCallChildren","id","_themeIconIds","ThemeIcon","findLocations","ReferencesTreeInput","args","showReferenceItem","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","ReferenceItem","file","FileItem","val","ReferencesModel","asCopyText","env","clipboard","writeText","scheme","fsPath","_command","result","ReferencesTreeDataProvider","message","last","sort","_compareLocations","targetUri","targetRange","_compareUriIgnoreFragment","fragment","a","b","aStr","bStr","aUri","bUri","aRange","bRange","isBefore","isAfter","total","reduce","prev","cur","files","ref","contains","lastBefore","best","bestValue","_prefixLen","charCodeAt","delta","_item","_listener","File","getDocument","getPreviewChunks","label","TreeItem2","None","asRelativePath","warmUpNext","_document","next","chunks","viewId","_ctxIsActive","_ctxHasResult","_ctxInputSource","_history","TreeInputHistory","_provider","TreeDataProviderDelegate","_tree","createTreeView","treeDataProvider","showCollapseAll","_navigation","Navigation","_sessionDisposable","_input","isValidRequestPosition","clearInput","newInputKind","getPrototypeOf","modelPromise","then","add","nearest","visible","reveal","select","focus","expand","disposables","EditorHighlights","Disposable","reset","size","_sessionDispoables","catch","err","console","error","_assertProvider","getTreeItem","getChildren","getParent","Error","HistoryItem","word","toLocaleLowerCase","_onDidChangeTreeData","_disposables","_ctxHasHistory","_inputs","Map","clear","_reRunHistoryItem","values","guessedTrackedPosition","picks","pick","showQuickPick","placeHolder","delete","newPosition","WordAnchor","JSON","stringify","all","reverse","_view","_delegate","_decorationType","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","_ignore","Set","onDidChangeTextDocument","onDidChangeActiveTextEditor","onDidChangeVisibility","_show","_hide","onDidChangeSelection","editor","visibleTextEditors","setDecorations","viewColumn","has","ranges","getEditorHighlights","_ctxCanNavigate","previous","delegate","sel","Selection","_anchor","newItem","newLocation","_open"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tlet previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tlet wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tlet inside = doc.getText(range);\n\tlet previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tlet ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tlet ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\treturn { setInput };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t};\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.range.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.showCallItem', showCallItem),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nasync function showCallItem(item: CallItem | unknown, preserveFocus: boolean = false) {\n\tif (item instanceof CallItem) {\n\t\tawait vscode.commands.executeCommand('vscode.open', item.item.uri, {\n\t\t\tselection: new vscode.Range(item.item.selectionRange.start, item.item.selectionRange.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { del, tail } from '../utils';\n\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? 'Callers Of'\n\t\t\t: 'Calls From';\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? 'No results.' : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(position: vscode.Position): CallsTreeInput {\n\t\treturn new CallsTreeInput(new vscode.Location(this.location.uri, position), this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation \n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean) {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = CallItemDataProvider._getThemeIcon(element.item.kind);\n\t\titem.command = { command: 'references-view.showCallItem', title: 'Open Call', arguments: [element, true] };\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n\n\t// vscode.SymbolKind.File === 0, Module === 1, etc...\n\tprivate static _themeIconIds = [\n\t\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n\t];\n\n\tprivate static _getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\t\tlet id = CallItemDataProvider._themeIconIds[kind];\n\t\treturn id && new vscode.ThemeIcon(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.showReferenceItem', showReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction showReferenceItem(item: ReferenceItem | unknown, preserveFocus: boolean = false) {\n\tif (item instanceof ReferenceItem) {\n\t\treturn vscode.commands.executeCommand('vscode.open', item.location.uri, {\n\t\t\tselection: new vscode.Range(item.location.range.start, item.location.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n}\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n};\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { del, getPreviewChunks, tail } from '../utils';\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve() {\n\n\t\tconst result = Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\tconst model = new ReferencesModel(await result ?? []);\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(position: vscode.Position): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, new vscode.Location(this.location.uri, position), this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tlet aStr = a.with({ fragment: '' }).toString();\n\t\tlet bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tlet aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tlet bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tlet aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tlet bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn 'No results.';\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn `${total} result in ${files} file`;\n\t\t} else if (total === 1) {\n\t\t\treturn `${total} result in ${files} files`;\n\t\t} else if (files === 1) {\n\t\t\treturn `${total} results in ${files} file`;\n\t\t} else {\n\t\t\treturn `${total} results in ${files} files`;\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem ? item.location : undefined;\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tlet bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tlet value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | undefined {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n}\n\nclass ReferencesTreeDataProvider implements Required<vscode.TreeDataProvider<FileItem | ReferenceItem>>{\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(e => this._onDidChange.fire());\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem2(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = { command: 'references-view.showReferenceItem', title: 'Open Reference', arguments: [element, true] };\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (let ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = <FileItem>this.file.model.next(this.file);\n\t\t\tif (next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet doc = await this.getDocument();\n\t\tlet chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = 'References';\n\t\tthis._tree.message = this._history.size === 0 ? 'No results.' : 'No results. Try running a previous search again:';\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire();\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem>{\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst [item] = this._inputs.values();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\treturn vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map(item => <HistoryPick>{\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: 'Select previous reference search' });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tconst newInput = newPosition ? item.input.with(newPosition) : item.input;\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: 'Rerun' };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => _view.visible && this.update())\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(true)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n"],"sourceRoot":""}