{"version":3,"sources":["vs/workbench/contrib/notebook/common/services/fake","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/diff/diffChange.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/numbers.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/hash.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/diff/diff.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/uint.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/filters.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/codicon.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/codicons.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/core/characterClassifier.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/controller/wordCharacterClassifier.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/core/position.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/core/range.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/core/stringBuilder.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/textChange.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/textModelSearch.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/modes/languageSelector.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/modes/tokenizationRegistry.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/services/modelService.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/modes/languageFeatureRegistry.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/modes.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/core/lineTokens.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/tokensStore.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/platform/contextkey/common/contextkey.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/notebook/common/notebookCommon.ts","vs/workbench/contrib/notebook/common/services/file:/github/workspace/lib/vscode/src/vs/workbench/contrib/notebook/common/services/notebookSimpleWorker.ts"],"names":["__m","__M","deps","result","i","len","length","exports","DiffChange","[object Object]","originalStart","originalLength","modifiedStart","modifiedLength","this","ErrorHandler","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","data","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","element","pop","j","remove","index","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","key","comparator","comp","groupBy","currentGroup","undefined","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","Object","create","elem","distinctES6","Set","has","add","uniqueFilter","lastIndex","fn","firstOrDefault","notFoundValue","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","value","unshift","pushToEnd","mapArrayOrNot","items","map","asArray","getRandomElement","once","_this","didCall","apply","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","first","next","some","predicate","iterables","consume","atMost","Number","POSITIVE_INFINITY","consumed","done","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","console","log","MultiDisposeError","errors","join","dispose","iterator_1","d","isDisposable","combinedDisposable","disposables","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","values","DISABLE_DISPOSED_WARNING","warn","_store","MutableDisposable","_value","ReferenceCollection","references","Map","args","reference","get","counter","object","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","count","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","parent","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceCancellablePromises","async","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","item","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","SequencerByKey","promiseMap","newPromise","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","clamp","max","rot","modulo","Counter","MovingAverage","_n","_val","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","_globals","global","nodeProcess","process","vscode","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","platform_1","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","replace","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","isReadableStream","pause","resume","destroy","every","newWriteableStream","reducer","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","substring","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","fromCharCode","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","doHash","hashVal","numberHash","initialHashVal","keys","stringHash","objectHash","booleanHash","val","s","hash","SHA1Constant","leftRotate","bits","totalBits","fill","dest","toHexString","bitsize","leftPad","Hasher","StringSHA1","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","buff","buffLen","leftoverHighSurrogate","_push","_step","_wrapUp","ml","setUint32","bigBlock32","_bigBlock32","getUint32","f","k","ArrayBuffer","StringDiffSequence","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","condition","MyArray","sourceArray","sourceIndex","destinationArray","destinationIndex","LocalConstants","DiffChangeHelper","m_changes","m_originalStart","m_modifiedStart","m_originalCount","m_modifiedCount","diffChange_1","originalIndex","modifiedIndex","MarkNextChange","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","elements","getElements","_isStringArray","hashes","hash_1","newIndex","index1","index2","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","ElementsAreEqual","Assert","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","historyIndex","diagonal","AddModifiedElement","AddOriginalElement","getReverseChanges","originalStartPoint","modifiedStartPoint","lastForwardChange","getOriginalEnd","getModifiedEnd","getChanges","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","WALKTRACE","matchLengthOfLongest","Copy2","change","originalStop","modifiedStop","checkOriginal","checkModified","OriginalElementsAreEqual","ModifiedElementsAreEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","_OriginalIsBoundary","_ModifiedIsBoundary","_OriginalRegionIsBoundary","_ModifiedRegionIsBoundary","left","right","Copy","diagonalBaseIndex","diffEven","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","assertIsDefined","assertAllDefined","hasOwnProperty","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","pos","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","parentCandidate","sepOffset","sanitizeFilePath","endsWith","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","segments","line","column","segment","segmentAsNumber","types_1","Constants","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","Uri","percentDecode","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","uri_1","window","location","pathname","FileAccess","uriOrModule","moduleIdToUrl","toUri","rewrite","isUri","toUrl","getOrSet","mapToString","entries","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","ch","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","TernarySearchTree","_iter","_root","iter","oldElement","_nodeIterator","_forEach","ResourceMap","mapOrKeyFn","toKey","toStringTag","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","touch","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","checkTrim","trimOld","round","or","word","wordToMatchAgainst","_matchesPrefix","matches","matchesContiguousSubString","matchesSubString","_matchesSubString","isLower","isUpper","isWhitespace","matchesStrictPrefix","matchesPrefix","wordSeparators","isWordSeparator","isAlphanumeric","head","nextAnchor","camelCaseWord","_matchesCamelCase","nextUpperIndex","matchesCamelCase","upper","lower","whitespace","isCamelCasePattern","analysis","alpha","numeric","upperPercent","lowerPercent","alphaPercent","numericPercent","analyzeCamelCaseWord","isCamelCaseWord","isUpperCaseWord","_matchesWords","contiguous","nextWordIndex","nextWord","matchesWords","fuzzyContiguousFilter","fuzzySeparateFilter","fuzzyRegExpCache","map_1","createMatches","_maxLen","matchesFuzzy","enableSeparateSubstringMatching","matchesFuzzy2","fuzzyScore","anyScore","lowPattern","_patternPos","lowWord","_wordPos","patternPos","wordPos","initTable","table","row","thisRow","_table","_scores","_arrows","_debug","printTable","patternLen","wordLen","isSeparatorAtPos","isUpperCaseAtPos","wordLow","isPatternInWord","patternLow","Arrow","patternStart","wordStart","firstMatchCanBeWeak","hasStrongFirstMatch","_doScore","diag","printTables","_matchesCount","_topScore","_wordStart","_firstMatchCanBeWeak","_findAllMatches2","total","lastMatched","simpleMatchCount","arrow","_topMatch2","isWhitespaceAtPos","FuzzyScore","Default","fuzzyScoreWithPermutations","aggressive","tries","movingPatternPos","newPattern","nextTypoPermutation","swap1","swap2","fuzzyScoreGracefulAggressive","fuzzyScoreGraceful","codiconStartMarker","parseCodicons","firstCodiconIndex","codiconOffsets","textWithoutCodicons","appendChars","chars","codiconsOffset","nextChar","currentCodiconStart","currentCodiconValue","doParseCodicons","matchesFuzzyCodiconAware","filters_1","wordToMatchAgainstWithoutCodiconsTrimmed","leadingWhitespaceOffset","codiconOffset","_registry","_icons","_onDidRegister","icon","onDidRegister","iconRegistry","registerIcon","def","description","Codicon","definition","classNames","classNamesArray","cssSelector","character","plus","gistNew","repoCreate","lightbulb","lightBulb","repo","repoDelete","gistFork","repoForked","gitPullRequest","gitPullRequestAbandoned","recordKeys","keyboard","tag","tagAdd","tagRemove","person","personAdd","personFollow","personOutline","personFilled","gitBranch","gitBranchCreate","gitBranchDelete","sourceControl","mirror","mirrorPublic","star","starAdd","starDelete","starEmpty","comment","commentAdd","alert","warning","search","searchSave","logOut","signOut","logIn","signIn","eye","eyeUnwatch","eyeWatch","circleFilled","primitiveDot","closeDirty","debugBreakpoint","debugBreakpointDisabled","debugHint","primitiveSquare","edit","pencil","info","issueOpened","gistPrivate","gitForkPrivate","lock","mirrorPrivate","close","removeClose","repoSync","sync","clone","desktopDownload","beaker","microscope","vm","deviceDesktop","fileText","more","ellipsis","kebabHorizontal","mailReply","reply","organization","organizationFilled","organizationOutline","newFile","fileAdd","newFolder","fileDirectoryCreate","trash","trashcan","history","clock","folder","fileDirectory","symbolFolder","logoGithub","markGithub","github","terminal","repl","zap","symbolEvent","stop","variable","symbolVariable","symbolArray","symbolModule","symbolPackage","symbolNamespace","symbolObject","symbolMethod","symbolFunction","symbolConstructor","symbolBoolean","symbolNull","symbolNumeric","symbolNumber","symbolStructure","symbolStruct","symbolParameter","symbolTypeParameter","symbolKey","symbolText","symbolReference","goToFile","symbolEnum","symbolValue","symbolRuler","symbolUnit","activateBreakpoints","archive","arrowBoth","arrowDown","arrowLeft","arrowRight","arrowSmallDown","arrowSmallLeft","arrowSmallRight","arrowSmallUp","arrowUp","bell","bold","book","bookmark","debugBreakpointConditionalUnverified","debugBreakpointConditional","debugBreakpointConditionalDisabled","debugBreakpointDataUnverified","debugBreakpointData","debugBreakpointDataDisabled","debugBreakpointLogUnverified","debugBreakpointLog","debugBreakpointLogDisabled","briefcase","broadcast","browser","bug","calendar","checklist","chevronDown","chevronLeft","chevronRight","chevronUp","chromeClose","chromeMaximize","chromeMinimize","chromeRestore","circleOutline","debugBreakpointUnverified","circleSlash","circuitBoard","clearAll","clippy","closeAll","cloudDownload","cloudUpload","collapseAll","colorMode","commentDiscussion","compareChanges","creditCard","dash","dashboard","database","debugContinue","debugDisconnect","debugPause","debugRestart","debugStart","debugStepInto","debugStepOut","debugStepOver","debugStop","debug","deviceCameraVideo","deviceCamera","deviceMobile","diffAdded","diffIgnored","diffModified","diffRemoved","diffRenamed","discard","editorLayout","emptyWindow","exclude","extensions","eyeClosed","fileBinary","fileCode","fileMedia","filePdf","fileSubmodule","fileSymlinkDirectory","fileSymlinkFile","fileZip","files","flame","foldDown","foldUp","fold","folderActive","folderOpened","gear","gift","gistSecret","gist","gitCommit","gitCompare","gitMerge","githubAction","githubAlt","globe","grabber","graph","gripper","heart","home","horizontalRule","hubot","inbox","issueClosed","issueReopened","issues","italic","jersey","json","kebabVertical","law","lightbulbAutofix","linkExternal","link","listOrdered","listUnordered","liveShare","loading","mailRead","mail","markdown","megaphone","mention","milestone","mortarBoard","multipleWindows","mute","noNewline","note","octoface","openPreview","package_","paintcan","pin","play","plug","preserveCase","preview","project","pulse","question","quote","radioTower","reactions","refresh","regex","remoteExplorer","remote","replaceAll","repoClone","repoForcePush","repoPull","repoPush","report","requestChanges","rocket","rootFolderOpened","rootFolder","rss","ruby","saveAll","saveAs","save","screenFull","screenNormal","searchStop","server","settingsGear","settings","shield","smiley","sortPrecedence","splitHorizontal","splitVertical","squirrel","starFull","starHalf","symbolClass","symbolColor","symbolConstant","symbolEnumMember","symbolField","symbolFile","symbolInterface","symbolKeyword","symbolMisc","symbolOperator","symbolProperty","wrench","wrenchSubaction","symbolSnippet","tasklist","telescope","textSize","threeBars","thumbsdown","thumbsup","tools","triangleDown","triangleLeft","triangleRight","triangleUp","twitter","unfold","unlock","unmute","unverified","verified","vmActive","vmOutline","vmRunning","watch","wordWrap","zoomIn","zoomOut","listFilter","listFlat","listSelection","selection","listTree","debugBreakpointFunctionUnverified","debugBreakpointFunction","debugBreakpointFunctionDisabled","debugStackframeActive","debugStackframeDot","debugStackframe","debugStackframeFocused","debugBreakpointUnsupported","symbolString","debugReverseContinue","debugStepBack","debugRestartFrame","callIncoming","callOutgoing","menu","expandAll","feedback","groupByRefType","ungroupByRefType","account","bellDot","debugConsole","library","runAll","syncIgnored","pinned","githubInverted","debugAlt","serverProcess","serverEnvironment","pass","stopCircle","playCircle","record","debugAltSmall","vmConnect","cloud","exportIcon","graphLeft","magnet","notebook","redo","checkAll","escapeCodiconsRegex","escapeCodicons","markdownEscapedCodiconsRegex","markdownEscapeEscapedCodicons","markdownUnescapeCodiconsRegex","markdownUnescapeCodicons","codicon","stripCodiconsRegex","stripCodicons","codicon_1","preWhitespace","postWhitespace","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","find","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","CharacterClassifier","_defaultValue","uint_1","_asciiMap","_createAsciiMap","asciiMap","Boolean","CharacterSet","_actual","WordCharacterClass","WordCharacterClassifier","characterClassifier_1","getMapForWordSeparators","computeFn","Position","lineNumber","newLineNumber","newColumn","deltaLineNumber","deltaColumn","isBefore","isBeforeOrEqual","aLineNumber","bLineNumber","Range","startLineNumber","startColumn","endLineNumber","endColumn","containsPosition","containsRange","otherRange","strictContainsRange","plusRange","intersectRanges","resultStartLineNumber","resultStartColumn","resultEndLineNumber","resultEndColumn","otherStartLineNumber","otherStartColumn","otherEndLineNumber","otherEndColumn","equalsRange","getEndPosition","position_1","getStartPosition","collapseToStart","aStartLineNumber","bStartLineNumber","aStartColumn","bStartColumn","aEndLineNumber","bEndLineNumber","_platformTextDecoder","getPlatformTextDecoder","createStringBuilder","capacity","StringBuilder","decodeUTF16LE","CompatStringBuilder","resultLen","_capacity","_completedStrings","_bufferLength","_flushBuffer","_buildBuffer","bufferString","remainingSpace","_pieces","_piecesLen","OverviewRulerLane","MinimapPosition","EndOfLinePreference","DefaultEndOfLine","EndOfLineSequence","TextModelResolvedOptions","src","tabSize","indentSize","insertSpaces","defaultEOL","trimAutoWhitespace","newOpts","FindMatch","TrackedRangeStickiness","ModelConstants","ValidAnnotatedEditOperation","identifier","forceMoveMarkers","isAutoWhitespaceEdit","_isTracked","ApplyEditsResult","reverseEdits","trimAutoWhitespaceLineNumbers","TreeNode","piece","color","size_left","lf_left","SENTINEL","leftest","righttest","calculateSize","calculateLF","lineFeedCnt","resetSentinel","tree","y","rightRotate","updateTreeMetadata","lineFeedCntDelta","recomputeTreeMetadata","lf_delta","NodeColor","rbDelete","z","detach","w","yWasRed","newSizeLeft","newLFLeft","fixInsert","escapeNewLine","TextChange","oldPosition","oldText","newPosition","newText","oldLength","oldEnd","newLength","newEnd","stringBuilder_1","_writeStringSize","_writeString","_readString","compressConsecutiveTextChanges","prevEdits","currEdits","TextChangeCompressor","compress","_prevEdits","_currEdits","_result","_resultLen","_prevLen","_prevDeltaOffset","_currLen","_currDeltaOffset","prevIndex","currIndex","prevEdit","_getPrev","currEdit","_getCurr","_acceptCurr","_acceptPrev","e1","e2","_splitCurr","_splitPrev","mergePrev","mergeCurr","merged","_removeNoOps","_rebaseCurr","_rebasePrev","prevDeltaOffset","currDeltaOffset","preText","postText","edits","curr","LIMIT_FIND_COUNT","isMultilineRegexSource","nextChCode","SearchParams","canUseSimpleSearch","SearchData","wordCharacterClassifier_1","simpleSearch","createFindMatch","rawMatches","captureMatches","model_1","LineFeedCounter","lineFeedsOffsets","lineFeedsOffsetsLen","textLen","_lineFeedsOffsets","isValidMatch","textLength","matchStartIndex","matchLength","charBefore","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","TextModelSearch","model","searchParams","searchRange","limitResultCount","searchData","parseSearchRequest","_doFindMatchesMultiline","Searcher","_doFindMatchesLineByLine","deltaOffset","lfCounter","matchIndex","match0","startOffset","lineFeedCountBeforeMatch","findLineFeedCountBeforeOffset","lineFeedCountInMatch","startPosition","getPositionAt","endPosition","range_1","searcher","getOffsetAt","getValueInRange","getEOL","_getMultilineMatchRange","getLineContent","_findMatchesInLine","searchStringLen","lastMatchIndex","searchStart","_doFindNextMatchMultiline","_doFindNextMatchLineByLine","searchTextStart","lineCount","getLineCount","getLineMaxColumn","_findFirstMatchInLine","lineIndex","fromColumn","_doFindPreviousMatchMultiline","_doFindPreviousMatchLineByLine","_findLastMatchInLine","bestResult","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","createUintArray","Uint32Array","AverageBufferSize","LineStarts","lineStarts","cr","lf","crlf","createLineStartsFast","rLength","chr","createLineStarts","Piece","bufferIndex","StringBuffer","PieceTreeSnapshot","BOM","_tree","_BOM","_index","rbTreeBase_1","iterate","getPieceContent","PieceTreeSearchCache","_cache","nodePos","nodeStartOffset","nodeStartLineNumber","nodePosition","hasInvalidVal","tmp","newArr","entry","PieceTreeBase","eol","eolNormalized","_buffers","_lastChangeBufferPos","_lineCnt","_length","_EOL","_EOLLength","_EOLNormalized","lastNode","rbInsertRight","_searchCache","_lastVisitedLine","computeBufferMetadata","averageBufferSize","tempChunk","tempChunkLen","getNodeContent","newEOL","normalizeEOL","getLength","nodeAt","getValueInRange2","leftLen","getAccumulatedValue","lfCnt","originalOffset","getIndexOf","remainder","nodeAt2","offsetInBuffer","lines","linesLength","currentLine","danglingCR","pieceLength","pieceStartLine","pieceEndLine","pieceStartOffset","getLineRawContent","matchingNode","targetOffset","_getCharCode","startCursor","endCursor","searchText","startOffsetInBuffer","positionInBuffer","getLineFeedCnt","retStartColumn","retEndColumn","textModelSearch_1","findMatchesInNode","currentNode","lineBreakCnt","nextLineStartOffset","insertPosInBuffer","appendToNode","insertContentToNodeLeft","validate","nodesToDel","newRightPiece","shouldCheckCRLF","endWithCR","nodeCharCodeAt","newStart","startWithLF","previousPos","deleteNodeTail","newPieces","createNewPieces","tmpNode","deleteNodes","insertContentToNodeRight","pieces","rbInsertLeft","cnt","startNode","endNode","startSplitPosInBuffer","endSplitPosInBuffer","validateCRLFWithPrevNode","deleteNodeHead","validateCRLFWithNextNode","shrinkNode","nPiece","adjustCarriageReturnFromNext","midStop","midStart","previousCharOffset","cursor","nodes","lastChar","splitText","endIndex","endPos","newPiece","getContentOfSubTree","get2","prevAccumulatedValue","accumulatedValue","originalLineNumber","lineCnt","realLineCnt","expectedLineStartIndex","originalLFCnt","originalEndOffset","newEndOffset","newLineFeedCnt","size_delta","originalStartOffset","originalStartPos","originalEndPos","oldLFCnt","hitCRLF","prevStartOffset","oldLineFeedCnt","prevAccumualtedValue","offsetOfNode","newOffset","nextNode","fixCRLF","prevNewLength","prevNewLFCnt","leftRet","currentContent","prevNode","selector","candidateUri","candidateLanguage","candidateIsSynchronized","hasAccessToAllModels","normalizedPattern","glob_1","TokenizationRegistryImpl","_promises","_onDidChange","onDidChange","_colorMap","languages","changedLanguages","changedColorMap","support","supportPromise","registration","isDisposed","register","colorMap","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIds","getServiceDependencies","ctor","IInstantiationService","serviceIdentifier","IModelService","instantiation_1","shouldSynchronizeModel","isTooLargeForSyncing","isForSimpleWidget","isExclusive","exclusive","LanguageFeatureRegistry","_clock","_entries","provider","_score","_time","_lastCandidate","_updateScores","_orderedForEach","lastBucket","lastBucketScore","getLanguageIdentifier","languageSelector_1","modelService_1","_compareByScoreAndTime","LanguageFeatureRequestDelays","MAX_SAFE_INTEGER","_key","avg","_clamp","numbers_1","update","LanguageId","LanguageIdentifier","FontStyle","ColorId","StandardTokenType","MetadataConsts","TokenMetadata","metadata","className","getForeground","fontStyle","getFontStyle","foreground","CompletionItemKind","completionKindToCssClass","kind","codicons_1","completionKindFromString","strict","CompletionItemTag","CompletionItemInsertTextRule","CompletionTriggerKind","CodeActionTriggerType","SignatureHelpTriggerKind","DocumentHighlightKind","isLocationLink","isIRange","originSelectionRange","targetSelectionRange","SymbolKind","SymbolTag","SymbolKinds","byName","byKind","toCssClassName","inline","symbolName","FoldingRangeKind","Comment","Imports","Region","CommentThreadCollapsibleState","CommentMode","ReferenceProviderRegistry","languageFeatureRegistry_1","RenameProviderRegistry","CompletionProviderRegistry","SignatureHelpProviderRegistry","HoverProviderRegistry","EvaluatableExpressionProviderRegistry","DocumentSymbolProviderRegistry","DocumentHighlightProviderRegistry","OnTypeRenameProviderRegistry","DefinitionProviderRegistry","DeclarationProviderRegistry","ImplementationProviderRegistry","TypeDefinitionProviderRegistry","CodeLensProviderRegistry","CodeActionProviderRegistry","DocumentFormattingEditProviderRegistry","DocumentRangeFormattingEditProviderRegistry","OnTypeFormattingEditProviderRegistry","LinkProviderRegistry","ColorProviderRegistry","SelectionRangeRegistry","FoldingRangeProviderRegistry","DocumentSemanticTokensProviderRegistry","DocumentRangeSemanticTokensProviderRegistry","TokenizationRegistry","tokenizationRegistry_1","LineTokens","tokens","_tokens","_tokensCount","_text","slicedEquals","sliceFromTokenIndex","sliceTokenCount","tokenIndex","modes_1","getLanguageId","getTokenType","getClassNameFromMetadata","getInlineStyleFromMetadata","findIndexInTokensArray","SlicedLineTokens","lineTextLength","lastTokenIndex","desiredIndex","_source","_startOffset","_endOffset","_deltaOffset","_firstTokenIndex","findTokenIndexAtOffset","getCount","getStartOffset","tokenEndOffset","getEndOffset","getClassName","getInlineStyle","countEOL","eolCount","firstLineLength","lastLineStart","getDefaultMetadata","topLevelLanguageId","StringEOL","EMPTY_LINE_TOKENS","MultilineTokensBuilder","lineTokens","MultilineTokens","buffer_1","deserialize","_serializeSize","_serialize","serializeSize","serialize","SparseEncodedTokens","_tokenCount","_getDeltaLine","_getStartCharacter","_getEndCharacter","tokenCount","_getTokenCount","startChar","maxDeltaLine","endChar","deltaLine","midDeltaLine","LineTokens2","startDeltaLine","endDeltaLine","newTokenCount","hasDeletedTokens","firstDeltaLine","srcOffset","tokenDeltaLine","tokenStartCharacter","tokenEndCharacter","tokenMetadata","destOffset","aTokens","bTokens","destTokens","destFirstDeltaLine","horizontalShiftForFirstLineTokens","startCharacter","endCharacter","deletedLineCount","lastLineLength","firstCharCode","isInsertingPreciselyOneWordCharacter","tokenLength","MultilineTokens2","getMaxDeltaLine","getLineTokens","deltaRange","getRange","startLineIndex","endLineIndex","removeTokens","_updateEndLineNumber","bDeltaLine","acceptEdit","_acceptDeleteRange","_acceptInsertText","firstLineIndex","lastLineIndex","deletedLinesCount","tokenMaxDeltaLine","deletedBefore","acceptDeleteRange","acceptInsertText","view32","byteCount","TokensStore","_deleteEnding","lastLineTokens","_deleteBeginning","_append","_delete","_insertLines","insertCount","arrays","toUint32Array","TokensStore2","_isComplete","isComplete","_range","_firstRange","_lastRange","insertPosition","_findFirstPieceWithLine","aIndex","lastEndOffset","emitToken","bIndex","bStartCharacter","getStartCharacter","bEndCharacter","getEndCharacter","bMetadata","getMetadata","bMask","aMask","aMergeIndex","lineTokens_1","_lineTokens","_len","lineText","rawLineTokens","hasDifferentLanguageId","checkEquality","_massageTokens","_ensureLine","oldTokens","_equals","_b","_deleteLines","toChIndex","fromChIndex","tokensCount","fromTokenIndex","fromTokenStartOffset","lastEnd","_otherTokens","myTokens","otherTokens","otherTokensCount","chIndex","PieceTreeTextBuffer","_onDidChangeContent","onDidChangeContent","_mightContainNonBasicASCII","_mightContainRTL","_mightContainUnusualLineTerminators","_pieceTree","pieceTreeBase_1","equal","preserveBOM","createSnapshot","lineEnding","_getEndOfLine","fromLineNumber","toLineNumber","lineContent","fromOffset","toOffset","getValueLengthInRange","getLinesContent","getLineCharCode","getCharCode","getLineLength","setEOL","rawOperations","recordTrimAutoWhitespace","computeUndoEdits","mightContainRTL","mightContainUnusualLineTerminators","mightContainNonBasicASCII","canReduceOperations","operations","op","validatedRange","textMightContainNonBasicASCII","validText","strEOL","tokensStore_1","bufferEOL","expectedStrEOL","sortIndex","rangeOffset","rangeLength","_sortOpsAscending","hasTouchingRanges","rangeEnd","nextRangeStart","_reduceOperations","reverseRanges","_getInverseEditRanges","newTrimAutoWhitespaceCandidates","reverseRange","currentLineContent","oldContent","reverseOperations","reverseRangeDeltaOffset","bufferText","reverseRangeOffset","textChange","textChange_1","contentChanges","_doApplyEdits","prevContent","_toSingleEditOperation","firstEditRange","lastEditRange","entireEditRange","lastEndLineNumber","lastEndColumn","operation","_sortOpsDescending","contentChangeRange","findMatchesLineByLine","resultRange","prevOpEndLineNumber","prevOpEndColumn","prevOp","compareRangesUsingEnds","PieceTreeTextBufferFactory","_chunks","_bom","_cr","_lf","_crlf","_containsRTL","_containsUnusualLineTerminators","_isBasicASCII","_normalizeEOL","totalEOLCount","totalCRCount","_getEOL","newLineStart","pieceTreeTextBuffer_1","lengthLimit","PieceTreeTextBufferBuilder","_hasPreviousChar","_previousChar","_tmpLineStarts","_acceptChunk1","allowEmptyStrings","_acceptChunk2","_finish","lastChunk","newLineStarts","STATIC_VALUES","ContextKeyExprType","ContextKeyExpr","ContextKeyFalseExpr","INSTANCE","ContextKeyTrueExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyRegexExpr","ContextKeyInExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","_deserializeOrExpression","_deserializeAndExpression","_deserializeOne","serializedOne","_deserializeValue","_deserializeRegexValue","serializedValue","caseIgnoreFlag","mapFnc","staticValue","getValue","mapDefined","mapEquals","valueKey","mapIn","ContextKeyNotInExpr","evaluate","mapNotEquals","mapNot","thisSource","otherSource","mapRegex","ContextKeyNotRegexExpr","_expr","_normalizeArr","hasTrue","lastElement","secondToLastElement","resultElement","negate","hasFalse","terminals","LEFT","RIGHT","and","RawContextKey","createKey","getContextKeyValue","not","notEquals","IContextKeyService","SET_CONTEXT_COMMAND_ID","CellOutputKind","NotebookRunState","CellKind","NOTEBOOK_DISPLAY_ORDER","ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER","BUILTIN_RENDERER_ID","notebookDocumentMetadataDefaults","editable","runnable","cellEditable","cellRunnable","cellHasExecutionOrder","displayOrder","custom","runState","Idle","NotebookCellRunState","MimeTypeRendererResolver","isTransformedDisplayOutput","outputKind","Rich","outputId","addIdToOutput","UUID","RenderOutputType","CellUri","matchGlobUniversal","glob","getMimeTypeOrder","mimeType","userDisplayOrder","documentDisplayOrder","defaultOrder","order","isDocumentExcludePattern","filenamePattern","include","outputHasDynamicHeight","hasDynamicHeight","NotebookCellsChangeType","CellEditType","getCellUndoRedoComparisonKey","_regex","generate","generateCellMetadataUri","cell","mimeTypeSupportedByCore","sortMimeTypes","mimeTypes","contains","NOTEBOOK_EDITOR_CURSOR_BOUNDARY","contextkey_1","NotebookEditorPriority","notebookDocumentFilterMatch","viewType","excludeFilenamePattern","CellSequence","textModel","hashValue","cells","getHashValue","DisplayOrderKey","CellToolbarLocKey","ShowCellStatusBarKey","NotebookTextDiffEditorPreview","CellStatusbarAlignment","MirrorCell","cellKind","outputs","_primaryKey","_hash","textBuffer","_textBuffer","builder","pieceTreeTextBufferBuilder_1","acceptChunk","bufferFactory","finish","fullRange","getFullModelRange","MirrorNotebookDocument","rawEvents","notebookCommon_1","ModelChange","_spliceNotebookCells","Move","newIdx","Output","ChangeLanguage","ChangeCellMetadata","newCells","getComparisonValue","NotebookEditorSimpleWorker","_models","dto","strURL","acceptModelChanged","originalUrl","modifiedUrl","_getModel","cellsDiff","diff_1"],"mappings":"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","file":"notebookSimpleWorker.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Represents information about a specific difference between two sequences.\n */\nexport class DiffChange {\n\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\tpublic originalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\tpublic originalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tpublic modifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tpublic modifiedLength: number;\n\n\t/**\n\t * Constructs a new DiffChange with the given sequence information\n\t * and content.\n\t */\n\tconstructor(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number) {\n\t\t//Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n\t\tthis.originalStart = originalStart;\n\t\tthis.originalLength = originalLength;\n\t\tthis.modifiedStart = modifiedStart;\n\t\tthis.modifiedLength = modifiedLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the original sequence.\n\t */\n\tpublic getOriginalEnd() {\n\t\treturn this.originalStart + this.originalLength;\n\t}\n\n\t/**\n\t * The end point (exclusive) of the change in the modified sequence.\n\t */\n\tpublic getModifiedEnd() {\n\t\treturn this.modifiedStart + this.modifiedLength;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<any>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function clamp(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\nexport function rot(index: number, modulo: number): number {\n\treturn (modulo + (index % modulo)) % modulo;\n}\n\nexport class Counter {\n\tprivate _next = 0;\n\n\tgetNext(): number {\n\t\treturn this._next++;\n\t}\n}\n\nexport class MovingAverage {\n\n\tprivate _n = 1;\n\tprivate _val = 0;\n\n\tupdate(value: number): this {\n\t\tthis._val = this._val + (value - this._val) / this._n;\n\t\tthis._n += 1;\n\t\treturn this;\n\t}\n\n\tget value(): number {\n\t\treturn this._val;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\nexport interface INodeProcess {\n\tplatform: 'win32' | 'linux' | 'darwin';\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tgetuid(): number;\n\tcwd(): string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n} else if (typeof _globals.vscode !== 'undefined') {\n\t// Native envionment (sandboxed)\n\tnodeProcess = _globals.vscode.process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn !!nodeProcess && !_isWindows && (nodeProcess.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (nodeProcess) {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\ndeclare const process: INodeProcess;\n\nlet safeProcess: INodeProcess;\n\n// Native node.js environment\nif (typeof process !== 'undefined') {\n\tsafeProcess = process;\n}\n\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n\tsafeProcess = globals.vscode.process;\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd(): string { return '/'; },\n\t\tgetuid(): number { return -1; }\n\t};\n}\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nfunction numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = doHash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nfunction toHexString(value: number, bitsize: number = 32): string {\n\treturn leftPad((value >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiffChange } from 'vs/base/common/diff/diffChange';\nimport { stringHash } from 'vs/base/common/hash';\nimport { Constants } from 'vs/base/common/uint';\n\nexport class StringDiffSequence implements ISequence {\n\n\tconstructor(private source: string) { }\n\n\tgetElements(): Int32Array | number[] | string[] {\n\t\tconst source = this.source;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t}\n\t\treturn characters;\n\t}\n}\n\nexport function stringDiff(original: string, modified: string, pretty: boolean): IDiffChange[] {\n\treturn new LcsDiff(new StringDiffSequence(original), new StringDiffSequence(modified)).ComputeDiff(pretty).changes;\n}\n\nexport interface ISequence {\n\tgetElements(): Int32Array | number[] | string[];\n}\n\nexport interface IDiffChange {\n\t/**\n\t * The position of the first element in the original sequence which\n\t * this change affects.\n\t */\n\toriginalStart: number;\n\n\t/**\n\t * The number of elements from the original sequence which were\n\t * affected.\n\t */\n\toriginalLength: number;\n\n\t/**\n\t * The position of the first element in the modified sequence which\n\t * this change affects.\n\t */\n\tmodifiedStart: number;\n\n\t/**\n\t * The number of elements from the modified sequence which were\n\t * affected (added).\n\t */\n\tmodifiedLength: number;\n}\n\nexport interface IContinueProcessingPredicate {\n\t(furthestOriginalIndex: number, matchLengthOfLongest: number): boolean;\n}\n\nexport interface IDiffResult {\n\tquitEarly: boolean;\n\tchanges: IDiffChange[];\n}\n\n//\n// The code below has been ported from a C# implementation in VS\n//\n\nexport class Debug {\n\n\tpublic static Assert(condition: boolean, message: string): void {\n\t\tif (!condition) {\n\t\t\tthrow new Error(message);\n\t\t}\n\t}\n}\n\nexport class MyArray {\n\t/**\n\t * Copies a range of elements from an Array starting at the specified source index and pastes\n\t * them to another Array starting at the specified destination index. The length and the indexes\n\t * are specified as 64-bit integers.\n\t * sourceArray:\n\t *\t\tThe Array that contains the data to copy.\n\t * sourceIndex:\n\t *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n\t * destinationArray:\n\t *\t\tThe Array that receives the data.\n\t * destinationIndex:\n\t *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n\t * length:\n\t *\t\tA 64-bit integer that represents the number of elements to copy.\n\t */\n\tpublic static Copy(sourceArray: any[], sourceIndex: number, destinationArray: any[], destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n\tpublic static Copy2(sourceArray: Int32Array, sourceIndex: number, destinationArray: Int32Array, destinationIndex: number, length: number) {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdestinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n\t\t}\n\t}\n}\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nconst enum LocalConstants {\n\tMaxDifferencesHistory = 1447\n}\n\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nclass DiffChangeHelper {\n\n\tprivate m_changes: DiffChange[];\n\tprivate m_originalStart: number;\n\tprivate m_modifiedStart: number;\n\tprivate m_originalCount: number;\n\tprivate m_modifiedCount: number;\n\n\t/**\n\t * Constructs a new DiffChangeHelper for the given DiffSequences.\n\t */\n\tconstructor() {\n\t\tthis.m_changes = [];\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t}\n\n\t/**\n\t * Marks the beginning of the next change in the set of differences.\n\t */\n\tpublic MarkNextChange(): void {\n\t\t// Only add to the list if there is something to add\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Add the new change to our list\n\t\t\tthis.m_changes.push(new DiffChange(this.m_originalStart, this.m_originalCount,\n\t\t\t\tthis.m_modifiedStart, this.m_modifiedCount));\n\t\t}\n\n\t\t// Reset for the next change\n\t\tthis.m_originalCount = 0;\n\t\tthis.m_modifiedCount = 0;\n\t\tthis.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tthis.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n\t}\n\n\t/**\n\t * Adds the original element at the given position to the elements\n\t * affected by the current change. The modified index gives context\n\t * to the change position with respect to the original sequence.\n\t * @param originalIndex The index of the original element to add.\n\t * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n\t */\n\tpublic AddOriginalElement(originalIndex: number, modifiedIndex: number) {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_originalCount++;\n\t}\n\n\t/**\n\t * Adds the modified element at the given position to the elements\n\t * affected by the current change. The original index gives context\n\t * to the change position with respect to the modified sequence.\n\t * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n\t * @param modifiedIndex The index of the modified element to add.\n\t */\n\tpublic AddModifiedElement(originalIndex: number, modifiedIndex: number): void {\n\t\t// The 'true' start index is the smallest of the ones we've seen\n\t\tthis.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n\t\tthis.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n\n\t\tthis.m_modifiedCount++;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class.\n\t */\n\tpublic getChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\treturn this.m_changes;\n\t}\n\n\t/**\n\t * Retrieves all of the changes marked by the class in the reverse order\n\t */\n\tpublic getReverseChanges(): DiffChange[] {\n\t\tif (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n\t\t\t// Finish up on whatever is left\n\t\t\tthis.MarkNextChange();\n\t\t}\n\n\t\tthis.m_changes.reverse();\n\t\treturn this.m_changes;\n\t}\n\n}\n\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nexport class LcsDiff {\n\n\tprivate readonly ContinueProcessingPredicate: IContinueProcessingPredicate | null;\n\n\tprivate readonly _hasStrings: boolean;\n\tprivate readonly _originalStringElements: string[];\n\tprivate readonly _originalElementsOrHash: Int32Array;\n\tprivate readonly _modifiedStringElements: string[];\n\tprivate readonly _modifiedElementsOrHash: Int32Array;\n\n\tprivate m_forwardHistory: Int32Array[];\n\tprivate m_reverseHistory: Int32Array[];\n\n\t/**\n\t * Constructs the DiffFinder\n\t */\n\tconstructor(originalSequence: ISequence, modifiedSequence: ISequence, continueProcessingPredicate: IContinueProcessingPredicate | null = null) {\n\t\tthis.ContinueProcessingPredicate = continueProcessingPredicate;\n\n\t\tconst [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n\t\tconst [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n\n\t\tthis._hasStrings = (originalHasStrings && modifiedHasStrings);\n\t\tthis._originalStringElements = originalStringElements;\n\t\tthis._originalElementsOrHash = originalElementsOrHash;\n\t\tthis._modifiedStringElements = modifiedStringElements;\n\t\tthis._modifiedElementsOrHash = modifiedElementsOrHash;\n\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\t}\n\n\tprivate static _isStringArray(arr: Int32Array | number[] | string[]): arr is string[] {\n\t\treturn (arr.length > 0 && typeof arr[0] === 'string');\n\t}\n\n\tprivate static _getElements(sequence: ISequence): [string[], Int32Array, boolean] {\n\t\tconst elements = sequence.getElements();\n\n\t\tif (LcsDiff._isStringArray(elements)) {\n\t\t\tconst hashes = new Int32Array(elements.length);\n\t\t\tfor (let i = 0, len = elements.length; i < len; i++) {\n\t\t\t\thashes[i] = stringHash(elements[i], 0);\n\t\t\t}\n\t\t\treturn [elements, hashes, true];\n\t\t}\n\n\t\tif (elements instanceof Int32Array) {\n\t\t\treturn [[], elements, false];\n\t\t}\n\n\t\treturn [[], new Int32Array(elements), false];\n\t}\n\n\tprivate ElementsAreEqual(originalIndex: number, newIndex: number): boolean {\n\t\tif (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n\t}\n\n\tprivate OriginalElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n\t}\n\n\tprivate ModifiedElementsAreEqual(index1: number, index2: number): boolean {\n\t\tif (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n\t}\n\n\tpublic ComputeDiff(pretty: boolean): IDiffResult {\n\t\treturn this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n\t}\n\n\t/**\n\t * Computes the differences between the original and modified input\n\t * sequences on the bounded range.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate _ComputeDiff(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, pretty: boolean): IDiffResult {\n\t\tconst quitEarlyArr = [false];\n\t\tlet changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n\n\t\tif (pretty) {\n\t\t\t// We have to clean up the computed diff to be more intuitive\n\t\t\t// but it turns out this cannot be done correctly until the entire set\n\t\t\t// of diffs have been computed\n\t\t\tchanges = this.PrettifyChanges(changes);\n\t\t}\n\n\t\treturn {\n\t\t\tquitEarly: quitEarlyArr[0],\n\t\t\tchanges: changes\n\t\t};\n\t}\n\n\t/**\n\t * Private helper method which computes the differences on the bounded range\n\t * recursively.\n\t * @returns An array of the differences between the two input sequences.\n\t */\n\tprivate ComputeDiffRecursive(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, quitEarlyArr: boolean[]): DiffChange[] {\n\t\tquitEarlyArr[0] = false;\n\n\t\t// Find the start of the differences\n\t\twhile (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n\t\t\toriginalStart++;\n\t\t\tmodifiedStart++;\n\t\t}\n\n\t\t// Find the end of the differences\n\t\twhile (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n\t\t\toriginalEnd--;\n\t\t\tmodifiedEnd--;\n\t\t}\n\n\t\t// In the special case where we either have all insertions or all deletions or the sequences are identical\n\t\tif (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n\t\t\tlet changes: DiffChange[];\n\n\t\t\tif (modifiedStart <= modifiedEnd) {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\n\t\t\t\t// All insertions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t];\n\t\t\t} else if (originalStart <= originalEnd) {\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// All deletions\n\t\t\t\tchanges = [\n\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tDebug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n\t\t\t\tDebug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n\n\t\t\t\t// Identical sequences - No differences\n\t\t\t\tchanges = [];\n\t\t\t}\n\n\t\t\treturn changes;\n\t\t}\n\n\t\t// This problem can be solved using the Divide-And-Conquer technique.\n\t\tconst midOriginalArr = [0];\n\t\tconst midModifiedArr = [0];\n\t\tconst result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n\n\t\tconst midOriginal = midOriginalArr[0];\n\t\tconst midModified = midModifiedArr[0];\n\n\t\tif (result !== null) {\n\t\t\t// Result is not-null when there was enough memory to compute the changes while\n\t\t\t// searching for the recursion point\n\t\t\treturn result;\n\t\t} else if (!quitEarlyArr[0]) {\n\t\t\t// We can break the problem down recursively by finding the changes in the\n\t\t\t// First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n\t\t\t// Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n\t\t\t// NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n\n\t\t\tconst leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n\t\t\tlet rightChanges: DiffChange[] = [];\n\n\t\t\tif (!quitEarlyArr[0]) {\n\t\t\t\trightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n\t\t\t} else {\n\t\t\t\t// We did't have time to finish the first half, so we don't have time to compute this half.\n\t\t\t\t// Consider the entire rest of the sequence different.\n\t\t\t\trightChanges = [\n\t\t\t\t\tnew DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn this.ConcatenateChanges(leftChanges, rightChanges);\n\t\t}\n\n\t\t// If we hit here, we quit early, and so can't return anything meaningful\n\t\treturn [\n\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t];\n\t}\n\n\tprivate WALKTRACE(diagonalForwardBase: number, diagonalForwardStart: number, diagonalForwardEnd: number, diagonalForwardOffset: number,\n\t\tdiagonalReverseBase: number, diagonalReverseStart: number, diagonalReverseEnd: number, diagonalReverseOffset: number,\n\t\tforwardPoints: Int32Array, reversePoints: Int32Array,\n\t\toriginalIndex: number, originalEnd: number, midOriginalArr: number[],\n\t\tmodifiedIndex: number, modifiedEnd: number, midModifiedArr: number[],\n\t\tdeltaIsEven: boolean, quitEarlyArr: boolean[]\n\t): DiffChange[] {\n\t\tlet forwardChanges: DiffChange[] | null = null;\n\t\tlet reverseChanges: DiffChange[] | null = null;\n\n\t\t// First, walk backward through the forward diagonals history\n\t\tlet changeHelper = new DiffChangeHelper();\n\t\tlet diagonalMin = diagonalForwardStart;\n\t\tlet diagonalMax = diagonalForwardEnd;\n\t\tlet diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n\t\tlet lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n\t\tlet historyIndex = this.m_forwardHistory.length - 1;\n\n\t\tdo {\n\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\tconst diagonal = diagonalRelative + diagonalForwardBase;\n\n\t\t\t// Figure out where we came from\n\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t// Vertical line (the element is an insert)\n\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t} else {\n\t\t\t\t// Horizontal line (the element is a deletion)\n\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n\t\t\t\tif (originalIndex < lastOriginalIndex) {\n\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t}\n\t\t\t\tlastOriginalIndex = originalIndex - 1;\n\t\t\t\tchangeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n\t\t\t}\n\n\t\t\tif (historyIndex >= 0) {\n\t\t\t\tforwardPoints = this.m_forwardHistory[historyIndex];\n\t\t\t\tdiagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n\t\t\t\tdiagonalMin = 1;\n\t\t\t\tdiagonalMax = forwardPoints.length - 1;\n\t\t\t}\n\t\t} while (--historyIndex >= -1);\n\n\t\t// Ironically, we get the forward changes as the reverse of the\n\t\t// order we added them since we technically added them backwards\n\t\tforwardChanges = changeHelper.getReverseChanges();\n\n\t\tif (quitEarlyArr[0]) {\n\t\t\t// TODO: Calculate a partial from the reverse diagonals.\n\t\t\t//       For now, just assume everything after the midOriginal/midModified point is a diff\n\n\t\t\tlet originalStartPoint = midOriginalArr[0] + 1;\n\t\t\tlet modifiedStartPoint = midModifiedArr[0] + 1;\n\n\t\t\tif (forwardChanges !== null && forwardChanges.length > 0) {\n\t\t\t\tconst lastForwardChange = forwardChanges[forwardChanges.length - 1];\n\t\t\t\toriginalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n\t\t\t\tmodifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n\t\t\t}\n\n\t\t\treverseChanges = [\n\t\t\t\tnew DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1,\n\t\t\t\t\tmodifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n\t\t\t];\n\t\t} else {\n\t\t\t// Now walk backward through the reverse diagonals history\n\t\t\tchangeHelper = new DiffChangeHelper();\n\t\t\tdiagonalMin = diagonalReverseStart;\n\t\t\tdiagonalMax = diagonalReverseEnd;\n\t\t\tdiagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n\t\t\tlastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\thistoryIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n\n\t\t\tdo {\n\t\t\t\t// Get the diagonal index from the relative diagonal number\n\t\t\t\tconst diagonal = diagonalRelative + diagonalReverseBase;\n\n\t\t\t\t// Figure out where we came from\n\t\t\t\tif (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\t// Horizontal line (the element is a deletion))\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex + 1;\n\t\t\t\t\tchangeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t} else {\n\t\t\t\t\t// Vertical line (the element is an insertion)\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t\tmodifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n\t\t\t\t\tif (originalIndex > lastOriginalIndex) {\n\t\t\t\t\t\tchangeHelper.MarkNextChange();\n\t\t\t\t\t}\n\t\t\t\t\tlastOriginalIndex = originalIndex;\n\t\t\t\t\tchangeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n\t\t\t\t\tdiagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n\t\t\t\t}\n\n\t\t\t\tif (historyIndex >= 0) {\n\t\t\t\t\treversePoints = this.m_reverseHistory[historyIndex];\n\t\t\t\t\tdiagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n\t\t\t\t\tdiagonalMin = 1;\n\t\t\t\t\tdiagonalMax = reversePoints.length - 1;\n\t\t\t\t}\n\t\t\t} while (--historyIndex >= -1);\n\n\t\t\t// There are cases where the reverse history will find diffs that\n\t\t\t// are correct, but not intuitive, so we need shift them.\n\t\t\treverseChanges = changeHelper.getChanges();\n\t\t}\n\n\t\treturn this.ConcatenateChanges(forwardChanges, reverseChanges);\n\t}\n\n\t/**\n\t * Given the range to compute the diff on, this method finds the point:\n\t * (midOriginal, midModified)\n\t * that exists in the middle of the LCS of the two sequences and\n\t * is the point at which the LCS problem may be broken down recursively.\n\t * This method will try to keep the LCS trace in memory. If the LCS recursion\n\t * point is calculated and the full trace is available in memory, then this method\n\t * will return the change list.\n\t * @param originalStart The start bound of the original sequence range\n\t * @param originalEnd The end bound of the original sequence range\n\t * @param modifiedStart The start bound of the modified sequence range\n\t * @param modifiedEnd The end bound of the modified sequence range\n\t * @param midOriginal The middle point of the original sequence range\n\t * @param midModified The middle point of the modified sequence range\n\t * @returns The diff changes, if available, otherwise null\n\t */\n\tprivate ComputeRecursionPoint(originalStart: number, originalEnd: number, modifiedStart: number, modifiedEnd: number, midOriginalArr: number[], midModifiedArr: number[], quitEarlyArr: boolean[]) {\n\t\tlet originalIndex = 0, modifiedIndex = 0;\n\t\tlet diagonalForwardStart = 0, diagonalForwardEnd = 0;\n\t\tlet diagonalReverseStart = 0, diagonalReverseEnd = 0;\n\n\t\t// To traverse the edit graph and produce the proper LCS, our actual\n\t\t// start position is just outside the given boundary\n\t\toriginalStart--;\n\t\tmodifiedStart--;\n\n\t\t// We set these up to make the compiler happy, but they will\n\t\t// be replaced before we return with the actual recursion point\n\t\tmidOriginalArr[0] = 0;\n\t\tmidModifiedArr[0] = 0;\n\n\t\t// Clear out the history\n\t\tthis.m_forwardHistory = [];\n\t\tthis.m_reverseHistory = [];\n\n\t\t// Each cell in the two arrays corresponds to a diagonal in the edit graph.\n\t\t// The integer value in the cell represents the originalIndex of the furthest\n\t\t// reaching point found so far that ends in that diagonal.\n\t\t// The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n\t\tconst maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n\t\tconst numDiagonals = maxDifferences + 1;\n\t\tconst forwardPoints = new Int32Array(numDiagonals);\n\t\tconst reversePoints = new Int32Array(numDiagonals);\n\t\t// diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n\t\t// diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n\t\tconst diagonalForwardBase = (modifiedEnd - modifiedStart);\n\t\tconst diagonalReverseBase = (originalEnd - originalStart);\n\t\t// diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalForwardBase)\n\t\t// diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n\t\t//    diagonal number (relative to diagonalReverseBase)\n\t\tconst diagonalForwardOffset = (originalStart - modifiedStart);\n\t\tconst diagonalReverseOffset = (originalEnd - modifiedEnd);\n\n\t\t// delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n\t\t//   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n\t\t// The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n\t\tconst delta = diagonalReverseBase - diagonalForwardBase;\n\t\tconst deltaIsEven = (delta % 2 === 0);\n\n\t\t// Here we set up the start and end points as the furthest points found so far\n\t\t// in both the forward and reverse directions, respectively\n\t\tforwardPoints[diagonalForwardBase] = originalStart;\n\t\treversePoints[diagonalReverseBase] = originalEnd;\n\n\t\t// Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n\t\tquitEarlyArr[0] = false;\n\n\n\n\t\t// A couple of points:\n\t\t// --With this method, we iterate on the number of differences between the two sequences.\n\t\t//   The more differences there actually are, the longer this will take.\n\t\t// --Also, as the number of differences increases, we have to search on diagonals further\n\t\t//   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n\t\t// --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n\t\t//   is even and odd diagonals only when numDifferences is odd.\n\t\tfor (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n\t\t\tlet furthestOriginalIndex = 0;\n\t\t\tlet furthestModifiedIndex = 0;\n\n\t\t\t// Run the algorithm in the forward direction\n\t\t\tdiagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tdiagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalStart, modifiedStart)\n\t\t\t\tif (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal + 1];\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = forwardPoints[diagonal - 1] + 1;\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap in step 3\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// so long as the elements are equal.\n\t\t\t\twhile (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n\t\t\t\t\toriginalIndex++;\n\t\t\t\t\tmodifiedIndex++;\n\t\t\t\t}\n\t\t\t\tforwardPoints[diagonal] = originalIndex;\n\n\t\t\t\tif (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n\t\t\t\t\tfurthestOriginalIndex = originalIndex;\n\t\t\t\t\tfurthestModifiedIndex = modifiedIndex;\n\t\t\t\t}\n\n\t\t\t\t// STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n\t\t\t\t// and diagonal is in the range of reverse diagonals computed for numDifferences-1\n\t\t\t\t// (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n\t\t\t\t\tif (originalIndex >= reversePoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check to see if we should be quitting early, before moving on to the next iteration.\n\t\t\tconst matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n\n\t\t\tif (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n\t\t\t\t// We can't finish, so skip ahead to generating a result from what we have.\n\t\t\t\tquitEarlyArr[0] = true;\n\n\t\t\t\t// Use the furthest distance we got in the forward direction.\n\t\t\t\tmidOriginalArr[0] = furthestOriginalIndex;\n\t\t\t\tmidModifiedArr[0] = furthestModifiedIndex;\n\n\t\t\t\tif (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t// Enough of the history is in memory to walk it backwards\n\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// We didn't actually remember enough of the history.\n\n\t\t\t\t\t//Since we are quiting the diff early, we need to shift back the originalStart and modified start\n\t\t\t\t\t//back into the boundary limits since we decremented their value above beyond the boundary limit.\n\t\t\t\t\toriginalStart++;\n\t\t\t\t\tmodifiedStart++;\n\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew DiffChange(originalStart, originalEnd - originalStart + 1,\n\t\t\t\t\t\t\tmodifiedStart, modifiedEnd - modifiedStart + 1)\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Run the algorithm in the reverse direction\n\t\t\tdiagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tdiagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n\t\t\tfor (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n\t\t\t\t// STEP 1: We extend the furthest reaching point in the present diagonal\n\t\t\t\t// by looking at the diagonals above and below and picking the one whose point\n\t\t\t\t// is further away from the start point (originalEnd, modifiedEnd)\n\t\t\t\tif (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal + 1] - 1;\n\t\t\t\t} else {\n\t\t\t\t\toriginalIndex = reversePoints[diagonal - 1];\n\t\t\t\t}\n\t\t\t\tmodifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n\n\t\t\t\t// Save the current originalIndex so we can test for false overlap\n\t\t\t\tconst tempOriginalIndex = originalIndex;\n\n\t\t\t\t// STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n\t\t\t\t// as long as the elements are equal.\n\t\t\t\twhile (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n\t\t\t\t\toriginalIndex--;\n\t\t\t\t\tmodifiedIndex--;\n\t\t\t\t}\n\t\t\t\treversePoints[diagonal] = originalIndex;\n\n\t\t\t\t// STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n\t\t\t\t// and diagonal is in the range of forward diagonals computed for numDifferences\n\t\t\t\t// then check for overlap.\n\t\t\t\tif (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n\t\t\t\t\tif (originalIndex <= forwardPoints[diagonal]) {\n\t\t\t\t\t\tmidOriginalArr[0] = originalIndex;\n\t\t\t\t\t\tmidModifiedArr[0] = modifiedIndex;\n\n\t\t\t\t\t\tif (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n\t\t\t\t\t\t\t// BINGO! We overlapped, and we have the full trace in memory!\n\t\t\t\t\t\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\t\t\t\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\t\t\t\t\t\tforwardPoints, reversePoints,\n\t\t\t\t\t\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\t\t\t\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\t\t\t\t\t\tdeltaIsEven, quitEarlyArr\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Either false overlap, or we didn't have enough memory for the full trace\n\t\t\t\t\t\t\t// Just return the recursion point\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save current vectors to history before the next iteration\n\t\t\tif (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n\t\t\t\t// We are allocating space for one extra int, which we fill with\n\t\t\t\t// the index of the diagonal base index\n\t\t\t\tlet temp = new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2);\n\t\t\t\ttemp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n\t\t\t\tMyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n\t\t\t\tthis.m_forwardHistory.push(temp);\n\n\t\t\t\ttemp = new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2);\n\t\t\t\ttemp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n\t\t\t\tMyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n\t\t\t\tthis.m_reverseHistory.push(temp);\n\t\t\t}\n\n\t\t}\n\n\t\t// If we got here, then we have the full trace in history. We just have to convert it to a change list\n\t\t// NOTE: This part is a bit messy\n\t\treturn this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset,\n\t\t\tdiagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset,\n\t\t\tforwardPoints, reversePoints,\n\t\t\toriginalIndex, originalEnd, midOriginalArr,\n\t\t\tmodifiedIndex, modifiedEnd, midModifiedArr,\n\t\t\tdeltaIsEven, quitEarlyArr\n\t\t);\n\t}\n\n\t/**\n\t * Shifts the given changes to provide a more intuitive diff.\n\t * While the first element in a diff matches the first element after the diff,\n\t * we shift the diff down.\n\t *\n\t * @param changes The list of changes to shift\n\t * @returns The shifted changes\n\t */\n\tprivate PrettifyChanges(changes: DiffChange[]): DiffChange[] {\n\n\t\t// Shift all the changes down first\n\t\tfor (let i = 0; i < changes.length; i++) {\n\t\t\tconst change = changes[i];\n\t\t\tconst originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n\t\t\tconst modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\twhile (change.originalStart + change.originalLength < originalStop &&\n\t\t\t\tchange.modifiedStart + change.modifiedLength < modifiedStop &&\n\t\t\t\t(!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n\t\t\t\t(!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n\t\t\t\tchange.originalStart++;\n\t\t\t\tchange.modifiedStart++;\n\t\t\t}\n\n\t\t\tlet mergedChangeArr: Array<DiffChange | null> = [null];\n\t\t\tif (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n\t\t\t\tchanges[i] = mergedChangeArr[0]!;\n\t\t\t\tchanges.splice(i + 1, 1);\n\t\t\t\ti--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Shift changes back up until we hit empty or whitespace-only lines\n\t\tfor (let i = changes.length - 1; i >= 0; i--) {\n\t\t\tconst change = changes[i];\n\n\t\t\tlet originalStop = 0;\n\t\t\tlet modifiedStop = 0;\n\t\t\tif (i > 0) {\n\t\t\t\tconst prevChange = changes[i - 1];\n\t\t\t\tif (prevChange.originalLength > 0) {\n\t\t\t\t\toriginalStop = prevChange.originalStart + prevChange.originalLength;\n\t\t\t\t}\n\t\t\t\tif (prevChange.modifiedLength > 0) {\n\t\t\t\t\tmodifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst checkOriginal = change.originalLength > 0;\n\t\t\tconst checkModified = change.modifiedLength > 0;\n\n\t\t\tlet bestDelta = 0;\n\t\t\tlet bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n\n\t\t\tfor (let delta = 1; ; delta++) {\n\t\t\t\tconst originalStart = change.originalStart - delta;\n\t\t\t\tconst modifiedStart = change.modifiedStart - delta;\n\n\t\t\t\tif (originalStart < originalStop || modifiedStart < modifiedStop) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n\n\t\t\t\tif (score > bestScore) {\n\t\t\t\t\tbestScore = score;\n\t\t\t\t\tbestDelta = delta;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchange.originalStart -= bestDelta;\n\t\t\tchange.modifiedStart -= bestDelta;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tprivate _OriginalIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n\t}\n\n\tprivate _OriginalRegionIsBoundary(originalStart: number, originalLength: number): boolean {\n\t\tif (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (originalLength > 0) {\n\t\t\tconst originalEnd = originalStart + originalLength;\n\t\t\tif (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _ModifiedIsBoundary(index: number): boolean {\n\t\tif (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n\t}\n\n\tprivate _ModifiedRegionIsBoundary(modifiedStart: number, modifiedLength: number): boolean {\n\t\tif (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (modifiedLength > 0) {\n\t\t\tconst modifiedEnd = modifiedStart + modifiedLength;\n\t\t\tif (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _boundaryScore(originalStart: number, originalLength: number, modifiedStart: number, modifiedLength: number): number {\n\t\tconst originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n\t\tconst modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n\t\treturn (originalScore + modifiedScore);\n\t}\n\n\t/**\n\t * Concatenates the two input DiffChange lists and returns the resulting\n\t * list.\n\t * @param The left changes\n\t * @param The right changes\n\t * @returns The concatenated list\n\t */\n\tprivate ConcatenateChanges(left: DiffChange[], right: DiffChange[]): DiffChange[] {\n\t\tlet mergedChangeArr: DiffChange[] = [];\n\n\t\tif (left.length === 0 || right.length === 0) {\n\t\t\treturn (right.length > 0) ? right : left;\n\t\t} else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n\t\t\t// Since we break the problem down recursively, it is possible that we\n\t\t\t// might recurse in the middle of a change thereby splitting it into\n\t\t\t// two changes. Here in the combining stage, we detect and fuse those\n\t\t\t// changes back together\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length - 1);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length - 1);\n\t\t\tresult[left.length - 1] = mergedChangeArr[0];\n\t\t\tMyArray.Copy(right, 1, result, left.length, right.length - 1);\n\n\t\t\treturn result;\n\t\t} else {\n\t\t\tconst result = new Array<DiffChange>(left.length + right.length);\n\t\t\tMyArray.Copy(left, 0, result, 0, left.length);\n\t\t\tMyArray.Copy(right, 0, result, left.length, right.length);\n\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the two changes overlap and can be merged into a single\n\t * change\n\t * @param left The left change\n\t * @param right The right change\n\t * @param mergedChange The merged change if the two overlap, null otherwise\n\t * @returns True if the two changes overlap\n\t */\n\tprivate ChangesOverlap(left: DiffChange, right: DiffChange, mergedChangeArr: Array<DiffChange | null>): boolean {\n\t\tDebug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n\t\tDebug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n\n\t\tif (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\tconst originalStart = left.originalStart;\n\t\t\tlet originalLength = left.originalLength;\n\t\t\tconst modifiedStart = left.modifiedStart;\n\t\t\tlet modifiedLength = left.modifiedLength;\n\n\t\t\tif (left.originalStart + left.originalLength >= right.originalStart) {\n\t\t\t\toriginalLength = right.originalStart + right.originalLength - left.originalStart;\n\t\t\t}\n\t\t\tif (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n\t\t\t\tmodifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n\t\t\t}\n\n\t\t\tmergedChangeArr[0] = new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tmergedChangeArr[0] = null;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Helper method used to clip a diagonal index to the range of valid\n\t * diagonals. This also decides whether or not the diagonal index,\n\t * if it exceeds the boundary, should be clipped to the boundary or clipped\n\t * one inside the boundary depending on the Even/Odd status of the boundary\n\t * and numDifferences.\n\t * @param diagonal The index of the diagonal to clip.\n\t * @param numDifferences The current number of differences being iterated upon.\n\t * @param diagonalBaseIndex The base reference diagonal.\n\t * @param numDiagonals The total number of diagonals.\n\t * @returns The clipped diagonal index.\n\t */\n\tprivate ClipDiagonalBound(diagonal: number, numDifferences: number, diagonalBaseIndex: number, numDiagonals: number): number {\n\t\tif (diagonal >= 0 && diagonal < numDiagonals) {\n\t\t\t// Nothing to clip, its in range\n\t\t\treturn diagonal;\n\t\t}\n\n\t\t// diagonalsBelow: The number of diagonals below the reference diagonal\n\t\t// diagonalsAbove: The number of diagonals above the reference diagonal\n\t\tconst diagonalsBelow = diagonalBaseIndex;\n\t\tconst diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n\t\tconst diffEven = (numDifferences % 2 === 0);\n\n\t\tif (diagonal < 0) {\n\t\t\tconst lowerBoundEven = (diagonalsBelow % 2 === 0);\n\t\t\treturn (diffEven === lowerBoundEven) ? 0 : 1;\n\t\t} else {\n\t\t\tconst upperBoundEven = (diagonalsAbove % 2 === 0);\n\t\t\treturn (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\t/**\n\t * MAX SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMAX_SAFE_SMALL_INTEGER = 1 << 30,\n\n\t/**\n\t * MIN SMI (SMall Integer) as defined in v8.\n\t * one bit is lost for boxing/unboxing flag.\n\t * one bit is lost for sign flag.\n\t * See https://thibaultlaurens.github.io/javascript/2013/04/29/how-the-v8-engine-works/#tagged-values\n\t */\n\tMIN_SAFE_SMALL_INTEGER = -(1 << 30),\n\n\t/**\n\t * Max unsigned integer that fits on 8 bits.\n\t */\n\tMAX_UINT_8 = 255, // 2^8 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 16 bits.\n\t */\n\tMAX_UINT_16 = 65535, // 2^16 - 1\n\n\t/**\n\t * Max unsigned integer that fits on 32 bits.\n\t */\n\tMAX_UINT_32 = 4294967295, // 2^32 - 1\n\n\tUNICODE_SUPPLEMENTARY_PLANE_BEGIN = 0x010000\n}\n\nexport function toUint8(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_8) {\n\t\treturn Constants.MAX_UINT_8;\n\t}\n\treturn v | 0;\n}\n\nexport function toUint32(v: number): number {\n\tif (v < 0) {\n\t\treturn 0;\n\t}\n\tif (v > Constants.MAX_UINT_32) {\n\t\treturn Constants.MAX_UINT_32;\n\t}\n\treturn v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken #107886 the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compare(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { LRUCache } from 'vs/base/common/map';\nimport * as strings from 'vs/base/common/strings';\n\nexport interface IFilter {\n\t// Returns null if word doesn't match.\n\t(word: string, wordToMatchAgainst: string): IMatch[] | null;\n}\n\nexport interface IMatch {\n\tstart: number;\n\tend: number;\n}\n\n// Combined filters\n\n/**\n * @returns A filter which combines the provided set\n * of filters with an or. The *first* filters that\n * matches defined the return value of the returned\n * filter.\n */\nexport function or(...filter: IFilter[]): IFilter {\n\treturn function (word: string, wordToMatchAgainst: string): IMatch[] | null {\n\t\tfor (let i = 0, len = filter.length; i < len; i++) {\n\t\t\tconst match = filter[i](word, wordToMatchAgainst);\n\t\t\tif (match) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n}\n\n// Prefix\n\nexport const matchesStrictPrefix: IFilter = _matchesPrefix.bind(undefined, false);\nexport const matchesPrefix: IFilter = _matchesPrefix.bind(undefined, true);\n\nfunction _matchesPrefix(ignoreCase: boolean, word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tif (!wordToMatchAgainst || wordToMatchAgainst.length < word.length) {\n\t\treturn null;\n\t}\n\n\tlet matches: boolean;\n\tif (ignoreCase) {\n\t\tmatches = strings.startsWithIgnoreCase(wordToMatchAgainst, word);\n\t} else {\n\t\tmatches = wordToMatchAgainst.indexOf(word) === 0;\n\t}\n\n\tif (!matches) {\n\t\treturn null;\n\t}\n\n\treturn word.length > 0 ? [{ start: 0, end: word.length }] : [];\n}\n\n// Contiguous Substring\n\nexport function matchesContiguousSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tconst index = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (index === -1) {\n\t\treturn null;\n\t}\n\n\treturn [{ start: index, end: index + word.length }];\n}\n\n// Substring\n\nexport function matchesSubString(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\treturn _matchesSubString(word.toLowerCase(), wordToMatchAgainst.toLowerCase(), 0, 0);\n}\n\nfunction _matchesSubString(word: string, wordToMatchAgainst: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === wordToMatchAgainst.length) {\n\t\treturn null;\n\t} else {\n\t\tif (word[i] === wordToMatchAgainst[j]) {\n\t\t\tlet result: IMatch[] | null = null;\n\t\t\tif (result = _matchesSubString(word, wordToMatchAgainst, i + 1, j + 1)) {\n\t\t\t\treturn join({ start: j, end: j + 1 }, result);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\treturn _matchesSubString(word, wordToMatchAgainst, i, j + 1);\n\t}\n}\n\n// CamelCase\n\nfunction isLower(code: number): boolean {\n\treturn CharCode.a <= code && code <= CharCode.z;\n}\n\nexport function isUpper(code: number): boolean {\n\treturn CharCode.A <= code && code <= CharCode.Z;\n}\n\nfunction isNumber(code: number): boolean {\n\treturn CharCode.Digit0 <= code && code <= CharCode.Digit9;\n}\n\nfunction isWhitespace(code: number): boolean {\n\treturn (\n\t\tcode === CharCode.Space\n\t\t|| code === CharCode.Tab\n\t\t|| code === CharCode.LineFeed\n\t\t|| code === CharCode.CarriageReturn\n\t);\n}\n\nconst wordSeparators = new Set<number>();\n'`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?'\n\t.split('')\n\t.forEach(s => wordSeparators.add(s.charCodeAt(0)));\n\nfunction isWordSeparator(code: number): boolean {\n\treturn isWhitespace(code) || wordSeparators.has(code);\n}\n\nfunction charactersMatch(codeA: number, codeB: number): boolean {\n\treturn (codeA === codeB) || (isWordSeparator(codeA) && isWordSeparator(codeB));\n}\n\nfunction isAlphanumeric(code: number): boolean {\n\treturn isLower(code) || isUpper(code) || isNumber(code);\n}\n\nfunction join(head: IMatch, tail: IMatch[]): IMatch[] {\n\tif (tail.length === 0) {\n\t\ttail = [head];\n\t} else if (head.end === tail[0].start) {\n\t\ttail[0].start = head.start;\n\t} else {\n\t\ttail.unshift(head);\n\t}\n\treturn tail;\n}\n\nfunction nextAnchor(camelCaseWord: string, start: number): number {\n\tfor (let i = start; i < camelCaseWord.length; i++) {\n\t\tconst c = camelCaseWord.charCodeAt(i);\n\t\tif (isUpper(c) || isNumber(c) || (i > 0 && !isAlphanumeric(camelCaseWord.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn camelCaseWord.length;\n}\n\nfunction _matchesCamelCase(word: string, camelCaseWord: string, i: number, j: number): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === camelCaseWord.length) {\n\t\treturn null;\n\t} else if (word[i] !== camelCaseWord[j].toLowerCase()) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextUpperIndex = j + 1;\n\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, j + 1);\n\t\twhile (!result && (nextUpperIndex = nextAnchor(camelCaseWord, nextUpperIndex)) < camelCaseWord.length) {\n\t\t\tresult = _matchesCamelCase(word, camelCaseWord, i + 1, nextUpperIndex);\n\t\t\tnextUpperIndex++;\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\ninterface ICamelCaseAnalysis {\n\tupperPercent: number;\n\tlowerPercent: number;\n\talphaPercent: number;\n\tnumericPercent: number;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camelCaseWords.\nfunction analyzeCamelCaseWord(word: string): ICamelCaseAnalysis {\n\tlet upper = 0, lower = 0, alpha = 0, numeric = 0, code = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isAlphanumeric(code)) { alpha++; }\n\t\tif (isNumber(code)) { numeric++; }\n\t}\n\n\tconst upperPercent = upper / word.length;\n\tconst lowerPercent = lower / word.length;\n\tconst alphaPercent = alpha / word.length;\n\tconst numericPercent = numeric / word.length;\n\n\treturn { upperPercent, lowerPercent, alphaPercent, numericPercent };\n}\n\nfunction isUpperCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent } = analysis;\n\treturn lowerPercent === 0 && upperPercent > 0.6;\n}\n\nfunction isCamelCaseWord(analysis: ICamelCaseAnalysis): boolean {\n\tconst { upperPercent, lowerPercent, alphaPercent, numericPercent } = analysis;\n\treturn lowerPercent > 0.2 && upperPercent < 0.8 && alphaPercent > 0.6 && numericPercent < 0.2;\n}\n\n// Heuristic to avoid computing camel case matcher for words that don't\n// look like camel case patterns.\nfunction isCamelCasePattern(word: string): boolean {\n\tlet upper = 0, lower = 0, code = 0, whitespace = 0;\n\n\tfor (let i = 0; i < word.length; i++) {\n\t\tcode = word.charCodeAt(i);\n\n\t\tif (isUpper(code)) { upper++; }\n\t\tif (isLower(code)) { lower++; }\n\t\tif (isWhitespace(code)) { whitespace++; }\n\t}\n\n\tif ((upper === 0 || lower === 0) && whitespace === 0) {\n\t\treturn word.length <= 30;\n\t} else {\n\t\treturn upper <= 5;\n\t}\n}\n\nexport function matchesCamelCase(word: string, camelCaseWord: string): IMatch[] | null {\n\tif (!camelCaseWord) {\n\t\treturn null;\n\t}\n\n\tcamelCaseWord = camelCaseWord.trim();\n\n\tif (camelCaseWord.length === 0) {\n\t\treturn null;\n\t}\n\n\tif (!isCamelCasePattern(word)) {\n\t\treturn null;\n\t}\n\n\tif (camelCaseWord.length > 60) {\n\t\treturn null;\n\t}\n\n\tconst analysis = analyzeCamelCaseWord(camelCaseWord);\n\n\tif (!isCamelCaseWord(analysis)) {\n\t\tif (!isUpperCaseWord(analysis)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tcamelCaseWord = camelCaseWord.toLowerCase();\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\twhile (i < camelCaseWord.length && (result = _matchesCamelCase(word, camelCaseWord, 0, i)) === null) {\n\t\ti = nextAnchor(camelCaseWord, i + 1);\n\t}\n\n\treturn result;\n}\n\n// Matches beginning of words supporting non-ASCII languages\n// If `contiguous` is true then matches word with beginnings of the words in the target. E.g. \"pul\" will match \"Git: Pull\"\n// Otherwise also matches sub string of the word with beginnings of the words in the target. E.g. \"gp\" or \"g p\" will match \"Git: Pull\"\n// Useful in cases where the target is words (e.g. command labels)\n\nexport function matchesWords(word: string, target: string, contiguous: boolean = false): IMatch[] | null {\n\tif (!target || target.length === 0) {\n\t\treturn null;\n\t}\n\n\tlet result: IMatch[] | null = null;\n\tlet i = 0;\n\n\tword = word.toLowerCase();\n\ttarget = target.toLowerCase();\n\twhile (i < target.length && (result = _matchesWords(word, target, 0, i, contiguous)) === null) {\n\t\ti = nextWord(target, i + 1);\n\t}\n\n\treturn result;\n}\n\nfunction _matchesWords(word: string, target: string, i: number, j: number, contiguous: boolean): IMatch[] | null {\n\tif (i === word.length) {\n\t\treturn [];\n\t} else if (j === target.length) {\n\t\treturn null;\n\t} else if (!charactersMatch(word.charCodeAt(i), target.charCodeAt(j))) {\n\t\treturn null;\n\t} else {\n\t\tlet result: IMatch[] | null = null;\n\t\tlet nextWordIndex = j + 1;\n\t\tresult = _matchesWords(word, target, i + 1, j + 1, contiguous);\n\t\tif (!contiguous) {\n\t\t\twhile (!result && (nextWordIndex = nextWord(target, nextWordIndex)) < target.length) {\n\t\t\t\tresult = _matchesWords(word, target, i + 1, nextWordIndex, contiguous);\n\t\t\t\tnextWordIndex++;\n\t\t\t}\n\t\t}\n\t\treturn result === null ? null : join({ start: j, end: j + 1 }, result);\n\t}\n}\n\nfunction nextWord(word: string, start: number): number {\n\tfor (let i = start; i < word.length; i++) {\n\t\tif (isWordSeparator(word.charCodeAt(i)) ||\n\t\t\t(i > 0 && isWordSeparator(word.charCodeAt(i - 1)))) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn word.length;\n}\n\n// Fuzzy\n\nconst fuzzyContiguousFilter = or(matchesPrefix, matchesCamelCase, matchesContiguousSubString);\nconst fuzzySeparateFilter = or(matchesPrefix, matchesCamelCase, matchesSubString);\nconst fuzzyRegExpCache = new LRUCache<string, RegExp>(10000); // bounded to 10000 elements\n\nexport function matchesFuzzy(word: string, wordToMatchAgainst: string, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tif (typeof word !== 'string' || typeof wordToMatchAgainst !== 'string') {\n\t\treturn null; // return early for invalid input\n\t}\n\n\t// Form RegExp for wildcard matches\n\tlet regexp = fuzzyRegExpCache.get(word);\n\tif (!regexp) {\n\t\tregexp = new RegExp(strings.convertSimple2RegExpPattern(word), 'i');\n\t\tfuzzyRegExpCache.set(word, regexp);\n\t}\n\n\t// RegExp Filter\n\tconst match = regexp.exec(wordToMatchAgainst);\n\tif (match) {\n\t\treturn [{ start: match.index, end: match.index + match[0].length }];\n\t}\n\n\t// Default Filter\n\treturn enableSeparateSubstringMatching ? fuzzySeparateFilter(word, wordToMatchAgainst) : fuzzyContiguousFilter(word, wordToMatchAgainst);\n}\n\n/**\n * Match pattern againt word in a fuzzy way. As in IntelliSense and faster and more\n * powerfull than `matchesFuzzy`\n */\nexport function matchesFuzzy2(pattern: string, word: string): IMatch[] | null {\n\tconst score = fuzzyScore(pattern, pattern.toLowerCase(), 0, word, word.toLowerCase(), 0, true);\n\treturn score ? createMatches(score) : null;\n}\n\nexport function anyScore(pattern: string, lowPattern: string, _patternPos: number, word: string, lowWord: string, _wordPos: number): FuzzyScore {\n\tconst result = fuzzyScore(pattern, lowPattern, 0, word, lowWord, 0, true);\n\tif (result) {\n\t\treturn result;\n\t}\n\tlet matches = 0;\n\tlet score = 0;\n\tlet idx = _wordPos;\n\tfor (let patternPos = 0; patternPos < lowPattern.length && patternPos < _maxLen; ++patternPos) {\n\t\tconst wordPos = lowWord.indexOf(lowPattern.charAt(patternPos), idx);\n\t\tif (wordPos >= 0) {\n\t\t\tscore += 1;\n\t\t\tmatches += 2 ** wordPos;\n\t\t\tidx = wordPos + 1;\n\n\t\t} else if (matches !== 0) {\n\t\t\t// once we have started matching things\n\t\t\t// we need to match the remaining pattern\n\t\t\t// characters\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn [score, matches, _wordPos];\n}\n\n//#region --- fuzzyScore ---\n\nexport function createMatches(score: undefined | FuzzyScore): IMatch[] {\n\tif (typeof score === 'undefined') {\n\t\treturn [];\n\t}\n\n\tconst matches = score[1].toString(2);\n\tconst wordStart = score[2];\n\tconst res: IMatch[] = [];\n\n\tfor (let pos = wordStart; pos < _maxLen; pos++) {\n\t\tif (matches[matches.length - (pos + 1)] === '1') {\n\t\t\tconst last = res[res.length - 1];\n\t\t\tif (last && last.end === pos) {\n\t\t\t\tlast.end = pos + 1;\n\t\t\t} else {\n\t\t\t\tres.push({ start: pos, end: pos + 1 });\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nconst _maxLen = 128;\n\nfunction initTable() {\n\tconst table: number[][] = [];\n\tconst row: number[] = [0];\n\tfor (let i = 1; i <= _maxLen; i++) {\n\t\trow.push(-i);\n\t}\n\tfor (let i = 0; i <= _maxLen; i++) {\n\t\tconst thisRow = row.slice(0);\n\t\tthisRow[0] = -i;\n\t\ttable.push(thisRow);\n\t}\n\treturn table;\n}\n\nconst _table = initTable();\nconst _scores = initTable();\nconst _arrows = <Arrow[][]>initTable();\nconst _debug = false;\n\nfunction printTable(table: number[][], pattern: string, patternLen: number, word: string, wordLen: number): string {\n\tfunction pad(s: string, n: number, pad = ' ') {\n\t\twhile (s.length < n) {\n\t\t\ts = pad + s;\n\t\t}\n\t\treturn s;\n\t}\n\tlet ret = ` |   |${word.split('').map(c => pad(c, 3)).join('|')}\\n`;\n\n\tfor (let i = 0; i <= patternLen; i++) {\n\t\tif (i === 0) {\n\t\t\tret += ' |';\n\t\t} else {\n\t\t\tret += `${pattern[i - 1]}|`;\n\t\t}\n\t\tret += table[i].slice(0, wordLen + 1).map(n => pad(n.toString(), 3)).join('|') + '\\n';\n\t}\n\treturn ret;\n}\n\nfunction printTables(pattern: string, patternStart: number, word: string, wordStart: number): void {\n\tpattern = pattern.substr(patternStart);\n\tword = word.substr(wordStart);\n\tconsole.log(printTable(_table, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_arrows, pattern, pattern.length, word, word.length));\n\tconsole.log(printTable(_scores, pattern, pattern.length, word, word.length));\n}\n\nfunction isSeparatorAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Underline:\n\t\tcase CharCode.Dash:\n\t\tcase CharCode.Period:\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Slash:\n\t\tcase CharCode.Backslash:\n\t\tcase CharCode.SingleQuote:\n\t\tcase CharCode.DoubleQuote:\n\t\tcase CharCode.Colon:\n\t\tcase CharCode.DollarSign:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isWhitespaceAtPos(value: string, index: number): boolean {\n\tif (index < 0 || index >= value.length) {\n\t\treturn false;\n\t}\n\tconst code = value.charCodeAt(index);\n\tswitch (code) {\n\t\tcase CharCode.Space:\n\t\tcase CharCode.Tab:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction isUpperCaseAtPos(pos: number, word: string, wordLow: string): boolean {\n\treturn word[pos] !== wordLow[pos];\n}\n\nexport function isPatternInWord(patternLow: string, patternPos: number, patternLen: number, wordLow: string, wordPos: number, wordLen: number): boolean {\n\twhile (patternPos < patternLen && wordPos < wordLen) {\n\t\tif (patternLow[patternPos] === wordLow[wordPos]) {\n\t\t\tpatternPos += 1;\n\t\t}\n\t\twordPos += 1;\n\t}\n\treturn patternPos === patternLen; // pattern must be exhausted\n}\n\nconst enum Arrow { Top = 0b1, Diag = 0b10, Left = 0b100 }\n\n/**\n * A tuple of three values.\n * 0. the score\n * 1. the matches encoded as bitmask (2^53)\n * 2. the offset at which matching started\n */\nexport type FuzzyScore = [number, number, number];\n\nexport namespace FuzzyScore {\n\t/**\n\t * No matches and value `-100`\n\t */\n\texport const Default: [-100, 0, 0] = <[-100, 0, 0]>Object.freeze([-100, 0, 0]);\n\n\texport function isDefault(score?: FuzzyScore): score is [-100, 0, 0] {\n\t\treturn !score || (score[0] === -100 && score[1] === 0 && score[2] === 0);\n\t}\n}\n\nexport interface FuzzyScorer {\n\t(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined;\n}\n\nexport function fuzzyScore(pattern: string, patternLow: string, patternStart: number, word: string, wordLow: string, wordStart: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\n\tconst patternLen = pattern.length > _maxLen ? _maxLen : pattern.length;\n\tconst wordLen = word.length > _maxLen ? _maxLen : word.length;\n\n\tif (patternStart >= patternLen || wordStart >= wordLen || (patternLen - patternStart) > (wordLen - wordStart)) {\n\t\treturn undefined;\n\t}\n\n\t// Run a simple check if the characters of pattern occur\n\t// (in order) at all in word. If that isn't the case we\n\t// stop because no match will be possible\n\tif (!isPatternInWord(patternLow, patternStart, patternLen, wordLow, wordStart, wordLen)) {\n\t\treturn undefined;\n\t}\n\n\tlet row: number = 1;\n\tlet column: number = 1;\n\tlet patternPos = patternStart;\n\tlet wordPos = wordStart;\n\n\tlet hasStrongFirstMatch = false;\n\n\t// There will be a match, fill in tables\n\tfor (row = 1, patternPos = patternStart; patternPos < patternLen; row++, patternPos++) {\n\n\t\tfor (column = 1, wordPos = wordStart; wordPos < wordLen; column++, wordPos++) {\n\n\t\t\tconst score = _doScore(pattern, patternLow, patternPos, patternStart, word, wordLow, wordPos);\n\n\t\t\tif (patternPos === patternStart && score > 1) {\n\t\t\t\thasStrongFirstMatch = true;\n\t\t\t}\n\n\t\t\t_scores[row][column] = score;\n\n\t\t\tconst diag = _table[row - 1][column - 1] + (score > 1 ? 1 : score);\n\t\t\tconst top = _table[row - 1][column] + -1;\n\t\t\tconst left = _table[row][column - 1] + -1;\n\n\t\t\tif (left >= top) {\n\t\t\t\t// left or diag\n\t\t\t\tif (left > diag) {\n\t\t\t\t\t_table[row][column] = left;\n\t\t\t\t\t_arrows[row][column] = Arrow.Left;\n\t\t\t\t} else if (left === diag) {\n\t\t\t\t\t_table[row][column] = left;\n\t\t\t\t\t_arrows[row][column] = Arrow.Left | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[row][column] = diag;\n\t\t\t\t\t_arrows[row][column] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// top or diag\n\t\t\t\tif (top > diag) {\n\t\t\t\t\t_table[row][column] = top;\n\t\t\t\t\t_arrows[row][column] = Arrow.Top;\n\t\t\t\t} else if (top === diag) {\n\t\t\t\t\t_table[row][column] = top;\n\t\t\t\t\t_arrows[row][column] = Arrow.Top | Arrow.Diag;\n\t\t\t\t} else {\n\t\t\t\t\t_table[row][column] = diag;\n\t\t\t\t\t_arrows[row][column] = Arrow.Diag;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (_debug) {\n\t\tprintTables(pattern, patternStart, word, wordStart);\n\t}\n\n\tif (!hasStrongFirstMatch && !firstMatchCanBeWeak) {\n\t\treturn undefined;\n\t}\n\n\t_matchesCount = 0;\n\t_topScore = -100;\n\t_wordStart = wordStart;\n\t_firstMatchCanBeWeak = firstMatchCanBeWeak;\n\n\t_findAllMatches2(row - 1, column - 1, patternLen === wordLen ? 1 : 0, 0, false);\n\tif (_matchesCount === 0) {\n\t\treturn undefined;\n\t}\n\n\treturn [_topScore, _topMatch2, wordStart];\n}\n\nfunction _doScore(pattern: string, patternLow: string, patternPos: number, patternStart: number, word: string, wordLow: string, wordPos: number) {\n\tif (patternLow[patternPos] !== wordLow[wordPos]) {\n\t\treturn -1;\n\t}\n\tif (wordPos === (patternPos - patternStart)) {\n\t\t// common prefix: `foobar <-> foobaz`\n\t\t//                            ^^^^^\n\t\tif (pattern[patternPos] === word[wordPos]) {\n\t\t\treturn 7;\n\t\t} else {\n\t\t\treturn 5;\n\t\t}\n\t} else if (isUpperCaseAtPos(wordPos, word, wordLow) && (wordPos === 0 || !isUpperCaseAtPos(wordPos - 1, word, wordLow))) {\n\t\t// hitting upper-case: `foo <-> forOthers`\n\t\t//                              ^^ ^\n\t\tif (pattern[patternPos] === word[wordPos]) {\n\t\t\treturn 7;\n\t\t} else {\n\t\t\treturn 5;\n\t\t}\n\t} else if (isSeparatorAtPos(wordLow, wordPos) && (wordPos === 0 || !isSeparatorAtPos(wordLow, wordPos - 1))) {\n\t\t// hitting a separator: `. <-> foo.bar`\n\t\t//                                ^\n\t\treturn 5;\n\n\t} else if (isSeparatorAtPos(wordLow, wordPos - 1) || isWhitespaceAtPos(wordLow, wordPos - 1)) {\n\t\t// post separator: `foo <-> bar_foo`\n\t\t//                              ^^^\n\t\treturn 5;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\nlet _matchesCount: number = 0;\nlet _topMatch2: number = 0;\nlet _topScore: number = 0;\nlet _wordStart: number = 0;\nlet _firstMatchCanBeWeak: boolean = false;\n\nfunction _findAllMatches2(row: number, column: number, total: number, matches: number, lastMatched: boolean): void {\n\n\tif (_matchesCount >= 10 || total < -25) {\n\t\t// stop when having already 10 results, or\n\t\t// when a potential alignment as already 5 gaps\n\t\treturn;\n\t}\n\n\tlet simpleMatchCount = 0;\n\n\twhile (row > 0 && column > 0) {\n\n\t\tconst score = _scores[row][column];\n\t\tconst arrow = _arrows[row][column];\n\n\t\tif (arrow === Arrow.Left) {\n\t\t\t// left -> no match, skip a word character\n\t\t\tcolumn -= 1;\n\t\t\tif (lastMatched) {\n\t\t\t\ttotal -= 5; // new gap penalty\n\t\t\t} else if (matches !== 0) {\n\t\t\t\ttotal -= 1; // gap penalty after first match\n\t\t\t}\n\t\t\tlastMatched = false;\n\t\t\tsimpleMatchCount = 0;\n\n\t\t} else if (arrow & Arrow.Diag) {\n\n\t\t\tif (arrow & Arrow.Left) {\n\t\t\t\t// left\n\t\t\t\t_findAllMatches2(\n\t\t\t\t\trow,\n\t\t\t\t\tcolumn - 1,\n\t\t\t\t\tmatches !== 0 ? total - 1 : total, // gap penalty after first match\n\t\t\t\t\tmatches,\n\t\t\t\t\tlastMatched\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// diag\n\t\t\ttotal += score;\n\t\t\trow -= 1;\n\t\t\tcolumn -= 1;\n\t\t\tlastMatched = true;\n\n\t\t\t// match -> set a 1 at the word pos\n\t\t\tmatches += 2 ** (column + _wordStart);\n\n\t\t\t// count simple matches and boost a row of\n\t\t\t// simple matches when they yield in a\n\t\t\t// strong match.\n\t\t\tif (score === 1) {\n\t\t\t\tsimpleMatchCount += 1;\n\n\t\t\t\tif (row === 0 && !_firstMatchCanBeWeak) {\n\t\t\t\t\t// when the first match is a weak\n\t\t\t\t\t// match we discard it\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// boost\n\t\t\t\ttotal += 1 + (simpleMatchCount * (score - 1));\n\t\t\t\tsimpleMatchCount = 0;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\ttotal -= column >= 3 ? 9 : column * 3; // late start penalty\n\n\t// dynamically keep track of the current top score\n\t// and insert the current best score at head, the rest at tail\n\t_matchesCount += 1;\n\tif (total > _topScore) {\n\t\t_topScore = total;\n\t\t_topMatch2 = matches;\n\t}\n}\n\n//#endregion\n\n\n//#region --- graceful ---\n\nexport function fuzzyScoreGracefulAggressive(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, true, firstMatchCanBeWeak);\n}\n\nexport function fuzzyScoreGraceful(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\treturn fuzzyScoreWithPermutations(pattern, lowPattern, patternPos, word, lowWord, wordPos, false, firstMatchCanBeWeak);\n}\n\nfunction fuzzyScoreWithPermutations(pattern: string, lowPattern: string, patternPos: number, word: string, lowWord: string, wordPos: number, aggressive: boolean, firstMatchCanBeWeak: boolean): FuzzyScore | undefined {\n\tlet top = fuzzyScore(pattern, lowPattern, patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\n\tif (top && !aggressive) {\n\t\t// when using the original pattern yield a result we`\n\t\t// return it unless we are aggressive and try to find\n\t\t// a better alignment, e.g. `cno` -> `^co^ns^ole` or `^c^o^nsole`.\n\t\treturn top;\n\t}\n\n\tif (pattern.length >= 3) {\n\t\t// When the pattern is long enough then try a few (max 7)\n\t\t// permutations of the pattern to find a better match. The\n\t\t// permutations only swap neighbouring characters, e.g\n\t\t// `cnoso` becomes `conso`, `cnsoo`, `cnoos`.\n\t\tconst tries = Math.min(7, pattern.length - 1);\n\t\tfor (let movingPatternPos = patternPos + 1; movingPatternPos < tries; movingPatternPos++) {\n\t\t\tconst newPattern = nextTypoPermutation(pattern, movingPatternPos);\n\t\t\tif (newPattern) {\n\t\t\t\tconst candidate = fuzzyScore(newPattern, newPattern.toLowerCase(), patternPos, word, lowWord, wordPos, firstMatchCanBeWeak);\n\t\t\t\tif (candidate) {\n\t\t\t\t\tcandidate[0] -= 3; // permutation penalty\n\t\t\t\t\tif (!top || candidate[0] > top[0]) {\n\t\t\t\t\t\ttop = candidate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn top;\n}\n\nfunction nextTypoPermutation(pattern: string, patternPos: number): string | undefined {\n\n\tif (patternPos + 1 >= pattern.length) {\n\t\treturn undefined;\n\t}\n\n\tconst swap1 = pattern[patternPos];\n\tconst swap2 = pattern[patternPos + 1];\n\n\tif (swap1 === swap2) {\n\t\treturn undefined;\n\t}\n\n\treturn pattern.slice(0, patternPos)\n\t\t+ swap2\n\t\t+ swap1\n\t\t+ pattern.slice(patternPos + 2);\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { matchesFuzzy, IMatch } from 'vs/base/common/filters';\nimport { ltrim } from 'vs/base/common/strings';\n\nexport const codiconStartMarker = '$(';\n\nexport interface IParsedCodicons {\n\treadonly text: string;\n\treadonly codiconOffsets?: readonly number[];\n}\n\nexport function parseCodicons(text: string): IParsedCodicons {\n\tconst firstCodiconIndex = text.indexOf(codiconStartMarker);\n\tif (firstCodiconIndex === -1) {\n\t\treturn { text }; // return early if the word does not include an codicon\n\t}\n\n\treturn doParseCodicons(text, firstCodiconIndex);\n}\n\nfunction doParseCodicons(text: string, firstCodiconIndex: number): IParsedCodicons {\n\tconst codiconOffsets: number[] = [];\n\tlet textWithoutCodicons: string = '';\n\n\tfunction appendChars(chars: string) {\n\t\tif (chars) {\n\t\t\ttextWithoutCodicons += chars;\n\n\t\t\tfor (const _ of chars) {\n\t\t\t\tcodiconOffsets.push(codiconsOffset); // make sure to fill in codicon offsets\n\t\t\t}\n\t\t}\n\t}\n\n\tlet currentCodiconStart = -1;\n\tlet currentCodiconValue: string = '';\n\tlet codiconsOffset = 0;\n\n\tlet char: string;\n\tlet nextChar: string;\n\n\tlet offset = firstCodiconIndex;\n\tconst length = text.length;\n\n\t// Append all characters until the first codicon\n\tappendChars(text.substr(0, firstCodiconIndex));\n\n\t// example: $(file-symlink-file) my cool $(other-codicon) entry\n\twhile (offset < length) {\n\t\tchar = text[offset];\n\t\tnextChar = text[offset + 1];\n\n\t\t// beginning of codicon: some value $( <--\n\t\tif (char === codiconStartMarker[0] && nextChar === codiconStartMarker[1]) {\n\t\t\tcurrentCodiconStart = offset;\n\n\t\t\t// if we had a previous potential codicon value without\n\t\t\t// the closing ')', it was actually not an codicon and\n\t\t\t// so we have to add it to the actual value\n\t\t\tappendChars(currentCodiconValue);\n\n\t\t\tcurrentCodiconValue = codiconStartMarker;\n\n\t\t\toffset++; // jump over '('\n\t\t}\n\n\t\t// end of codicon: some value $(some-codicon) <--\n\t\telse if (char === ')' && currentCodiconStart !== -1) {\n\t\t\tconst currentCodiconLength = offset - currentCodiconStart + 1; // +1 to include the closing ')'\n\t\t\tcodiconsOffset += currentCodiconLength;\n\t\t\tcurrentCodiconStart = -1;\n\t\t\tcurrentCodiconValue = '';\n\t\t}\n\n\t\t// within codicon\n\t\telse if (currentCodiconStart !== -1) {\n\t\t\t// Make sure this is a real codicon name\n\t\t\tif (/^[a-z0-9\\-]$/i.test(char)) {\n\t\t\t\tcurrentCodiconValue += char;\n\t\t\t} else {\n\t\t\t\t// This is not a real codicon, treat it as text\n\t\t\t\tappendChars(currentCodiconValue);\n\n\t\t\t\tcurrentCodiconStart = -1;\n\t\t\t\tcurrentCodiconValue = '';\n\t\t\t}\n\t\t}\n\n\t\t// any value outside of codicons\n\t\telse {\n\t\t\tappendChars(char);\n\t\t}\n\n\t\toffset++;\n\t}\n\n\t// if we had a previous potential codicon value without\n\t// the closing ')', it was actually not an codicon and\n\t// so we have to add it to the actual value\n\tappendChars(currentCodiconValue);\n\n\treturn { text: textWithoutCodicons, codiconOffsets };\n}\n\nexport function matchesFuzzyCodiconAware(query: string, target: IParsedCodicons, enableSeparateSubstringMatching = false): IMatch[] | null {\n\tconst { text, codiconOffsets } = target;\n\n\t// Return early if there are no codicon markers in the word to match against\n\tif (!codiconOffsets || codiconOffsets.length === 0) {\n\t\treturn matchesFuzzy(query, text, enableSeparateSubstringMatching);\n\t}\n\n\t// Trim the word to match against because it could have leading\n\t// whitespace now if the word started with an codicon\n\tconst wordToMatchAgainstWithoutCodiconsTrimmed = ltrim(text, ' ');\n\tconst leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutCodiconsTrimmed.length;\n\n\t// match on value without codicons\n\tconst matches = matchesFuzzy(query, wordToMatchAgainstWithoutCodiconsTrimmed, enableSeparateSubstringMatching);\n\n\t// Map matches back to offsets with codicons and trimming\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tconst codiconOffset = codiconOffsets[match.start + leadingWhitespaceOffset] /* codicon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n\t\t\tmatch.start += codiconOffset;\n\t\t\tmatch.end += codiconOffset;\n\t\t}\n\t}\n\n\treturn matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { codiconStartMarker } from 'vs/base/common/codicon';\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\nclass Registry implements IIconRegistry {\n\n\tprivate readonly _icons = new Map<string, Codicon>();\n\tprivate readonly _onDidRegister = new Emitter<Codicon>();\n\n\tpublic add(icon: Codicon) {\n\t\tif (!this._icons.has(icon.id)) {\n\t\t\tthis._icons.set(icon.id, icon);\n\t\t\tthis._onDidRegister.fire(icon);\n\t\t} else {\n\t\t\tconsole.error(`Duplicate registration of codicon ${icon.id}`);\n\t\t}\n\t}\n\n\tpublic get(id: string): Codicon | undefined {\n\t\treturn this._icons.get(id);\n\t}\n\n\tpublic get all(): IterableIterator<Codicon> {\n\t\treturn this._icons.values();\n\t}\n\n\tpublic get onDidRegister(): Event<Codicon> {\n\t\treturn this._onDidRegister.event;\n\t}\n}\n\nconst _registry = new Registry();\n\nexport const iconRegistry: IIconRegistry = _registry;\n\nexport function registerIcon(id: string, def: Codicon, description?: string) {\n\treturn new Codicon(id, def);\n}\n\nexport class Codicon {\n\tconstructor(public readonly id: string, public readonly definition: Codicon | IconDefinition, public description?: string) {\n\t\t_registry.add(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\t// classNamesArray is useful for migrating to ES6 classlist\n\tpublic get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n}\n\ninterface IconDefinition {\n\tcharacter: string;\n}\n\nexport namespace Codicon {\n\n\t// built-in icons, with image name\n\texport const add = new Codicon('add', { character: '\\\\ea60' });\n\texport const plus = new Codicon('plus', { character: '\\\\ea60' });\n\texport const gistNew = new Codicon('gist-new', { character: '\\\\ea60' });\n\texport const repoCreate = new Codicon('repo-create', { character: '\\\\ea60' });\n\texport const lightbulb = new Codicon('lightbulb', { character: '\\\\ea61' });\n\texport const lightBulb = new Codicon('light-bulb', { character: '\\\\ea61' });\n\texport const repo = new Codicon('repo', { character: '\\\\ea62' });\n\texport const repoDelete = new Codicon('repo-delete', { character: '\\\\ea62' });\n\texport const gistFork = new Codicon('gist-fork', { character: '\\\\ea63' });\n\texport const repoForked = new Codicon('repo-forked', { character: '\\\\ea63' });\n\texport const gitPullRequest = new Codicon('git-pull-request', { character: '\\\\ea64' });\n\texport const gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { character: '\\\\ea64' });\n\texport const recordKeys = new Codicon('record-keys', { character: '\\\\ea65' });\n\texport const keyboard = new Codicon('keyboard', { character: '\\\\ea65' });\n\texport const tag = new Codicon('tag', { character: '\\\\ea66' });\n\texport const tagAdd = new Codicon('tag-add', { character: '\\\\ea66' });\n\texport const tagRemove = new Codicon('tag-remove', { character: '\\\\ea66' });\n\texport const person = new Codicon('person', { character: '\\\\ea67' });\n\texport const personAdd = new Codicon('person-add', { character: '\\\\ea67' });\n\texport const personFollow = new Codicon('person-follow', { character: '\\\\ea67' });\n\texport const personOutline = new Codicon('person-outline', { character: '\\\\ea67' });\n\texport const personFilled = new Codicon('person-filled', { character: '\\\\ea67' });\n\texport const gitBranch = new Codicon('git-branch', { character: '\\\\ea68' });\n\texport const gitBranchCreate = new Codicon('git-branch-create', { character: '\\\\ea68' });\n\texport const gitBranchDelete = new Codicon('git-branch-delete', { character: '\\\\ea68' });\n\texport const sourceControl = new Codicon('source-control', { character: '\\\\ea68' });\n\texport const mirror = new Codicon('mirror', { character: '\\\\ea69' });\n\texport const mirrorPublic = new Codicon('mirror-public', { character: '\\\\ea69' });\n\texport const star = new Codicon('star', { character: '\\\\ea6a' });\n\texport const starAdd = new Codicon('star-add', { character: '\\\\ea6a' });\n\texport const starDelete = new Codicon('star-delete', { character: '\\\\ea6a' });\n\texport const starEmpty = new Codicon('star-empty', { character: '\\\\ea6a' });\n\texport const comment = new Codicon('comment', { character: '\\\\ea6b' });\n\texport const commentAdd = new Codicon('comment-add', { character: '\\\\ea6b' });\n\texport const alert = new Codicon('alert', { character: '\\\\ea6c' });\n\texport const warning = new Codicon('warning', { character: '\\\\ea6c' });\n\texport const search = new Codicon('search', { character: '\\\\ea6d' });\n\texport const searchSave = new Codicon('search-save', { character: '\\\\ea6d' });\n\texport const logOut = new Codicon('log-out', { character: '\\\\ea6e' });\n\texport const signOut = new Codicon('sign-out', { character: '\\\\ea6e' });\n\texport const logIn = new Codicon('log-in', { character: '\\\\ea6f' });\n\texport const signIn = new Codicon('sign-in', { character: '\\\\ea6f' });\n\texport const eye = new Codicon('eye', { character: '\\\\ea70' });\n\texport const eyeUnwatch = new Codicon('eye-unwatch', { character: '\\\\ea70' });\n\texport const eyeWatch = new Codicon('eye-watch', { character: '\\\\ea70' });\n\texport const circleFilled = new Codicon('circle-filled', { character: '\\\\ea71' });\n\texport const primitiveDot = new Codicon('primitive-dot', { character: '\\\\ea71' });\n\texport const closeDirty = new Codicon('close-dirty', { character: '\\\\ea71' });\n\texport const debugBreakpoint = new Codicon('debug-breakpoint', { character: '\\\\ea71' });\n\texport const debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { character: '\\\\ea71' });\n\texport const debugHint = new Codicon('debug-hint', { character: '\\\\ea71' });\n\texport const primitiveSquare = new Codicon('primitive-square', { character: '\\\\ea72' });\n\texport const edit = new Codicon('edit', { character: '\\\\ea73' });\n\texport const pencil = new Codicon('pencil', { character: '\\\\ea73' });\n\texport const info = new Codicon('info', { character: '\\\\ea74' });\n\texport const issueOpened = new Codicon('issue-opened', { character: '\\\\ea74' });\n\texport const gistPrivate = new Codicon('gist-private', { character: '\\\\ea75' });\n\texport const gitForkPrivate = new Codicon('git-fork-private', { character: '\\\\ea75' });\n\texport const lock = new Codicon('lock', { character: '\\\\ea75' });\n\texport const mirrorPrivate = new Codicon('mirror-private', { character: '\\\\ea75' });\n\texport const close = new Codicon('close', { character: '\\\\ea76' });\n\texport const removeClose = new Codicon('remove-close', { character: '\\\\ea76' });\n\texport const x = new Codicon('x', { character: '\\\\ea76' });\n\texport const repoSync = new Codicon('repo-sync', { character: '\\\\ea77' });\n\texport const sync = new Codicon('sync', { character: '\\\\ea77' });\n\texport const clone = new Codicon('clone', { character: '\\\\ea78' });\n\texport const desktopDownload = new Codicon('desktop-download', { character: '\\\\ea78' });\n\texport const beaker = new Codicon('beaker', { character: '\\\\ea79' });\n\texport const microscope = new Codicon('microscope', { character: '\\\\ea79' });\n\texport const vm = new Codicon('vm', { character: '\\\\ea7a' });\n\texport const deviceDesktop = new Codicon('device-desktop', { character: '\\\\ea7a' });\n\texport const file = new Codicon('file', { character: '\\\\ea7b' });\n\texport const fileText = new Codicon('file-text', { character: '\\\\ea7b' });\n\texport const more = new Codicon('more', { character: '\\\\ea7c' });\n\texport const ellipsis = new Codicon('ellipsis', { character: '\\\\ea7c' });\n\texport const kebabHorizontal = new Codicon('kebab-horizontal', { character: '\\\\ea7c' });\n\texport const mailReply = new Codicon('mail-reply', { character: '\\\\ea7d' });\n\texport const reply = new Codicon('reply', { character: '\\\\ea7d' });\n\texport const organization = new Codicon('organization', { character: '\\\\ea7e' });\n\texport const organizationFilled = new Codicon('organization-filled', { character: '\\\\ea7e' });\n\texport const organizationOutline = new Codicon('organization-outline', { character: '\\\\ea7e' });\n\texport const newFile = new Codicon('new-file', { character: '\\\\ea7f' });\n\texport const fileAdd = new Codicon('file-add', { character: '\\\\ea7f' });\n\texport const newFolder = new Codicon('new-folder', { character: '\\\\ea80' });\n\texport const fileDirectoryCreate = new Codicon('file-directory-create', { character: '\\\\ea80' });\n\texport const trash = new Codicon('trash', { character: '\\\\ea81' });\n\texport const trashcan = new Codicon('trashcan', { character: '\\\\ea81' });\n\texport const history = new Codicon('history', { character: '\\\\ea82' });\n\texport const clock = new Codicon('clock', { character: '\\\\ea82' });\n\texport const folder = new Codicon('folder', { character: '\\\\ea83' });\n\texport const fileDirectory = new Codicon('file-directory', { character: '\\\\ea83' });\n\texport const symbolFolder = new Codicon('symbol-folder', { character: '\\\\ea83' });\n\texport const logoGithub = new Codicon('logo-github', { character: '\\\\ea84' });\n\texport const markGithub = new Codicon('mark-github', { character: '\\\\ea84' });\n\texport const github = new Codicon('github', { character: '\\\\ea84' });\n\texport const terminal = new Codicon('terminal', { character: '\\\\ea85' });\n\texport const console = new Codicon('console', { character: '\\\\ea85' });\n\texport const repl = new Codicon('repl', { character: '\\\\ea85' });\n\texport const zap = new Codicon('zap', { character: '\\\\ea86' });\n\texport const symbolEvent = new Codicon('symbol-event', { character: '\\\\ea86' });\n\texport const error = new Codicon('error', { character: '\\\\ea87' });\n\texport const stop = new Codicon('stop', { character: '\\\\ea87' });\n\texport const variable = new Codicon('variable', { character: '\\\\ea88' });\n\texport const symbolVariable = new Codicon('symbol-variable', { character: '\\\\ea88' });\n\texport const array = new Codicon('array', { character: '\\\\ea8a' });\n\texport const symbolArray = new Codicon('symbol-array', { character: '\\\\ea8a' });\n\texport const symbolModule = new Codicon('symbol-module', { character: '\\\\ea8b' });\n\texport const symbolPackage = new Codicon('symbol-package', { character: '\\\\ea8b' });\n\texport const symbolNamespace = new Codicon('symbol-namespace', { character: '\\\\ea8b' });\n\texport const symbolObject = new Codicon('symbol-object', { character: '\\\\ea8b' });\n\texport const symbolMethod = new Codicon('symbol-method', { character: '\\\\ea8c' });\n\texport const symbolFunction = new Codicon('symbol-function', { character: '\\\\ea8c' });\n\texport const symbolConstructor = new Codicon('symbol-constructor', { character: '\\\\ea8c' });\n\texport const symbolBoolean = new Codicon('symbol-boolean', { character: '\\\\ea8f' });\n\texport const symbolNull = new Codicon('symbol-null', { character: '\\\\ea8f' });\n\texport const symbolNumeric = new Codicon('symbol-numeric', { character: '\\\\ea90' });\n\texport const symbolNumber = new Codicon('symbol-number', { character: '\\\\ea90' });\n\texport const symbolStructure = new Codicon('symbol-structure', { character: '\\\\ea91' });\n\texport const symbolStruct = new Codicon('symbol-struct', { character: '\\\\ea91' });\n\texport const symbolParameter = new Codicon('symbol-parameter', { character: '\\\\ea92' });\n\texport const symbolTypeParameter = new Codicon('symbol-type-parameter', { character: '\\\\ea92' });\n\texport const symbolKey = new Codicon('symbol-key', { character: '\\\\ea93' });\n\texport const symbolText = new Codicon('symbol-text', { character: '\\\\ea93' });\n\texport const symbolReference = new Codicon('symbol-reference', { character: '\\\\ea94' });\n\texport const goToFile = new Codicon('go-to-file', { character: '\\\\ea94' });\n\texport const symbolEnum = new Codicon('symbol-enum', { character: '\\\\ea95' });\n\texport const symbolValue = new Codicon('symbol-value', { character: '\\\\ea95' });\n\texport const symbolRuler = new Codicon('symbol-ruler', { character: '\\\\ea96' });\n\texport const symbolUnit = new Codicon('symbol-unit', { character: '\\\\ea96' });\n\texport const activateBreakpoints = new Codicon('activate-breakpoints', { character: '\\\\ea97' });\n\texport const archive = new Codicon('archive', { character: '\\\\ea98' });\n\texport const arrowBoth = new Codicon('arrow-both', { character: '\\\\ea99' });\n\texport const arrowDown = new Codicon('arrow-down', { character: '\\\\ea9a' });\n\texport const arrowLeft = new Codicon('arrow-left', { character: '\\\\ea9b' });\n\texport const arrowRight = new Codicon('arrow-right', { character: '\\\\ea9c' });\n\texport const arrowSmallDown = new Codicon('arrow-small-down', { character: '\\\\ea9d' });\n\texport const arrowSmallLeft = new Codicon('arrow-small-left', { character: '\\\\ea9e' });\n\texport const arrowSmallRight = new Codicon('arrow-small-right', { character: '\\\\ea9f' });\n\texport const arrowSmallUp = new Codicon('arrow-small-up', { character: '\\\\eaa0' });\n\texport const arrowUp = new Codicon('arrow-up', { character: '\\\\eaa1' });\n\texport const bell = new Codicon('bell', { character: '\\\\eaa2' });\n\texport const bold = new Codicon('bold', { character: '\\\\eaa3' });\n\texport const book = new Codicon('book', { character: '\\\\eaa4' });\n\texport const bookmark = new Codicon('bookmark', { character: '\\\\eaa5' });\n\texport const debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { character: '\\\\eaa6' });\n\texport const debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { character: '\\\\eaa7' });\n\texport const debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { character: '\\\\eaa7' });\n\texport const debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { character: '\\\\eaa8' });\n\texport const debugBreakpointData = new Codicon('debug-breakpoint-data', { character: '\\\\eaa9' });\n\texport const debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { character: '\\\\eaa9' });\n\texport const debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { character: '\\\\eaaa' });\n\texport const debugBreakpointLog = new Codicon('debug-breakpoint-log', { character: '\\\\eaab' });\n\texport const debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { character: '\\\\eaab' });\n\texport const briefcase = new Codicon('briefcase', { character: '\\\\eaac' });\n\texport const broadcast = new Codicon('broadcast', { character: '\\\\eaad' });\n\texport const browser = new Codicon('browser', { character: '\\\\eaae' });\n\texport const bug = new Codicon('bug', { character: '\\\\eaaf' });\n\texport const calendar = new Codicon('calendar', { character: '\\\\eab0' });\n\texport const caseSensitive = new Codicon('case-sensitive', { character: '\\\\eab1' });\n\texport const check = new Codicon('check', { character: '\\\\eab2' });\n\texport const checklist = new Codicon('checklist', { character: '\\\\eab3' });\n\texport const chevronDown = new Codicon('chevron-down', { character: '\\\\eab4' });\n\texport const chevronLeft = new Codicon('chevron-left', { character: '\\\\eab5' });\n\texport const chevronRight = new Codicon('chevron-right', { character: '\\\\eab6' });\n\texport const chevronUp = new Codicon('chevron-up', { character: '\\\\eab7' });\n\texport const chromeClose = new Codicon('chrome-close', { character: '\\\\eab8' });\n\texport const chromeMaximize = new Codicon('chrome-maximize', { character: '\\\\eab9' });\n\texport const chromeMinimize = new Codicon('chrome-minimize', { character: '\\\\eaba' });\n\texport const chromeRestore = new Codicon('chrome-restore', { character: '\\\\eabb' });\n\texport const circleOutline = new Codicon('circle-outline', { character: '\\\\eabc' });\n\texport const debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { character: '\\\\eabc' });\n\texport const circleSlash = new Codicon('circle-slash', { character: '\\\\eabd' });\n\texport const circuitBoard = new Codicon('circuit-board', { character: '\\\\eabe' });\n\texport const clearAll = new Codicon('clear-all', { character: '\\\\eabf' });\n\texport const clippy = new Codicon('clippy', { character: '\\\\eac0' });\n\texport const closeAll = new Codicon('close-all', { character: '\\\\eac1' });\n\texport const cloudDownload = new Codicon('cloud-download', { character: '\\\\eac2' });\n\texport const cloudUpload = new Codicon('cloud-upload', { character: '\\\\eac3' });\n\texport const code = new Codicon('code', { character: '\\\\eac4' });\n\texport const collapseAll = new Codicon('collapse-all', { character: '\\\\eac5' });\n\texport const colorMode = new Codicon('color-mode', { character: '\\\\eac6' });\n\texport const commentDiscussion = new Codicon('comment-discussion', { character: '\\\\eac7' });\n\texport const compareChanges = new Codicon('compare-changes', { character: '\\\\eafd' });\n\texport const creditCard = new Codicon('credit-card', { character: '\\\\eac9' });\n\texport const dash = new Codicon('dash', { character: '\\\\eacc' });\n\texport const dashboard = new Codicon('dashboard', { character: '\\\\eacd' });\n\texport const database = new Codicon('database', { character: '\\\\eace' });\n\texport const debugContinue = new Codicon('debug-continue', { character: '\\\\eacf' });\n\texport const debugDisconnect = new Codicon('debug-disconnect', { character: '\\\\ead0' });\n\texport const debugPause = new Codicon('debug-pause', { character: '\\\\ead1' });\n\texport const debugRestart = new Codicon('debug-restart', { character: '\\\\ead2' });\n\texport const debugStart = new Codicon('debug-start', { character: '\\\\ead3' });\n\texport const debugStepInto = new Codicon('debug-step-into', { character: '\\\\ead4' });\n\texport const debugStepOut = new Codicon('debug-step-out', { character: '\\\\ead5' });\n\texport const debugStepOver = new Codicon('debug-step-over', { character: '\\\\ead6' });\n\texport const debugStop = new Codicon('debug-stop', { character: '\\\\ead7' });\n\texport const debug = new Codicon('debug', { character: '\\\\ead8' });\n\texport const deviceCameraVideo = new Codicon('device-camera-video', { character: '\\\\ead9' });\n\texport const deviceCamera = new Codicon('device-camera', { character: '\\\\eada' });\n\texport const deviceMobile = new Codicon('device-mobile', { character: '\\\\eadb' });\n\texport const diffAdded = new Codicon('diff-added', { character: '\\\\eadc' });\n\texport const diffIgnored = new Codicon('diff-ignored', { character: '\\\\eadd' });\n\texport const diffModified = new Codicon('diff-modified', { character: '\\\\eade' });\n\texport const diffRemoved = new Codicon('diff-removed', { character: '\\\\eadf' });\n\texport const diffRenamed = new Codicon('diff-renamed', { character: '\\\\eae0' });\n\texport const diff = new Codicon('diff', { character: '\\\\eae1' });\n\texport const discard = new Codicon('discard', { character: '\\\\eae2' });\n\texport const editorLayout = new Codicon('editor-layout', { character: '\\\\eae3' });\n\texport const emptyWindow = new Codicon('empty-window', { character: '\\\\eae4' });\n\texport const exclude = new Codicon('exclude', { character: '\\\\eae5' });\n\texport const extensions = new Codicon('extensions', { character: '\\\\eae6' });\n\texport const eyeClosed = new Codicon('eye-closed', { character: '\\\\eae7' });\n\texport const fileBinary = new Codicon('file-binary', { character: '\\\\eae8' });\n\texport const fileCode = new Codicon('file-code', { character: '\\\\eae9' });\n\texport const fileMedia = new Codicon('file-media', { character: '\\\\eaea' });\n\texport const filePdf = new Codicon('file-pdf', { character: '\\\\eaeb' });\n\texport const fileSubmodule = new Codicon('file-submodule', { character: '\\\\eaec' });\n\texport const fileSymlinkDirectory = new Codicon('file-symlink-directory', { character: '\\\\eaed' });\n\texport const fileSymlinkFile = new Codicon('file-symlink-file', { character: '\\\\eaee' });\n\texport const fileZip = new Codicon('file-zip', { character: '\\\\eaef' });\n\texport const files = new Codicon('files', { character: '\\\\eaf0' });\n\texport const filter = new Codicon('filter', { character: '\\\\eaf1' });\n\texport const flame = new Codicon('flame', { character: '\\\\eaf2' });\n\texport const foldDown = new Codicon('fold-down', { character: '\\\\eaf3' });\n\texport const foldUp = new Codicon('fold-up', { character: '\\\\eaf4' });\n\texport const fold = new Codicon('fold', { character: '\\\\eaf5' });\n\texport const folderActive = new Codicon('folder-active', { character: '\\\\eaf6' });\n\texport const folderOpened = new Codicon('folder-opened', { character: '\\\\eaf7' });\n\texport const gear = new Codicon('gear', { character: '\\\\eaf8' });\n\texport const gift = new Codicon('gift', { character: '\\\\eaf9' });\n\texport const gistSecret = new Codicon('gist-secret', { character: '\\\\eafa' });\n\texport const gist = new Codicon('gist', { character: '\\\\eafb' });\n\texport const gitCommit = new Codicon('git-commit', { character: '\\\\eafc' });\n\texport const gitCompare = new Codicon('git-compare', { character: '\\\\eafd' });\n\texport const gitMerge = new Codicon('git-merge', { character: '\\\\eafe' });\n\texport const githubAction = new Codicon('github-action', { character: '\\\\eaff' });\n\texport const githubAlt = new Codicon('github-alt', { character: '\\\\eb00' });\n\texport const globe = new Codicon('globe', { character: '\\\\eb01' });\n\texport const grabber = new Codicon('grabber', { character: '\\\\eb02' });\n\texport const graph = new Codicon('graph', { character: '\\\\eb03' });\n\texport const gripper = new Codicon('gripper', { character: '\\\\eb04' });\n\texport const heart = new Codicon('heart', { character: '\\\\eb05' });\n\texport const home = new Codicon('home', { character: '\\\\eb06' });\n\texport const horizontalRule = new Codicon('horizontal-rule', { character: '\\\\eb07' });\n\texport const hubot = new Codicon('hubot', { character: '\\\\eb08' });\n\texport const inbox = new Codicon('inbox', { character: '\\\\eb09' });\n\texport const issueClosed = new Codicon('issue-closed', { character: '\\\\eb0a' });\n\texport const issueReopened = new Codicon('issue-reopened', { character: '\\\\eb0b' });\n\texport const issues = new Codicon('issues', { character: '\\\\eb0c' });\n\texport const italic = new Codicon('italic', { character: '\\\\eb0d' });\n\texport const jersey = new Codicon('jersey', { character: '\\\\eb0e' });\n\texport const json = new Codicon('json', { character: '\\\\eb0f' });\n\texport const kebabVertical = new Codicon('kebab-vertical', { character: '\\\\eb10' });\n\texport const key = new Codicon('key', { character: '\\\\eb11' });\n\texport const law = new Codicon('law', { character: '\\\\eb12' });\n\texport const lightbulbAutofix = new Codicon('lightbulb-autofix', { character: '\\\\eb13' });\n\texport const linkExternal = new Codicon('link-external', { character: '\\\\eb14' });\n\texport const link = new Codicon('link', { character: '\\\\eb15' });\n\texport const listOrdered = new Codicon('list-ordered', { character: '\\\\eb16' });\n\texport const listUnordered = new Codicon('list-unordered', { character: '\\\\eb17' });\n\texport const liveShare = new Codicon('live-share', { character: '\\\\eb18' });\n\texport const loading = new Codicon('loading', { character: '\\\\eb19' });\n\texport const location = new Codicon('location', { character: '\\\\eb1a' });\n\texport const mailRead = new Codicon('mail-read', { character: '\\\\eb1b' });\n\texport const mail = new Codicon('mail', { character: '\\\\eb1c' });\n\texport const markdown = new Codicon('markdown', { character: '\\\\eb1d' });\n\texport const megaphone = new Codicon('megaphone', { character: '\\\\eb1e' });\n\texport const mention = new Codicon('mention', { character: '\\\\eb1f' });\n\texport const milestone = new Codicon('milestone', { character: '\\\\eb20' });\n\texport const mortarBoard = new Codicon('mortar-board', { character: '\\\\eb21' });\n\texport const move = new Codicon('move', { character: '\\\\eb22' });\n\texport const multipleWindows = new Codicon('multiple-windows', { character: '\\\\eb23' });\n\texport const mute = new Codicon('mute', { character: '\\\\eb24' });\n\texport const noNewline = new Codicon('no-newline', { character: '\\\\eb25' });\n\texport const note = new Codicon('note', { character: '\\\\eb26' });\n\texport const octoface = new Codicon('octoface', { character: '\\\\eb27' });\n\texport const openPreview = new Codicon('open-preview', { character: '\\\\eb28' });\n\texport const package_ = new Codicon('package', { character: '\\\\eb29' });\n\texport const paintcan = new Codicon('paintcan', { character: '\\\\eb2a' });\n\texport const pin = new Codicon('pin', { character: '\\\\eb2b' });\n\texport const play = new Codicon('play', { character: '\\\\eb2c' });\n\texport const run = new Codicon('run', { character: '\\\\eb2c' });\n\texport const plug = new Codicon('plug', { character: '\\\\eb2d' });\n\texport const preserveCase = new Codicon('preserve-case', { character: '\\\\eb2e' });\n\texport const preview = new Codicon('preview', { character: '\\\\eb2f' });\n\texport const project = new Codicon('project', { character: '\\\\eb30' });\n\texport const pulse = new Codicon('pulse', { character: '\\\\eb31' });\n\texport const question = new Codicon('question', { character: '\\\\eb32' });\n\texport const quote = new Codicon('quote', { character: '\\\\eb33' });\n\texport const radioTower = new Codicon('radio-tower', { character: '\\\\eb34' });\n\texport const reactions = new Codicon('reactions', { character: '\\\\eb35' });\n\texport const references = new Codicon('references', { character: '\\\\eb36' });\n\texport const refresh = new Codicon('refresh', { character: '\\\\eb37' });\n\texport const regex = new Codicon('regex', { character: '\\\\eb38' });\n\texport const remoteExplorer = new Codicon('remote-explorer', { character: '\\\\eb39' });\n\texport const remote = new Codicon('remote', { character: '\\\\eb3a' });\n\texport const remove = new Codicon('remove', { character: '\\\\eb3b' });\n\texport const replaceAll = new Codicon('replace-all', { character: '\\\\eb3c' });\n\texport const replace = new Codicon('replace', { character: '\\\\eb3d' });\n\texport const repoClone = new Codicon('repo-clone', { character: '\\\\eb3e' });\n\texport const repoForcePush = new Codicon('repo-force-push', { character: '\\\\eb3f' });\n\texport const repoPull = new Codicon('repo-pull', { character: '\\\\eb40' });\n\texport const repoPush = new Codicon('repo-push', { character: '\\\\eb41' });\n\texport const report = new Codicon('report', { character: '\\\\eb42' });\n\texport const requestChanges = new Codicon('request-changes', { character: '\\\\eb43' });\n\texport const rocket = new Codicon('rocket', { character: '\\\\eb44' });\n\texport const rootFolderOpened = new Codicon('root-folder-opened', { character: '\\\\eb45' });\n\texport const rootFolder = new Codicon('root-folder', { character: '\\\\eb46' });\n\texport const rss = new Codicon('rss', { character: '\\\\eb47' });\n\texport const ruby = new Codicon('ruby', { character: '\\\\eb48' });\n\texport const saveAll = new Codicon('save-all', { character: '\\\\eb49' });\n\texport const saveAs = new Codicon('save-as', { character: '\\\\eb4a' });\n\texport const save = new Codicon('save', { character: '\\\\eb4b' });\n\texport const screenFull = new Codicon('screen-full', { character: '\\\\eb4c' });\n\texport const screenNormal = new Codicon('screen-normal', { character: '\\\\eb4d' });\n\texport const searchStop = new Codicon('search-stop', { character: '\\\\eb4e' });\n\texport const server = new Codicon('server', { character: '\\\\eb50' });\n\texport const settingsGear = new Codicon('settings-gear', { character: '\\\\eb51' });\n\texport const settings = new Codicon('settings', { character: '\\\\eb52' });\n\texport const shield = new Codicon('shield', { character: '\\\\eb53' });\n\texport const smiley = new Codicon('smiley', { character: '\\\\eb54' });\n\texport const sortPrecedence = new Codicon('sort-precedence', { character: '\\\\eb55' });\n\texport const splitHorizontal = new Codicon('split-horizontal', { character: '\\\\eb56' });\n\texport const splitVertical = new Codicon('split-vertical', { character: '\\\\eb57' });\n\texport const squirrel = new Codicon('squirrel', { character: '\\\\eb58' });\n\texport const starFull = new Codicon('star-full', { character: '\\\\eb59' });\n\texport const starHalf = new Codicon('star-half', { character: '\\\\eb5a' });\n\texport const symbolClass = new Codicon('symbol-class', { character: '\\\\eb5b' });\n\texport const symbolColor = new Codicon('symbol-color', { character: '\\\\eb5c' });\n\texport const symbolConstant = new Codicon('symbol-constant', { character: '\\\\eb5d' });\n\texport const symbolEnumMember = new Codicon('symbol-enum-member', { character: '\\\\eb5e' });\n\texport const symbolField = new Codicon('symbol-field', { character: '\\\\eb5f' });\n\texport const symbolFile = new Codicon('symbol-file', { character: '\\\\eb60' });\n\texport const symbolInterface = new Codicon('symbol-interface', { character: '\\\\eb61' });\n\texport const symbolKeyword = new Codicon('symbol-keyword', { character: '\\\\eb62' });\n\texport const symbolMisc = new Codicon('symbol-misc', { character: '\\\\eb63' });\n\texport const symbolOperator = new Codicon('symbol-operator', { character: '\\\\eb64' });\n\texport const symbolProperty = new Codicon('symbol-property', { character: '\\\\eb65' });\n\texport const wrench = new Codicon('wrench', { character: '\\\\eb65' });\n\texport const wrenchSubaction = new Codicon('wrench-subaction', { character: '\\\\eb65' });\n\texport const symbolSnippet = new Codicon('symbol-snippet', { character: '\\\\eb66' });\n\texport const tasklist = new Codicon('tasklist', { character: '\\\\eb67' });\n\texport const telescope = new Codicon('telescope', { character: '\\\\eb68' });\n\texport const textSize = new Codicon('text-size', { character: '\\\\eb69' });\n\texport const threeBars = new Codicon('three-bars', { character: '\\\\eb6a' });\n\texport const thumbsdown = new Codicon('thumbsdown', { character: '\\\\eb6b' });\n\texport const thumbsup = new Codicon('thumbsup', { character: '\\\\eb6c' });\n\texport const tools = new Codicon('tools', { character: '\\\\eb6d' });\n\texport const triangleDown = new Codicon('triangle-down', { character: '\\\\eb6e' });\n\texport const triangleLeft = new Codicon('triangle-left', { character: '\\\\eb6f' });\n\texport const triangleRight = new Codicon('triangle-right', { character: '\\\\eb70' });\n\texport const triangleUp = new Codicon('triangle-up', { character: '\\\\eb71' });\n\texport const twitter = new Codicon('twitter', { character: '\\\\eb72' });\n\texport const unfold = new Codicon('unfold', { character: '\\\\eb73' });\n\texport const unlock = new Codicon('unlock', { character: '\\\\eb74' });\n\texport const unmute = new Codicon('unmute', { character: '\\\\eb75' });\n\texport const unverified = new Codicon('unverified', { character: '\\\\eb76' });\n\texport const verified = new Codicon('verified', { character: '\\\\eb77' });\n\texport const versions = new Codicon('versions', { character: '\\\\eb78' });\n\texport const vmActive = new Codicon('vm-active', { character: '\\\\eb79' });\n\texport const vmOutline = new Codicon('vm-outline', { character: '\\\\eb7a' });\n\texport const vmRunning = new Codicon('vm-running', { character: '\\\\eb7b' });\n\texport const watch = new Codicon('watch', { character: '\\\\eb7c' });\n\texport const whitespace = new Codicon('whitespace', { character: '\\\\eb7d' });\n\texport const wholeWord = new Codicon('whole-word', { character: '\\\\eb7e' });\n\texport const window = new Codicon('window', { character: '\\\\eb7f' });\n\texport const wordWrap = new Codicon('word-wrap', { character: '\\\\eb80' });\n\texport const zoomIn = new Codicon('zoom-in', { character: '\\\\eb81' });\n\texport const zoomOut = new Codicon('zoom-out', { character: '\\\\eb82' });\n\texport const listFilter = new Codicon('list-filter', { character: '\\\\eb83' });\n\texport const listFlat = new Codicon('list-flat', { character: '\\\\eb84' });\n\texport const listSelection = new Codicon('list-selection', { character: '\\\\eb85' });\n\texport const selection = new Codicon('selection', { character: '\\\\eb85' });\n\texport const listTree = new Codicon('list-tree', { character: '\\\\eb86' });\n\texport const debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { character: '\\\\eb87' });\n\texport const debugBreakpointFunction = new Codicon('debug-breakpoint-function', { character: '\\\\eb88' });\n\texport const debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { character: '\\\\eb88' });\n\texport const debugStackframeActive = new Codicon('debug-stackframe-active', { character: '\\\\eb89' });\n\texport const debugStackframeDot = new Codicon('debug-stackframe-dot', { character: '\\\\eb8a' });\n\texport const debugStackframe = new Codicon('debug-stackframe', { character: '\\\\eb8b' });\n\texport const debugStackframeFocused = new Codicon('debug-stackframe-focused', { character: '\\\\eb8b' });\n\texport const debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { character: '\\\\eb8c' });\n\texport const symbolString = new Codicon('symbol-string', { character: '\\\\eb8d' });\n\texport const debugReverseContinue = new Codicon('debug-reverse-continue', { character: '\\\\eb8e' });\n\texport const debugStepBack = new Codicon('debug-step-back', { character: '\\\\eb8f' });\n\texport const debugRestartFrame = new Codicon('debug-restart-frame', { character: '\\\\eb90' });\n\texport const callIncoming = new Codicon('call-incoming', { character: '\\\\eb92' });\n\texport const callOutgoing = new Codicon('call-outgoing', { character: '\\\\eb93' });\n\texport const menu = new Codicon('menu', { character: '\\\\eb94' });\n\texport const expandAll = new Codicon('expand-all', { character: '\\\\eb95' });\n\texport const feedback = new Codicon('feedback', { character: '\\\\eb96' });\n\texport const groupByRefType = new Codicon('group-by-ref-type', { character: '\\\\eb97' });\n\texport const ungroupByRefType = new Codicon('ungroup-by-ref-type', { character: '\\\\eb98' });\n\texport const account = new Codicon('account', { character: '\\\\eb99' });\n\texport const bellDot = new Codicon('bell-dot', { character: '\\\\eb9a' });\n\texport const debugConsole = new Codicon('debug-console', { character: '\\\\eb9b' });\n\texport const library = new Codicon('library', { character: '\\\\eb9c' });\n\texport const output = new Codicon('output', { character: '\\\\eb9d' });\n\texport const runAll = new Codicon('run-all', { character: '\\\\eb9e' });\n\texport const syncIgnored = new Codicon('sync-ignored', { character: '\\\\eb9f' });\n\texport const pinned = new Codicon('pinned', { character: '\\\\eba0' });\n\texport const githubInverted = new Codicon('github-inverted', { character: '\\\\eba1' });\n\texport const debugAlt = new Codicon('debug-alt', { character: '\\\\eb91' });\n\texport const serverProcess = new Codicon('server-process', { character: '\\\\eba2' });\n\texport const serverEnvironment = new Codicon('server-environment', { character: '\\\\eba3' });\n\texport const pass = new Codicon('pass', { character: '\\\\eba4' });\n\texport const stopCircle = new Codicon('stop-circle', { character: '\\\\eba5' });\n\texport const playCircle = new Codicon('play-circle', { character: '\\\\eba6' });\n\texport const record = new Codicon('record', { character: '\\\\eba7' });\n\texport const debugAltSmall = new Codicon('debug-alt-small', { character: '\\\\eba8' });\n\texport const vmConnect = new Codicon('vm-connect', { character: '\\\\eba9' });\n\texport const cloud = new Codicon('cloud', { character: '\\\\ebaa' });\n\texport const merge = new Codicon('merge', { character: '\\\\ebab' });\n\texport const exportIcon = new Codicon('export', { character: '\\\\ebac' });\n\texport const graphLeft = new Codicon('graph-left', { character: '\\\\ebad' });\n\texport const magnet = new Codicon('magnet', { character: '\\\\ebae' });\n\texport const notebook = new Codicon('notebook', { character: '\\\\ebaf' });\n\texport const redo = new Codicon('redo', { character: '\\\\ebb0' });\n\texport const checkAll = new Codicon('check-all', { character: '\\\\ebb1' });\n}\n\n\n\n\nconst escapeCodiconsRegex = /(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function escapeCodicons(text: string): string {\n\treturn text.replace(escapeCodiconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\n\nconst markdownEscapedCodiconsRegex = /\\\\\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)/gi;\nexport function markdownEscapeEscapedCodicons(text: string): string {\n\t// Need to add an extra \\ for escaping in markdown\n\treturn text.replace(markdownEscapedCodiconsRegex, match => `\\\\${match}`);\n}\n\nconst markdownUnescapeCodiconsRegex = /(\\\\)?\\$\\\\\\(([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?)\\\\\\)/gi;\nexport function markdownUnescapeCodicons(text: string): string {\n\treturn text.replace(markdownUnescapeCodiconsRegex, (match, escaped, codicon) => escaped ? match : `$(${codicon})`);\n}\n\nconst stripCodiconsRegex = /(\\s)?(\\\\)?\\$\\([a-z0-9\\-]+?(?:~[a-z0-9\\-]*?)?\\)(\\s)?/gi;\nexport function stripCodicons(text: string): string {\n\tif (text.indexOf(codiconStartMarker) === -1) {\n\t\treturn text;\n\t}\n\n\treturn text.replace(stripCodiconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toUint8 } from 'vs/base/common/uint';\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nexport class CharacterClassifier<T extends number> {\n\t/**\n\t * Maintain a compact (fully initialized ASCII map for quickly classifying ASCII characters - used more often in code).\n\t */\n\tprotected _asciiMap: Uint8Array;\n\n\t/**\n\t * The entire map (sparse array).\n\t */\n\tprotected _map: Map<number, number>;\n\n\tprotected _defaultValue: number;\n\n\tconstructor(_defaultValue: T) {\n\t\tlet defaultValue = toUint8(_defaultValue);\n\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n\t\tthis._map = new Map<number, number>();\n\t}\n\n\tprivate static _createAsciiMap(defaultValue: number): Uint8Array {\n\t\tlet asciiMap: Uint8Array = new Uint8Array(256);\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tasciiMap[i] = defaultValue;\n\t\t}\n\t\treturn asciiMap;\n\t}\n\n\tpublic set(charCode: number, _value: T): void {\n\t\tlet value = toUint8(_value);\n\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\tthis._asciiMap[charCode] = value;\n\t\t} else {\n\t\t\tthis._map.set(charCode, value);\n\t\t}\n\t}\n\n\tpublic get(charCode: number): T {\n\t\tif (charCode >= 0 && charCode < 256) {\n\t\t\treturn <T>this._asciiMap[charCode];\n\t\t} else {\n\t\t\treturn <T>(this._map.get(charCode) || this._defaultValue);\n\t\t}\n\t}\n}\n\nconst enum Boolean {\n\tFalse = 0,\n\tTrue = 1\n}\n\nexport class CharacterSet {\n\n\tprivate readonly _actual: CharacterClassifier<Boolean>;\n\n\tconstructor() {\n\t\tthis._actual = new CharacterClassifier<Boolean>(Boolean.False);\n\t}\n\n\tpublic add(charCode: number): void {\n\t\tthis._actual.set(charCode, Boolean.True);\n\t}\n\n\tpublic has(charCode: number): boolean {\n\t\treturn (this._actual.get(charCode) === Boolean.True);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { CharacterClassifier } from 'vs/editor/common/core/characterClassifier';\n\nexport const enum WordCharacterClass {\n\tRegular = 0,\n\tWhitespace = 1,\n\tWordSeparator = 2\n}\n\nexport class WordCharacterClassifier extends CharacterClassifier<WordCharacterClass> {\n\n\tconstructor(wordSeparators: string) {\n\t\tsuper(WordCharacterClass.Regular);\n\n\t\tfor (let i = 0, len = wordSeparators.length; i < len; i++) {\n\t\t\tthis.set(wordSeparators.charCodeAt(i), WordCharacterClass.WordSeparator);\n\t\t}\n\n\t\tthis.set(CharCode.Space, WordCharacterClass.Whitespace);\n\t\tthis.set(CharCode.Tab, WordCharacterClass.Whitespace);\n\t}\n\n}\n\nfunction once<R>(computeFn: (input: string) => R): (input: string) => R {\n\tlet cache: { [key: string]: R; } = {}; // TODO@Alex unbounded cache\n\treturn (input: string): R => {\n\t\tif (!cache.hasOwnProperty(input)) {\n\t\t\tcache[input] = computeFn(input);\n\t\t}\n\t\treturn cache[input];\n\t};\n}\n\nexport const getMapForWordSeparators = once<WordCharacterClassifier>(\n\t(input) => new WordCharacterClassifier(input)\n);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A position in the editor. This interface is suitable for serialization.\n */\nexport interface IPosition {\n\t/**\n\t * line number (starts at 1)\n\t */\n\treadonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\treadonly column: number;\n}\n\n/**\n * A position in the editor.\n */\nexport class Position {\n\t/**\n\t * line number (starts at 1)\n\t */\n\tpublic readonly lineNumber: number;\n\t/**\n\t * column (the first character in a line is between column 1 and column 2)\n\t */\n\tpublic readonly column: number;\n\n\tconstructor(lineNumber: number, column: number) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.column = column;\n\t}\n\n\t/**\n\t * Create a new position from this position.\n\t *\n\t * @param newLineNumber new line number\n\t * @param newColumn new column\n\t */\n\twith(newLineNumber: number = this.lineNumber, newColumn: number = this.column): Position {\n\t\tif (newLineNumber === this.lineNumber && newColumn === this.column) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn new Position(newLineNumber, newColumn);\n\t\t}\n\t}\n\n\t/**\n\t * Derive a new position from this position.\n\t *\n\t * @param deltaLineNumber line number delta\n\t * @param deltaColumn column delta\n\t */\n\tdelta(deltaLineNumber: number = 0, deltaColumn: number = 0): Position {\n\t\treturn this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n\t}\n\n\t/**\n\t * Test if this position equals other position\n\t */\n\tpublic equals(other: IPosition): boolean {\n\t\treturn Position.equals(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` equals position `b`\n\t */\n\tpublic static equals(a: IPosition | null, b: IPosition | null): boolean {\n\t\tif (!a && !b) {\n\t\t\treturn true;\n\t\t}\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.lineNumber === b.lineNumber &&\n\t\t\ta.column === b.column\n\t\t);\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic isBefore(other: IPosition): boolean {\n\t\treturn Position.isBefore(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be false.\n\t */\n\tpublic static isBefore(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column < b.column;\n\t}\n\n\t/**\n\t * Test if this position is before other position.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic isBeforeOrEqual(other: IPosition): boolean {\n\t\treturn Position.isBeforeOrEqual(this, other);\n\t}\n\n\t/**\n\t * Test if position `a` is before position `b`.\n\t * If the two positions are equal, the result will be true.\n\t */\n\tpublic static isBeforeOrEqual(a: IPosition, b: IPosition): boolean {\n\t\tif (a.lineNumber < b.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\tif (b.lineNumber < a.lineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\treturn a.column <= b.column;\n\t}\n\n\t/**\n\t * A function that compares positions, useful for sorting\n\t */\n\tpublic static compare(a: IPosition, b: IPosition): number {\n\t\tlet aLineNumber = a.lineNumber | 0;\n\t\tlet bLineNumber = b.lineNumber | 0;\n\n\t\tif (aLineNumber === bLineNumber) {\n\t\t\tlet aColumn = a.column | 0;\n\t\t\tlet bColumn = b.column | 0;\n\t\t\treturn aColumn - bColumn;\n\t\t}\n\n\t\treturn aLineNumber - bLineNumber;\n\t}\n\n\t/**\n\t * Clone this position.\n\t */\n\tpublic clone(): Position {\n\t\treturn new Position(this.lineNumber, this.column);\n\t}\n\n\t/**\n\t * Convert to a human-readable representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '(' + this.lineNumber + ',' + this.column + ')';\n\t}\n\n\t// ---\n\n\t/**\n\t * Create a `Position` from an `IPosition`.\n\t */\n\tpublic static lift(pos: IPosition): Position {\n\t\treturn new Position(pos.lineNumber, pos.column);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IPosition`.\n\t */\n\tpublic static isIPosition(obj: any): obj is IPosition {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.lineNumber === 'number')\n\t\t\t&& (typeof obj.column === 'number')\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPosition, Position } from 'vs/editor/common/core/position';\n\n/**\n * A range in the editor. This interface is suitable for serialization.\n */\nexport interface IRange {\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\treadonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\treadonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nexport class Range {\n\n\t/**\n\t * Line number on which the range starts (starts at 1).\n\t */\n\tpublic readonly startLineNumber: number;\n\t/**\n\t * Column on which the range starts in line `startLineNumber` (starts at 1).\n\t */\n\tpublic readonly startColumn: number;\n\t/**\n\t * Line number on which the range ends.\n\t */\n\tpublic readonly endLineNumber: number;\n\t/**\n\t * Column on which the range ends in line `endLineNumber`.\n\t */\n\tpublic readonly endColumn: number;\n\n\tconstructor(startLineNumber: number, startColumn: number, endLineNumber: number, endColumn: number) {\n\t\tif ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n\t\t\tthis.startLineNumber = endLineNumber;\n\t\t\tthis.startColumn = endColumn;\n\t\t\tthis.endLineNumber = startLineNumber;\n\t\t\tthis.endColumn = startColumn;\n\t\t} else {\n\t\t\tthis.startLineNumber = startLineNumber;\n\t\t\tthis.startColumn = startColumn;\n\t\t\tthis.endLineNumber = endLineNumber;\n\t\t\tthis.endColumn = endColumn;\n\t\t}\n\t}\n\n\t/**\n\t * Test if this range is empty.\n\t */\n\tpublic isEmpty(): boolean {\n\t\treturn Range.isEmpty(this);\n\t}\n\n\t/**\n\t * Test if `range` is empty.\n\t */\n\tpublic static isEmpty(range: IRange): boolean {\n\t\treturn (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n\t}\n\n\t/**\n\t * Test if position is in this range. If the position is at the edges, will return true.\n\t */\n\tpublic containsPosition(position: IPosition): boolean {\n\t\treturn Range.containsPosition(this, position);\n\t}\n\n\t/**\n\t * Test if `position` is in `range`. If the position is at the edges, will return true.\n\t */\n\tpublic static containsPosition(range: IRange, position: IPosition): boolean {\n\t\tif (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if range is in this range. If the range is equal to this range, will return true.\n\t */\n\tpublic containsRange(range: IRange): boolean {\n\t\treturn Range.containsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n\t */\n\tpublic static containsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if `range` is strictly in this range. `range` must start after and end before this range for the result to be true.\n\t */\n\tpublic strictContainsRange(range: IRange): boolean {\n\t\treturn Range.strictContainsRange(this, range);\n\t}\n\n\t/**\n\t * Test if `otherRange` is strinctly in `range` (must start after, and end before). If the ranges are equal, will return false.\n\t */\n\tpublic static strictContainsRange(range: IRange, otherRange: IRange): boolean {\n\t\tif (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n\t\t\treturn false;\n\t\t}\n\t\tif (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic plusRange(range: IRange): Range {\n\t\treturn Range.plusRange(this, range);\n\t}\n\n\t/**\n\t * A reunion of the two ranges.\n\t * The smallest position will be used as the start point, and the largest one as the end point.\n\t */\n\tpublic static plusRange(a: IRange, b: IRange): Range {\n\t\tlet startLineNumber: number;\n\t\tlet startColumn: number;\n\t\tlet endLineNumber: number;\n\t\tlet endColumn: number;\n\n\t\tif (b.startLineNumber < a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = b.startColumn;\n\t\t} else if (b.startLineNumber === a.startLineNumber) {\n\t\t\tstartLineNumber = b.startLineNumber;\n\t\t\tstartColumn = Math.min(b.startColumn, a.startColumn);\n\t\t} else {\n\t\t\tstartLineNumber = a.startLineNumber;\n\t\t\tstartColumn = a.startColumn;\n\t\t}\n\n\t\tif (b.endLineNumber > a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = b.endColumn;\n\t\t} else if (b.endLineNumber === a.endLineNumber) {\n\t\t\tendLineNumber = b.endLineNumber;\n\t\t\tendColumn = Math.max(b.endColumn, a.endColumn);\n\t\t} else {\n\t\t\tendLineNumber = a.endLineNumber;\n\t\t\tendColumn = a.endColumn;\n\t\t}\n\n\t\treturn new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic intersectRanges(range: IRange): Range | null {\n\t\treturn Range.intersectRanges(this, range);\n\t}\n\n\t/**\n\t * A intersection of the two ranges.\n\t */\n\tpublic static intersectRanges(a: IRange, b: IRange): Range | null {\n\t\tlet resultStartLineNumber = a.startLineNumber;\n\t\tlet resultStartColumn = a.startColumn;\n\t\tlet resultEndLineNumber = a.endLineNumber;\n\t\tlet resultEndColumn = a.endColumn;\n\t\tlet otherStartLineNumber = b.startLineNumber;\n\t\tlet otherStartColumn = b.startColumn;\n\t\tlet otherEndLineNumber = b.endLineNumber;\n\t\tlet otherEndColumn = b.endColumn;\n\n\t\tif (resultStartLineNumber < otherStartLineNumber) {\n\t\t\tresultStartLineNumber = otherStartLineNumber;\n\t\t\tresultStartColumn = otherStartColumn;\n\t\t} else if (resultStartLineNumber === otherStartLineNumber) {\n\t\t\tresultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n\t\t}\n\n\t\tif (resultEndLineNumber > otherEndLineNumber) {\n\t\t\tresultEndLineNumber = otherEndLineNumber;\n\t\t\tresultEndColumn = otherEndColumn;\n\t\t} else if (resultEndLineNumber === otherEndLineNumber) {\n\t\t\tresultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n\t\t}\n\n\t\t// Check if selection is now empty\n\t\tif (resultStartLineNumber > resultEndLineNumber) {\n\t\t\treturn null;\n\t\t}\n\t\tif (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n\t}\n\n\t/**\n\t * Test if this range equals other.\n\t */\n\tpublic equalsRange(other: IRange | null): boolean {\n\t\treturn Range.equalsRange(this, other);\n\t}\n\n\t/**\n\t * Test if range `a` equals `b`.\n\t */\n\tpublic static equalsRange(a: IRange | null, b: IRange | null): boolean {\n\t\treturn (\n\t\t\t!!a &&\n\t\t\t!!b &&\n\t\t\ta.startLineNumber === b.startLineNumber &&\n\t\t\ta.startColumn === b.startColumn &&\n\t\t\ta.endLineNumber === b.endLineNumber &&\n\t\t\ta.endColumn === b.endColumn\n\t\t);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic getEndPosition(): Position {\n\t\treturn Range.getEndPosition(this);\n\t}\n\n\t/**\n\t * Return the end position (which will be after or equal to the start position)\n\t */\n\tpublic static getEndPosition(range: IRange): Position {\n\t\treturn new Position(range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic getStartPosition(): Position {\n\t\treturn Range.getStartPosition(this);\n\t}\n\n\t/**\n\t * Return the start position (which will be before or equal to the end position)\n\t */\n\tpublic static getStartPosition(range: IRange): Position {\n\t\treturn new Position(range.startLineNumber, range.startColumn);\n\t}\n\n\t/**\n\t * Transform to a user presentable string representation.\n\t */\n\tpublic toString(): string {\n\t\treturn '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n\t}\n\n\t/**\n\t * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n\t */\n\tpublic setEndPosition(endLineNumber: number, endColumn: number): Range {\n\t\treturn new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n\t}\n\n\t/**\n\t * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n\t */\n\tpublic setStartPosition(startLineNumber: number, startColumn: number): Range {\n\t\treturn new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic collapseToStart(): Range {\n\t\treturn Range.collapseToStart(this);\n\t}\n\n\t/**\n\t * Create a new empty range using this range's start position.\n\t */\n\tpublic static collapseToStart(range: IRange): Range {\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n\t}\n\n\t// ---\n\n\tpublic static fromPositions(start: IPosition, end: IPosition = start): Range {\n\t\treturn new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n\t}\n\n\t/**\n\t * Create a `Range` from an `IRange`.\n\t */\n\tpublic static lift(range: undefined | null): null;\n\tpublic static lift(range: IRange): Range;\n\tpublic static lift(range: IRange | undefined | null): Range | null {\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n\t}\n\n\t/**\n\t * Test if `obj` is an `IRange`.\n\t */\n\tpublic static isIRange(obj: any): obj is IRange {\n\t\treturn (\n\t\t\tobj\n\t\t\t&& (typeof obj.startLineNumber === 'number')\n\t\t\t&& (typeof obj.startColumn === 'number')\n\t\t\t&& (typeof obj.endLineNumber === 'number')\n\t\t\t&& (typeof obj.endColumn === 'number')\n\t\t);\n\t}\n\n\t/**\n\t * Test if the two ranges are touching in any way.\n\t */\n\tpublic static areIntersectingOrTouching(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n\t */\n\tpublic static areIntersecting(a: IRange, b: IRange): boolean {\n\t\t// Check if `a` is before `b`\n\t\tif (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if `b` is before `a`\n\t\tif (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// These ranges must intersect\n\t\treturn true;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the startPosition and then on the endPosition\n\t */\n\tpublic static compareRangesUsingStarts(a: IRange | null | undefined, b: IRange | null | undefined): number {\n\t\tif (a && b) {\n\t\t\tconst aStartLineNumber = a.startLineNumber | 0;\n\t\t\tconst bStartLineNumber = b.startLineNumber | 0;\n\n\t\t\tif (aStartLineNumber === bStartLineNumber) {\n\t\t\t\tconst aStartColumn = a.startColumn | 0;\n\t\t\t\tconst bStartColumn = b.startColumn | 0;\n\n\t\t\t\tif (aStartColumn === bStartColumn) {\n\t\t\t\t\tconst aEndLineNumber = a.endLineNumber | 0;\n\t\t\t\t\tconst bEndLineNumber = b.endLineNumber | 0;\n\n\t\t\t\t\tif (aEndLineNumber === bEndLineNumber) {\n\t\t\t\t\t\tconst aEndColumn = a.endColumn | 0;\n\t\t\t\t\t\tconst bEndColumn = b.endColumn | 0;\n\t\t\t\t\t\treturn aEndColumn - bEndColumn;\n\t\t\t\t\t}\n\t\t\t\t\treturn aEndLineNumber - bEndLineNumber;\n\t\t\t\t}\n\t\t\t\treturn aStartColumn - bStartColumn;\n\t\t\t}\n\t\t\treturn aStartLineNumber - bStartLineNumber;\n\t\t}\n\t\tconst aExists = (a ? 1 : 0);\n\t\tconst bExists = (b ? 1 : 0);\n\t\treturn aExists - bExists;\n\t}\n\n\t/**\n\t * A function that compares ranges, useful for sorting ranges\n\t * It will first compare ranges on the endPosition and then on the startPosition\n\t */\n\tpublic static compareRangesUsingEnds(a: IRange, b: IRange): number {\n\t\tif (a.endLineNumber === b.endLineNumber) {\n\t\t\tif (a.endColumn === b.endColumn) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.startColumn - b.startColumn;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn a.endColumn - b.endColumn;\n\t\t}\n\t\treturn a.endLineNumber - b.endLineNumber;\n\t}\n\n\t/**\n\t * Test if the range spans multiple lines.\n\t */\n\tpublic static spansMultipleLines(range: IRange): boolean {\n\t\treturn range.endLineNumber > range.startLineNumber;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as platform from 'vs/base/common/platform';\nimport * as buffer from 'vs/base/common/buffer';\n\ndeclare const TextDecoder: {\n\tprototype: TextDecoder;\n\tnew(label?: string): TextDecoder;\n};\ninterface TextDecoder {\n\tdecode(view: Uint16Array): string;\n}\n\nexport interface IStringBuilder {\n\tbuild(): string;\n\treset(): void;\n\twrite1(charCode: number): void;\n\tappendASCII(charCode: number): void;\n\tappendASCIIString(str: string): void;\n}\n\nlet _platformTextDecoder: TextDecoder | null;\nexport function getPlatformTextDecoder(): TextDecoder {\n\tif (!_platformTextDecoder) {\n\t\t_platformTextDecoder = new TextDecoder(platform.isLittleEndian() ? 'UTF-16LE' : 'UTF-16BE');\n\t}\n\treturn _platformTextDecoder;\n}\n\nexport const hasTextDecoder = (typeof TextDecoder !== 'undefined');\nexport let createStringBuilder: (capacity: number) => IStringBuilder;\nexport let decodeUTF16LE: (source: Uint8Array, offset: number, len: number) => string;\n\nif (hasTextDecoder) {\n\tcreateStringBuilder = (capacity) => new StringBuilder(capacity);\n\tdecodeUTF16LE = standardDecodeUTF16LE;\n} else {\n\tcreateStringBuilder = (capacity) => new CompatStringBuilder();\n\tdecodeUTF16LE = compatDecodeUTF16LE;\n}\n\nfunction standardDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tconst view = new Uint16Array(source.buffer, offset, len);\n\treturn getPlatformTextDecoder().decode(view);\n}\n\nfunction compatDecodeUTF16LE(source: Uint8Array, offset: number, len: number): string {\n\tlet result: string[] = [];\n\tlet resultLen = 0;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst charCode = buffer.readUInt16LE(source, offset); offset += 2;\n\t\tresult[resultLen++] = String.fromCharCode(charCode);\n\t}\n\treturn result.join('');\n}\n\nclass StringBuilder implements IStringBuilder {\n\n\tprivate readonly _capacity: number;\n\tprivate readonly _buffer: Uint16Array;\n\n\tprivate _completedStrings: string[] | null;\n\tprivate _bufferLength: number;\n\n\tconstructor(capacity: number) {\n\t\tthis._capacity = capacity | 0;\n\t\tthis._buffer = new Uint16Array(this._capacity);\n\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._completedStrings = null;\n\t\tthis._bufferLength = 0;\n\t}\n\n\tpublic build(): string {\n\t\tif (this._completedStrings !== null) {\n\t\t\tthis._flushBuffer();\n\t\t\treturn this._completedStrings.join('');\n\t\t}\n\t\treturn this._buildBuffer();\n\t}\n\n\tprivate _buildBuffer(): string {\n\t\tif (this._bufferLength === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst view = new Uint16Array(this._buffer.buffer, 0, this._bufferLength);\n\t\treturn getPlatformTextDecoder().decode(view);\n\t}\n\n\tprivate _flushBuffer(): void {\n\t\tconst bufferString = this._buildBuffer();\n\t\tthis._bufferLength = 0;\n\n\t\tif (this._completedStrings === null) {\n\t\t\tthis._completedStrings = [bufferString];\n\t\t} else {\n\t\t\tthis._completedStrings[this._completedStrings.length] = bufferString;\n\t\t}\n\t}\n\n\tpublic write1(charCode: number): void {\n\t\tconst remainingSpace = this._capacity - this._bufferLength;\n\n\t\tif (remainingSpace <= 1) {\n\t\t\tif (remainingSpace === 0 || strings.isHighSurrogate(charCode)) {\n\t\t\t\tthis._flushBuffer();\n\t\t\t}\n\t\t}\n\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendASCII(charCode: number): void {\n\t\tif (this._bufferLength === this._capacity) {\n\t\t\t// buffer is full\n\t\t\tthis._flushBuffer();\n\t\t}\n\t\tthis._buffer[this._bufferLength++] = charCode;\n\t}\n\n\tpublic appendASCIIString(str: string): void {\n\t\tconst strLen = str.length;\n\n\t\tif (this._bufferLength + strLen >= this._capacity) {\n\t\t\t// This string does not fit in the remaining buffer space\n\n\t\t\tthis._flushBuffer();\n\t\t\tthis._completedStrings![this._completedStrings!.length] = str;\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let i = 0; i < strLen; i++) {\n\t\t\tthis._buffer[this._bufferLength++] = str.charCodeAt(i);\n\t\t}\n\t}\n}\n\nclass CompatStringBuilder implements IStringBuilder {\n\n\tprivate _pieces: string[];\n\tprivate _piecesLen: number;\n\n\tconstructor() {\n\t\tthis._pieces = [];\n\t\tthis._piecesLen = 0;\n\t}\n\n\tpublic reset(): void {\n\t\tthis._pieces = [];\n\t\tthis._piecesLen = 0;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._pieces.join('');\n\t}\n\n\tpublic write1(charCode: number): void {\n\t\tthis._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n\t}\n\n\tpublic appendASCII(charCode: number): void {\n\t\tthis._pieces[this._piecesLen++] = String.fromCharCode(charCode);\n\t}\n\n\tpublic appendASCIIString(str: string): void {\n\t\tthis._pieces[this._piecesLen++] = str;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { IPosition, Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { IModelContentChange, IModelContentChangedEvent, IModelDecorationsChangedEvent, IModelLanguageChangedEvent, IModelLanguageConfigurationChangedEvent, IModelOptionsChangedEvent, IModelTokensChangedEvent, ModelRawContentChangedEvent } from 'vs/editor/common/model/textModelEvents';\nimport { SearchData } from 'vs/editor/common/model/textModelSearch';\nimport { LanguageId, LanguageIdentifier, FormattingOptions } from 'vs/editor/common/modes';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\nimport { MultilineTokens, MultilineTokens2 } from 'vs/editor/common/model/tokensStore';\nimport { TextChange } from 'vs/editor/common/model/textChange';\n\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nexport enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\n/**\n * Position in the minimap to render the decoration.\n */\nexport enum MinimapPosition {\n\tInline = 1,\n\tGutter = 2\n}\n\nexport interface IDecorationOptions {\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tcolor: string | ThemeColor | undefined;\n\t/**\n\t * CSS color to render.\n\t * e.g.: rgba(100, 100, 100, 0.5) or a color from the color registry\n\t */\n\tdarkColor?: string | ThemeColor;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationOverviewRulerOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: OverviewRulerLane;\n}\n\n/**\n * Options for rendering a model decoration in the overview ruler.\n */\nexport interface IModelDecorationMinimapOptions extends IDecorationOptions {\n\t/**\n\t * The position in the overview ruler.\n\t */\n\tposition: MinimapPosition;\n}\n\n/**\n * Options for a model decoration.\n */\nexport interface IModelDecorationOptions {\n\t/**\n\t * Customize the growing behavior of the decoration when typing at the edges of the decoration.\n\t * Defaults to TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges\n\t */\n\tstickiness?: TrackedRangeStickiness;\n\t/**\n\t * CSS class name describing the decoration.\n\t */\n\tclassName?: string | null;\n\t/**\n\t * Message to be rendered when hovering over the glyph margin decoration.\n\t */\n\tglyphMarginHoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Array of MarkdownString to render as the decoration message.\n\t */\n\thoverMessage?: IMarkdownString | IMarkdownString[] | null;\n\t/**\n\t * Should the decoration expand to encompass a whole line.\n\t */\n\tisWholeLine?: boolean;\n\t/**\n\t * Always render the decoration (even when the range it encompasses is collapsed).\n\t * @internal\n\t */\n\tshowIfCollapsed?: boolean;\n\t/**\n\t * Collapse the decoration if its entire range is being replaced via an edit.\n\t * @internal\n\t */\n\tcollapseOnReplaceEdit?: boolean;\n\t/**\n\t * Specifies the stack order of a decoration.\n\t * A decoration with greater stack order is always in front of a decoration with a lower stack order.\n\t */\n\tzIndex?: number;\n\t/**\n\t * If set, render this decoration in the overview ruler.\n\t */\n\toverviewRuler?: IModelDecorationOverviewRulerOptions | null;\n\t/**\n\t * If set, render this decoration in the minimap.\n\t */\n\tminimap?: IModelDecorationMinimapOptions | null;\n\t/**\n\t * If set, the decoration will be rendered in the glyph margin with this CSS class name.\n\t */\n\tglyphMarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name.\n\t */\n\tlinesDecorationsClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the lines decorations with this CSS class name, but only for the first line in case of line wrapping.\n\t */\n\tfirstLineDecorationClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered in the margin (covering its full width) with this CSS class name.\n\t */\n\tmarginClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered inline with the text with this CSS class name.\n\t * Please use this only for CSS rules that must impact the text. For example, use `className`\n\t * to have a background color decoration.\n\t */\n\tinlineClassName?: string | null;\n\t/**\n\t * If there is an `inlineClassName` which affects letter spacing.\n\t */\n\tinlineClassNameAffectsLetterSpacing?: boolean;\n\t/**\n\t * If set, the decoration will be rendered before the text with this CSS class name.\n\t */\n\tbeforeContentClassName?: string | null;\n\t/**\n\t * If set, the decoration will be rendered after the text with this CSS class name.\n\t */\n\tafterContentClassName?: string | null;\n}\n\n/**\n * New model decorations.\n */\nexport interface IModelDeltaDecoration {\n\t/**\n\t * Range that this decoration covers.\n\t */\n\trange: IRange;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\toptions: IModelDecorationOptions;\n}\n\n/**\n * A decoration in the model.\n */\nexport interface IModelDecoration {\n\t/**\n\t * Identifier for a decoration.\n\t */\n\treadonly id: string;\n\t/**\n\t * Identifier for a decoration's owner.\n\t */\n\treadonly ownerId: number;\n\t/**\n\t * Range that this decoration covers.\n\t */\n\treadonly range: Range;\n\t/**\n\t * Options associated with this decoration.\n\t */\n\treadonly options: IModelDecorationOptions;\n}\n\n/**\n * An accessor that can add, change or remove model decorations.\n * @internal\n */\nexport interface IModelDecorationsChangeAccessor {\n\t/**\n\t * Add a new decoration.\n\t * @param range Range that this decoration covers.\n\t * @param options Options associated with this decoration.\n\t * @return An unique identifier associated with this decoration.\n\t */\n\taddDecoration(range: IRange, options: IModelDecorationOptions): string;\n\t/**\n\t * Change the range that an existing decoration covers.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newRange The new range that this decoration covers.\n\t */\n\tchangeDecoration(id: string, newRange: IRange): void;\n\t/**\n\t * Change the options associated with an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t * @param newOptions The new options associated with this decoration.\n\t */\n\tchangeDecorationOptions(id: string, newOptions: IModelDecorationOptions): void;\n\t/**\n\t * Remove an existing decoration.\n\t * @param id The unique identifier associated with the decoration.\n\t */\n\tremoveDecoration(id: string): void;\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[]): string[];\n}\n\n/**\n * Word inside a model.\n */\nexport interface IWordAtPosition {\n\t/**\n\t * The word.\n\t */\n\treadonly word: string;\n\t/**\n\t * The column where the word starts.\n\t */\n\treadonly startColumn: number;\n\t/**\n\t * The column where the word ends.\n\t */\n\treadonly endColumn: number;\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLinePreference {\n\t/**\n\t * Use the end of line character identified in the text buffer.\n\t */\n\tTextDefined = 0,\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * The default end of line to use when instantiating models.\n */\nexport const enum DefaultEndOfLine {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 1,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 2\n}\n\n/**\n * End of line character preference.\n */\nexport const enum EndOfLineSequence {\n\t/**\n\t * Use line feed (\\n) as the end of line character.\n\t */\n\tLF = 0,\n\t/**\n\t * Use carriage return and line feed (\\r\\n) as the end of line character.\n\t */\n\tCRLF = 1\n}\n\n/**\n * An identifier for a single edit operation.\n * @internal\n */\nexport interface ISingleEditOperationIdentifier {\n\t/**\n\t * Identifier major\n\t */\n\tmajor: number;\n\t/**\n\t * Identifier minor\n\t */\n\tminor: number;\n}\n\n/**\n * A single edit operation, that acts as a simple replace.\n * i.e. Replace text at `range` with `text` in model.\n */\nexport interface ISingleEditOperation {\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n}\n\n/**\n * A single edit operation, that has an identifier.\n */\nexport interface IIdentifiedSingleEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier?: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: IRange;\n\t/**\n\t * The text to replace with. This can be null to emulate a simple delete.\n\t */\n\ttext: string | null;\n\t/**\n\t * This indicates that this operation has \"insert\" semantics.\n\t * i.e. forceMoveMarkers = true => if `range` is collapsed, all markers at the position will be moved.\n\t */\n\tforceMoveMarkers?: boolean;\n\t/**\n\t * This indicates that this operation is inserting automatic whitespace\n\t * that can be removed on next model edit operation if `config.trimAutoWhitespace` is true.\n\t * @internal\n\t */\n\tisAutoWhitespaceEdit?: boolean;\n\t/**\n\t * This indicates that this operation is in a set of operations that are tracked and should not be \"simplified\".\n\t * @internal\n\t */\n\t_isTracked?: boolean;\n}\n\nexport interface IValidEditOperation {\n\t/**\n\t * An identifier associated with this single edit operation.\n\t * @internal\n\t */\n\tidentifier: ISingleEditOperationIdentifier | null;\n\t/**\n\t * The range to replace. This can be empty to emulate a simple insert.\n\t */\n\trange: Range;\n\t/**\n\t * The text to replace with. This can be empty to emulate a simple delete.\n\t */\n\ttext: string;\n\t/**\n\t * @internal\n\t */\n\ttextChange: TextChange;\n}\n\n/**\n * A callback that can compute the cursor state after applying a series of edit operations.\n */\nexport interface ICursorStateComputer {\n\t/**\n\t * A callback that can compute the resulting cursors state after some edit operations have been executed.\n\t */\n\t(inverseEditOperations: IValidEditOperation[]): Selection[] | null;\n}\n\nexport class TextModelResolvedOptions {\n\t_textModelResolvedOptionsBrand: void;\n\n\treadonly tabSize: number;\n\treadonly indentSize: number;\n\treadonly insertSpaces: boolean;\n\treadonly defaultEOL: DefaultEndOfLine;\n\treadonly trimAutoWhitespace: boolean;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(src: {\n\t\ttabSize: number;\n\t\tindentSize: number;\n\t\tinsertSpaces: boolean;\n\t\tdefaultEOL: DefaultEndOfLine;\n\t\ttrimAutoWhitespace: boolean;\n\t}) {\n\t\tthis.tabSize = Math.max(1, src.tabSize | 0);\n\t\tthis.indentSize = src.tabSize | 0;\n\t\tthis.insertSpaces = Boolean(src.insertSpaces);\n\t\tthis.defaultEOL = src.defaultEOL | 0;\n\t\tthis.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic equals(other: TextModelResolvedOptions): boolean {\n\t\treturn (\n\t\t\tthis.tabSize === other.tabSize\n\t\t\t&& this.indentSize === other.indentSize\n\t\t\t&& this.insertSpaces === other.insertSpaces\n\t\t\t&& this.defaultEOL === other.defaultEOL\n\t\t\t&& this.trimAutoWhitespace === other.trimAutoWhitespace\n\t\t);\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic createChangeEvent(newOpts: TextModelResolvedOptions): IModelOptionsChangedEvent {\n\t\treturn {\n\t\t\ttabSize: this.tabSize !== newOpts.tabSize,\n\t\t\tindentSize: this.indentSize !== newOpts.indentSize,\n\t\t\tinsertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n\t\t\ttrimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n\t\t};\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITextModelCreationOptions {\n\ttabSize: number;\n\tindentSize: number;\n\tinsertSpaces: boolean;\n\tdetectIndentation: boolean;\n\ttrimAutoWhitespace: boolean;\n\tdefaultEOL: DefaultEndOfLine;\n\tisForSimpleWidget: boolean;\n\tlargeFileOptimizations: boolean;\n}\n\nexport interface ITextModelUpdateOptions {\n\ttabSize?: number;\n\tindentSize?: number;\n\tinsertSpaces?: boolean;\n\ttrimAutoWhitespace?: boolean;\n}\n\nexport class FindMatch {\n\t_findMatchBrand: void;\n\n\tpublic readonly range: Range;\n\tpublic readonly matches: string[] | null;\n\n\t/**\n\t * @internal\n\t */\n\tconstructor(range: Range, matches: string[] | null) {\n\t\tthis.range = range;\n\t\tthis.matches = matches;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface IFoundBracket {\n\trange: Range;\n\topen: string[];\n\tclose: string[];\n\tisOpen: boolean;\n}\n\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nexport const enum TrackedRangeStickiness {\n\tAlwaysGrowsWhenTypingAtEdges = 0,\n\tNeverGrowsWhenTypingAtEdges = 1,\n\tGrowsOnlyWhenTypingBefore = 2,\n\tGrowsOnlyWhenTypingAfter = 3,\n}\n\n/**\n * @internal\n */\nexport interface IActiveIndentGuideInfo {\n\tstartLineNumber: number;\n\tendLineNumber: number;\n\tindent: number;\n}\n\n/**\n * Text snapshot that works like an iterator.\n * Will try to return chunks of roughly ~64KB size.\n * Will return null when finished.\n *\n * @internal\n */\nexport interface ITextSnapshot {\n\tread(): string | null;\n}\n\n/**\n * A model.\n */\nexport interface ITextModel {\n\n\t/**\n\t * Gets the resource associated with this editor model.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * A unique identifier associated with this model.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * This model is constructed for a simple widget code editor.\n\t * @internal\n\t */\n\treadonly isForSimpleWidget: boolean;\n\n\t/**\n\t * If true, the text model might contain RTL.\n\t * If false, the text model **contains only** contain LTR.\n\t * @internal\n\t */\n\tmightContainRTL(): boolean;\n\n\t/**\n\t * If true, the text model might contain LINE SEPARATOR (LS), PARAGRAPH SEPARATOR (PS).\n\t * If false, the text model definitely does not contain these.\n\t * @internal\n\t */\n\tmightContainUnusualLineTerminators(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\tremoveUnusualLineTerminators(selections?: Selection[]): void;\n\n\t/**\n\t * If true, the text model might contain non basic ASCII.\n\t * If false, the text model **contains only** basic ASCII.\n\t * @internal\n\t */\n\tmightContainNonBasicASCII(): boolean;\n\n\t/**\n\t * Get the resolved options for this model.\n\t */\n\tgetOptions(): TextModelResolvedOptions;\n\n\t/**\n\t * Get the formatting options for this model.\n\t * @internal\n\t */\n\tgetFormattingOptions(): FormattingOptions;\n\n\t/**\n\t * Get the current version id of the model.\n\t * Anytime a change happens to the model (even undo/redo),\n\t * the version id is incremented.\n\t */\n\tgetVersionId(): number;\n\n\t/**\n\t * Get the alternative version id of the model.\n\t * This alternative version id is not always incremented,\n\t * it will return the same values in the case of undo-redo.\n\t */\n\tgetAlternativeVersionId(): number;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t */\n\tsetValue(newValue: string): void;\n\n\t/**\n\t * Replace the entire text buffer value contained in this model.\n\t * @internal\n\t */\n\tsetValueFromTextBuffer(newValue: ITextBuffer): void;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param eol The end of line character preference. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text.\n\t */\n\tgetValue(eol?: EndOfLinePreference, preserveBOM?: boolean): string;\n\n\t/**\n\t * Get the text stored in this model.\n\t * @param preserverBOM Preserve a BOM character if it was detected when the model was constructed.\n\t * @return The text snapshot (it is safe to consume it asynchronously).\n\t * @internal\n\t */\n\tcreateSnapshot(preserveBOM?: boolean): ITextSnapshot;\n\n\t/**\n\t * Get the length of the text stored in this model.\n\t */\n\tgetValueLength(eol?: EndOfLinePreference, preserveBOM?: boolean): number;\n\n\t/**\n\t * Check if the raw text stored in this model equals another raw text.\n\t * @internal\n\t */\n\tequalsTextBuffer(other: ITextBuffer): boolean;\n\n\t/**\n\t * Get the underling text buffer.\n\t * @internal\n\t */\n\tgetTextBuffer(): ITextBuffer;\n\n\t/**\n\t * Get the text in a certain range.\n\t * @param range The range describing what text to get.\n\t * @param eol The end of line character preference. This will only be used for multiline ranges. Defaults to `EndOfLinePreference.TextDefined`.\n\t * @return The text.\n\t */\n\tgetValueInRange(range: IRange, eol?: EndOfLinePreference): string;\n\n\t/**\n\t * Get the length of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t * @return The text length.\n\t */\n\tgetValueLengthInRange(range: IRange): number;\n\n\t/**\n\t * Get the character count of text in a certain range.\n\t * @param range The range describing what text length to get.\n\t */\n\tgetCharacterCountInRange(range: IRange): number;\n\n\t/**\n\t * Splits characters in two buckets. First bucket (A) is of characters that\n\t * sit in lines with length < `LONG_LINE_BOUNDARY`. Second bucket (B) is of\n\t * characters that sit in lines with length >= `LONG_LINE_BOUNDARY`.\n\t * If count(B) > count(A) return true. Returns false otherwise.\n\t * @internal\n\t */\n\tisDominatedByLongLines(): boolean;\n\n\t/**\n\t * Get the number of lines in the model.\n\t */\n\tgetLineCount(): number;\n\n\t/**\n\t * Get the text for a certain line.\n\t */\n\tgetLineContent(lineNumber: number): string;\n\n\t/**\n\t * Get the text length for a certain line.\n\t */\n\tgetLineLength(lineNumber: number): number;\n\n\t/**\n\t * Get the text for all lines.\n\t */\n\tgetLinesContent(): string[];\n\n\t/**\n\t * Get the end of line sequence predominantly used in the text buffer.\n\t * @return EOL char sequence (e.g.: '\\n' or '\\r\\n').\n\t */\n\tgetEOL(): string;\n\n\t/**\n\t * Get the minimum legal column for line at `lineNumber`\n\t */\n\tgetLineMinColumn(lineNumber: number): number;\n\n\t/**\n\t * Get the maximum legal column for line at `lineNumber`\n\t */\n\tgetLineMaxColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column before the first non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Returns the column after the last non whitespace character for line at `lineNumber`.\n\t * Returns 0 if line is empty or contains only whitespace.\n\t */\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\n\t/**\n\t * Create a valid position,\n\t */\n\tvalidatePosition(position: IPosition): Position;\n\n\t/**\n\t * Advances the given position by the given offset (negative offsets are also accepted)\n\t * and returns it as a new valid position.\n\t *\n\t * If the offset and position are such that their combination goes beyond the beginning or\n\t * end of the model, throws an exception.\n\t *\n\t * If the offset is such that the new position would be in the middle of a multi-byte\n\t * line terminator, throws an exception.\n\t */\n\tmodifyPosition(position: IPosition, offset: number): Position;\n\n\t/**\n\t * Create a valid range.\n\t */\n\tvalidateRange(range: IRange): Range;\n\n\t/**\n\t * Converts the position to a zero-based offset.\n\t *\n\t * The position will be [adjusted](#TextDocument.validatePosition).\n\t *\n\t * @param position A position.\n\t * @return A valid zero-based offset.\n\t */\n\tgetOffsetAt(position: IPosition): number;\n\n\t/**\n\t * Converts a zero-based offset to a position.\n\t *\n\t * @param offset A zero-based offset.\n\t * @return A valid [position](#Position).\n\t */\n\tgetPositionAt(offset: number): Position;\n\n\t/**\n\t * Get a range covering the entire model\n\t */\n\tgetFullModelRange(): Range;\n\n\t/**\n\t * Returns if the model was disposed or not.\n\t */\n\tisDisposed(): boolean;\n\n\t/**\n\t * @internal\n\t */\n\ttokenizeViewport(startLineNumber: number, endLineNumber: number): void;\n\n\t/**\n\t * This model is so large that it would not be a good idea to sync it over\n\t * to web workers or other places.\n\t * @internal\n\t */\n\tisTooLargeForSyncing(): boolean;\n\n\t/**\n\t * The file is so large, that even tokenization is disabled.\n\t * @internal\n\t */\n\tisTooLargeForTokenization(): boolean;\n\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchOnlyEditableRange Limit the searching to only search inside the editable range of the model.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if not matches have been found.\n\t */\n\tfindMatches(searchString: string, searchOnlyEditableRange: boolean, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchScope Limit the searching to only search inside these ranges.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @param limitResultCount Limit the number of results\n\t * @return The ranges where the matches are. It is empty if no matches have been found.\n\t */\n\tfindMatches(searchString: string, searchScope: IRange | IRange[], isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean, limitResultCount?: number): FindMatch[];\n\t/**\n\t * Search the model for the next match. Loops to the beginning of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the next match is. It is null if no next match has been found.\n\t */\n\tfindNextMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\t/**\n\t * Search the model for the previous match. Loops to the end of the model if needed.\n\t * @param searchString The string used to search. If it is a regular expression, set `isRegex` to true.\n\t * @param searchStart Start the searching at the specified position.\n\t * @param isRegex Used to indicate that `searchString` is a regular expression.\n\t * @param matchCase Force the matching to match lower/upper case exactly.\n\t * @param wordSeparators Force the matching to match entire words only. Pass null otherwise.\n\t * @param captureMatches The result will contain the captured groups.\n\t * @return The range where the previous match is. It is null if no previous match has been found.\n\t */\n\tfindPreviousMatch(searchString: string, searchStart: IPosition, isRegex: boolean, matchCase: boolean, wordSeparators: string | null, captureMatches: boolean): FindMatch | null;\n\n\t/**\n\t * @internal\n\t */\n\tsetTokens(tokens: MultilineTokens[]): void;\n\n\t/**\n\t * @internal\n\t */\n\tsetSemanticTokens(tokens: MultilineTokens2[] | null, isComplete: boolean): void;\n\n\t/**\n\t * @internal\n\t */\n\tsetPartialSemanticTokens(range: Range, tokens: MultilineTokens2[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\thasSemanticTokens(): boolean;\n\n\t/**\n\t * Flush all tokenization state.\n\t * @internal\n\t */\n\tresetTokenization(): void;\n\n\t/**\n\t * Force tokenization information for `lineNumber` to be accurate.\n\t * @internal\n\t */\n\tforceTokenization(lineNumber: number): void;\n\n\t/**\n\t * If it is cheap, force tokenization information for `lineNumber` to be accurate.\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\ttokenizeIfCheap(lineNumber: number): void;\n\n\t/**\n\t * Check if calling `forceTokenization` for this `lineNumber` will be cheap (time-wise).\n\t * This is based on a heuristic.\n\t * @internal\n\t */\n\tisCheapToTokenize(lineNumber: number): boolean;\n\n\t/**\n\t * Get the tokens for the line `lineNumber`.\n\t * The tokens might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLineTokens(lineNumber: number): LineTokens;\n\n\t/**\n\t * Get the language associated with this model.\n\t * @internal\n\t */\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n\t/**\n\t * Get the language associated with this model.\n\t */\n\tgetModeId(): string;\n\n\t/**\n\t * Set the current language mode associated with the model.\n\t * @internal\n\t */\n\tsetMode(languageIdentifier: LanguageIdentifier): void;\n\n\t/**\n\t * Returns the real (inner-most) language mode at a given position.\n\t * The result might be inaccurate. Use `forceTokenization` to ensure accurate tokens.\n\t * @internal\n\t */\n\tgetLanguageIdAtPosition(lineNumber: number, column: number): LanguageId;\n\n\t/**\n\t * Get the word under or besides `position`.\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Might be null.\n\t */\n\tgetWordAtPosition(position: IPosition): IWordAtPosition | null;\n\n\t/**\n\t * Get the word under or besides `position` trimmed to `position`.column\n\t * @param position The position to look for a word.\n\t * @return The word under or besides `position`. Will never be null.\n\t */\n\tgetWordUntilPosition(position: IPosition): IWordAtPosition;\n\n\t/**\n\t * Find the matching bracket of `request` up, counting brackets.\n\t * @param request The bracket we're searching for\n\t * @param position The position at which to start the search.\n\t * @return The range of the matching bracket, or null if the bracket match was not found.\n\t * @internal\n\t */\n\tfindMatchingBracketUp(bracket: string, position: IPosition): Range | null;\n\n\t/**\n\t * Find the first bracket in the model before `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket before `position`, or null if there are no more brackets before `positions`.\n\t * @internal\n\t */\n\tfindPrevBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Find the first bracket in the model after `position`.\n\t * @param position The position at which to start the search.\n\t * @return The info for the first bracket after `position`, or null if there are no more brackets after `positions`.\n\t * @internal\n\t */\n\tfindNextBracket(position: IPosition): IFoundBracket | null;\n\n\t/**\n\t * Find the enclosing brackets that contain `position`.\n\t * @param position The position at which to start the search.\n\t * @internal\n\t */\n\tfindEnclosingBrackets(position: IPosition, maxDuration?: number): [Range, Range] | null;\n\n\t/**\n\t * Given a `position`, if the position is on top or near a bracket,\n\t * find the matching bracket of that bracket and return the ranges of both brackets.\n\t * @param position The position at which to look for a bracket.\n\t * @internal\n\t */\n\tmatchBracket(position: IPosition): [Range, Range] | null;\n\n\t/**\n\t * @internal\n\t */\n\tgetActiveIndentGuide(lineNumber: number, minLineNumber: number, maxLineNumber: number): IActiveIndentGuideInfo;\n\n\t/**\n\t * @internal\n\t */\n\tgetLinesIndentGuides(startLineNumber: number, endLineNumber: number): number[];\n\n\t/**\n\t * Change the decorations. The callback will be called with a change accessor\n\t * that becomes invalid as soon as the callback finishes executing.\n\t * This allows for all events to be queued up until the change\n\t * is completed. Returns whatever the callback returns.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @internal\n\t */\n\tchangeDecorations<T>(callback: (changeAccessor: IModelDecorationsChangeAccessor) => T, ownerId?: number): T | null;\n\n\t/**\n\t * Perform a minimum amount of operations, in order to transform the decorations\n\t * identified by `oldDecorations` to the decorations described by `newDecorations`\n\t * and returns the new identifiers associated with the resulting decorations.\n\t *\n\t * @param oldDecorations Array containing previous decorations identifiers.\n\t * @param newDecorations Array describing what decorations should result after the call.\n\t * @param ownerId Identifies the editor id in which these decorations should appear. If no `ownerId` is provided, the decorations will appear in all editors that attach this model.\n\t * @return An array containing the new decorations identifiers.\n\t */\n\tdeltaDecorations(oldDecorations: string[], newDecorations: IModelDeltaDecoration[], ownerId?: number): string[];\n\n\t/**\n\t * Remove all decorations that have been added with this specific ownerId.\n\t * @param ownerId The owner id to search for.\n\t * @internal\n\t */\n\tremoveAllDecorationsWithOwnerId(ownerId: number): void;\n\n\t/**\n\t * Get the options associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration options or null if the decoration was not found.\n\t */\n\tgetDecorationOptions(id: string): IModelDecorationOptions | null;\n\n\t/**\n\t * Get the range associated with a decoration.\n\t * @param id The decoration id.\n\t * @return The decoration range or null if the decoration was not found.\n\t */\n\tgetDecorationRange(id: string): Range | null;\n\n\t/**\n\t * Gets all the decorations for the line `lineNumber` as an array.\n\t * @param lineNumber The line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLineDecorations(lineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations for the lines between `startLineNumber` and `endLineNumber` as an array.\n\t * @param startLineNumber The start line number\n\t * @param endLineNumber The end line number\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetLinesDecorations(startLineNumber: number, endLineNumber: number, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations in a range as an array. Only `startLineNumber` and `endLineNumber` from `range` are used for filtering.\n\t * So for now it returns all the decorations on the same line as `range`.\n\t * @param range The range to search in\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t * @return An array with the decorations\n\t */\n\tgetDecorationsInRange(range: IRange, ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetAllDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * Gets all the decorations that should be rendered in the overview ruler as an array.\n\t * @param ownerId If set, it will ignore decorations belonging to other owners.\n\t * @param filterOutValidation If set, it will ignore decorations specific to validation (i.e. warnings, errors).\n\t */\n\tgetOverviewRulerDecorations(ownerId?: number, filterOutValidation?: boolean): IModelDecoration[];\n\n\t/**\n\t * @internal\n\t */\n\t_getTrackedRange(id: string): Range | null;\n\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: null, newStickiness: TrackedRangeStickiness): null;\n\t/**\n\t * @internal\n\t */\n\t_setTrackedRange(id: string | null, newRange: Range, newStickiness: TrackedRangeStickiness): string;\n\n\t/**\n\t * Normalize a string containing whitespace according to indentation rules (converts to spaces or to tabs).\n\t */\n\tnormalizeIndentation(str: string): string;\n\n\t/**\n\t * Change the options of this model.\n\t */\n\tupdateOptions(newOpts: ITextModelUpdateOptions): void;\n\n\t/**\n\t * Detect the indentation options for this model from its content.\n\t */\n\tdetectIndentation(defaultInsertSpaces: boolean, defaultTabSize: number): void;\n\n\t/**\n\t * Push a stack element onto the undo stack. This acts as an undo/redo point.\n\t * The idea is to use `pushEditOperations` to edit the model and then to\n\t * `pushStackElement` to create an undo/redo stop point.\n\t */\n\tpushStackElement(): void;\n\n\t/**\n\t * Push edit operations, basically editing the model. This is the preferred way\n\t * of editing the model. The edit operations will land on the undo stack.\n\t * @param beforeCursorState The cursor state before the edit operations. This cursor state will be returned when `undo` or `redo` are invoked.\n\t * @param editOperations The edit operations.\n\t * @param cursorStateComputer A callback that can compute the resulting cursors state after the edit operations have been executed.\n\t * @return The cursor state returned by the `cursorStateComputer`.\n\t */\n\tpushEditOperations(beforeCursorState: Selection[] | null, editOperations: IIdentifiedSingleEditOperation[], cursorStateComputer: ICursorStateComputer): Selection[] | null;\n\n\t/**\n\t * Change the end of line sequence. This is the preferred way of\n\t * changing the eol sequence. This will land on the undo stack.\n\t */\n\tpushEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * Edit the model without adding the edits to the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEditOperations for the preferred way.\n\t * @param operations The edit operations.\n\t * @return If desired, the inverse edit operations, that, when applied, will bring the model back to the previous state.\n\t */\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[]): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: false): void;\n\tapplyEdits(operations: IIdentifiedSingleEditOperation[], computeUndoEdits: true): IValidEditOperation[];\n\n\t/**\n\t * Change the end of line sequence without recording in the undo stack.\n\t * This can have dire consequences on the undo stack! See @pushEOL for the preferred way.\n\t */\n\tsetEOL(eol: EndOfLineSequence): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyUndo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * @internal\n\t */\n\t_applyRedo(changes: TextChange[], eol: EndOfLineSequence, resultingAlternativeVersionId: number, resultingSelection: Selection[] | null): void;\n\n\t/**\n\t * Undo edit operations until the first previous stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the redo stack.\n\t * @internal\n\t */\n\tundo(): void;\n\n\t/**\n\t * Is there anything in the undo stack?\n\t * @internal\n\t */\n\tcanUndo(): boolean;\n\n\t/**\n\t * Redo edit operations until the next stop point created by `pushStackElement`.\n\t * The inverse edit operations will be pushed on the undo stack.\n\t * @internal\n\t */\n\tredo(): void;\n\n\t/**\n\t * Is there anything in the redo stack?\n\t * @internal\n\t */\n\tcanRedo(): boolean;\n\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContentFast(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * @deprecated Please use `onDidChangeContent` instead.\n\t * An event emitted when the contents of the model have changed.\n\t * @internal\n\t * @event\n\t */\n\tonDidChangeRawContent(listener: (e: ModelRawContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the contents of the model have changed.\n\t * @event\n\t */\n\tonDidChangeContent(listener: (e: IModelContentChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when decorations of the model have changed.\n\t * @event\n\t */\n\tonDidChangeDecorations(listener: (e: IModelDecorationsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the model options have changed.\n\t * @event\n\t */\n\tonDidChangeOptions(listener: (e: IModelOptionsChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguage(listener: (e: IModelLanguageChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the language configuration associated with the model has changed.\n\t * @event\n\t */\n\tonDidChangeLanguageConfiguration(listener: (e: IModelLanguageConfigurationChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the tokens associated with the model have changed.\n\t * @event\n\t * @internal\n\t */\n\tonDidChangeTokens(listener: (e: IModelTokensChangedEvent) => void): IDisposable;\n\t/**\n\t * An event emitted when the model has been attached to the first editor or detached from the last editor.\n\t * @event\n\t * @internal\n\t */\n\tonDidChangeAttached(listener: () => void): IDisposable;\n\t/**\n\t * An event emitted right before disposing the model.\n\t * @event\n\t */\n\tonWillDispose(listener: () => void): IDisposable;\n\n\t/**\n\t * Destroy this model. This will unbind the model from the mode\n\t * and make all necessary clean-up to release this object to the GC.\n\t */\n\tdispose(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeAttached(): void;\n\n\t/**\n\t * @internal\n\t */\n\tonBeforeDetached(): void;\n\n\t/**\n\t * Returns if this model is attached to an editor or not.\n\t * @internal\n\t */\n\tisAttachedToEditor(): boolean;\n\n\t/**\n\t * Returns the count of editors this model is attached to.\n\t * @internal\n\t */\n\tgetAttachedEditorCount(): number;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferBuilder {\n\tacceptChunk(chunk: string): void;\n\tfinish(): ITextBufferFactory;\n}\n\n/**\n * @internal\n */\nexport interface ITextBufferFactory {\n\tcreate(defaultEOL: DefaultEndOfLine): ITextBuffer;\n\tgetFirstLineText(lengthLimit: number): string;\n}\n\n/**\n * @internal\n */\nexport const enum ModelConstants {\n\tFIRST_LINE_DETECTION_LENGTH_LIMIT = 1000\n}\n\n/**\n * @internal\n */\nexport class ValidAnnotatedEditOperation implements IIdentifiedSingleEditOperation {\n\tconstructor(\n\t\tpublic readonly identifier: ISingleEditOperationIdentifier | null,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly text: string | null,\n\t\tpublic readonly forceMoveMarkers: boolean,\n\t\tpublic readonly isAutoWhitespaceEdit: boolean,\n\t\tpublic readonly _isTracked: boolean,\n\t) { }\n}\n\n/**\n * @internal\n */\nexport interface IReadonlyTextBuffer {\n\tonDidChangeContent: Event<void>;\n\tequals(other: ITextBuffer): boolean;\n\tmightContainRTL(): boolean;\n\tmightContainUnusualLineTerminators(): boolean;\n\tresetMightContainUnusualLineTerminators(): void;\n\tmightContainNonBasicASCII(): boolean;\n\tgetBOM(): string;\n\tgetEOL(): string;\n\n\tgetOffsetAt(lineNumber: number, column: number): number;\n\tgetPositionAt(offset: number): Position;\n\tgetRangeAt(offset: number, length: number): Range;\n\n\tgetValueInRange(range: Range, eol: EndOfLinePreference): string;\n\tcreateSnapshot(preserveBOM: boolean): ITextSnapshot;\n\tgetValueLengthInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetCharacterCountInRange(range: Range, eol: EndOfLinePreference): number;\n\tgetLength(): number;\n\tgetLineCount(): number;\n\tgetLinesContent(): string[];\n\tgetLineContent(lineNumber: number): string;\n\tgetLineCharCode(lineNumber: number, index: number): number;\n\tgetCharCode(offset: number): number;\n\tgetLineLength(lineNumber: number): number;\n\tgetLineFirstNonWhitespaceColumn(lineNumber: number): number;\n\tgetLineLastNonWhitespaceColumn(lineNumber: number): number;\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[];\n}\n\n/**\n * @internal\n */\nexport interface ITextBuffer extends IReadonlyTextBuffer {\n\tsetEOL(newEOL: '\\r\\n' | '\\n'): void;\n\tapplyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult;\n}\n\n/**\n * @internal\n */\nexport class ApplyEditsResult {\n\n\tconstructor(\n\t\tpublic readonly reverseEdits: IValidEditOperation[] | null,\n\t\tpublic readonly changes: IInternalModelContentChange[],\n\t\tpublic readonly trimAutoWhitespaceLineNumbers: number[] | null\n\t) { }\n\n}\n\n/**\n * @internal\n */\nexport interface IInternalModelContentChange extends IModelContentChange {\n\trange: Range;\n\tforceMoveMarkers: boolean;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Piece, PieceTreeBase } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\n\nexport class TreeNode {\n\tparent: TreeNode;\n\tleft: TreeNode;\n\tright: TreeNode;\n\tcolor: NodeColor;\n\n\t// Piece\n\tpiece: Piece;\n\tsize_left: number; // size of the left subtree (not inorder)\n\tlf_left: number; // line feeds cnt in the left subtree (not in order)\n\n\tconstructor(piece: Piece, color: NodeColor) {\n\t\tthis.piece = piece;\n\t\tthis.color = color;\n\t\tthis.size_left = 0;\n\t\tthis.lf_left = 0;\n\t\tthis.parent = this;\n\t\tthis.left = this;\n\t\tthis.right = this;\n\t}\n\n\tpublic next(): TreeNode {\n\t\tif (this.right !== SENTINEL) {\n\t\t\treturn leftest(this.right);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.left === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic prev(): TreeNode {\n\t\tif (this.left !== SENTINEL) {\n\t\t\treturn righttest(this.left);\n\t\t}\n\n\t\tlet node: TreeNode = this;\n\n\t\twhile (node.parent !== SENTINEL) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\tif (node.parent === SENTINEL) {\n\t\t\treturn SENTINEL;\n\t\t} else {\n\t\t\treturn node.parent;\n\t\t}\n\t}\n\n\tpublic detach(): void {\n\t\tthis.parent = null!;\n\t\tthis.left = null!;\n\t\tthis.right = null!;\n\t}\n}\n\nexport const enum NodeColor {\n\tBlack = 0,\n\tRed = 1,\n}\n\nexport const SENTINEL: TreeNode = new TreeNode(null!, NodeColor.Black);\nSENTINEL.parent = SENTINEL;\nSENTINEL.left = SENTINEL;\nSENTINEL.right = SENTINEL;\nSENTINEL.color = NodeColor.Black;\n\nexport function leftest(node: TreeNode): TreeNode {\n\twhile (node.left !== SENTINEL) {\n\t\tnode = node.left;\n\t}\n\treturn node;\n}\n\nexport function righttest(node: TreeNode): TreeNode {\n\twhile (node.right !== SENTINEL) {\n\t\tnode = node.right;\n\t}\n\treturn node;\n}\n\nexport function calculateSize(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.size_left + node.piece.length + calculateSize(node.right);\n}\n\nexport function calculateLF(node: TreeNode): number {\n\tif (node === SENTINEL) {\n\t\treturn 0;\n\t}\n\n\treturn node.lf_left + node.piece.lineFeedCnt + calculateLF(node.right);\n}\n\nexport function resetSentinel(): void {\n\tSENTINEL.parent = SENTINEL;\n}\n\nexport function leftRotate(tree: PieceTreeBase, x: TreeNode) {\n\tlet y = x.right;\n\n\t// fix size_left\n\ty.size_left += x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left += x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\tx.right = y.left;\n\n\tif (y.left !== SENTINEL) {\n\t\ty.left.parent = x;\n\t}\n\ty.parent = x.parent;\n\tif (x.parent === SENTINEL) {\n\t\ttree.root = y;\n\t} else if (x.parent.left === x) {\n\t\tx.parent.left = y;\n\t} else {\n\t\tx.parent.right = y;\n\t}\n\ty.left = x;\n\tx.parent = y;\n}\n\nexport function rightRotate(tree: PieceTreeBase, y: TreeNode) {\n\tlet x = y.left;\n\ty.left = x.right;\n\tif (x.right !== SENTINEL) {\n\t\tx.right.parent = y;\n\t}\n\tx.parent = y.parent;\n\n\t// fix size_left\n\ty.size_left -= x.size_left + (x.piece ? x.piece.length : 0);\n\ty.lf_left -= x.lf_left + (x.piece ? x.piece.lineFeedCnt : 0);\n\n\tif (y.parent === SENTINEL) {\n\t\ttree.root = x;\n\t} else if (y === y.parent.right) {\n\t\ty.parent.right = x;\n\t} else {\n\t\ty.parent.left = x;\n\t}\n\n\tx.right = y;\n\ty.parent = x;\n}\n\nexport function rbDelete(tree: PieceTreeBase, z: TreeNode) {\n\tlet x: TreeNode;\n\tlet y: TreeNode;\n\n\tif (z.left === SENTINEL) {\n\t\ty = z;\n\t\tx = y.right;\n\t} else if (z.right === SENTINEL) {\n\t\ty = z;\n\t\tx = y.left;\n\t} else {\n\t\ty = leftest(z.right);\n\t\tx = y.right;\n\t}\n\n\tif (y === tree.root) {\n\t\ttree.root = x;\n\n\t\t// if x is null, we are removing the only node\n\t\tx.color = NodeColor.Black;\n\t\tz.detach();\n\t\tresetSentinel();\n\t\ttree.root.parent = SENTINEL;\n\n\t\treturn;\n\t}\n\n\tlet yWasRed = (y.color === NodeColor.Red);\n\n\tif (y === y.parent.left) {\n\t\ty.parent.left = x;\n\t} else {\n\t\ty.parent.right = x;\n\t}\n\n\tif (y === z) {\n\t\tx.parent = y.parent;\n\t\trecomputeTreeMetadata(tree, x);\n\t} else {\n\t\tif (y.parent === z) {\n\t\t\tx.parent = y;\n\t\t} else {\n\t\t\tx.parent = y.parent;\n\t\t}\n\n\t\t// as we make changes to x's hierarchy, update size_left of subtree first\n\t\trecomputeTreeMetadata(tree, x);\n\n\t\ty.left = z.left;\n\t\ty.right = z.right;\n\t\ty.parent = z.parent;\n\t\ty.color = z.color;\n\n\t\tif (z === tree.root) {\n\t\t\ttree.root = y;\n\t\t} else {\n\t\t\tif (z === z.parent.left) {\n\t\t\t\tz.parent.left = y;\n\t\t\t} else {\n\t\t\t\tz.parent.right = y;\n\t\t\t}\n\t\t}\n\n\t\tif (y.left !== SENTINEL) {\n\t\t\ty.left.parent = y;\n\t\t}\n\t\tif (y.right !== SENTINEL) {\n\t\t\ty.right.parent = y;\n\t\t}\n\t\t// update metadata\n\t\t// we replace z with y, so in this sub tree, the length change is z.item.length\n\t\ty.size_left = z.size_left;\n\t\ty.lf_left = z.lf_left;\n\t\trecomputeTreeMetadata(tree, y);\n\t}\n\n\tz.detach();\n\n\tif (x.parent.left === x) {\n\t\tlet newSizeLeft = calculateSize(x);\n\t\tlet newLFLeft = calculateLF(x);\n\t\tif (newSizeLeft !== x.parent.size_left || newLFLeft !== x.parent.lf_left) {\n\t\t\tlet delta = newSizeLeft - x.parent.size_left;\n\t\t\tlet lf_delta = newLFLeft - x.parent.lf_left;\n\t\t\tx.parent.size_left = newSizeLeft;\n\t\t\tx.parent.lf_left = newLFLeft;\n\t\t\tupdateTreeMetadata(tree, x.parent, delta, lf_delta);\n\t\t}\n\t}\n\n\trecomputeTreeMetadata(tree, x.parent);\n\n\tif (yWasRed) {\n\t\tresetSentinel();\n\t\treturn;\n\t}\n\n\t// RB-DELETE-FIXUP\n\tlet w: TreeNode;\n\twhile (x !== tree.root && x.color === NodeColor.Black) {\n\t\tif (x === x.parent.left) {\n\t\t\tw = x.parent.right;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tw = x.parent.right;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\t\t\t} else {\n\t\t\t\tif (w.right.color === NodeColor.Black) {\n\t\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\trightRotate(tree, w);\n\t\t\t\t\tw = x.parent.right;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\tleftRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t} else {\n\t\t\tw = x.parent.left;\n\n\t\t\tif (w.color === NodeColor.Red) {\n\t\t\t\tw.color = NodeColor.Black;\n\t\t\t\tx.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tw = x.parent.left;\n\t\t\t}\n\n\t\t\tif (w.left.color === NodeColor.Black && w.right.color === NodeColor.Black) {\n\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\tx = x.parent;\n\n\t\t\t} else {\n\t\t\t\tif (w.left.color === NodeColor.Black) {\n\t\t\t\t\tw.right.color = NodeColor.Black;\n\t\t\t\t\tw.color = NodeColor.Red;\n\t\t\t\t\tleftRotate(tree, w);\n\t\t\t\t\tw = x.parent.left;\n\t\t\t\t}\n\n\t\t\t\tw.color = x.parent.color;\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tw.left.color = NodeColor.Black;\n\t\t\t\trightRotate(tree, x.parent);\n\t\t\t\tx = tree.root;\n\t\t\t}\n\t\t}\n\t}\n\tx.color = NodeColor.Black;\n\tresetSentinel();\n}\n\nexport function fixInsert(tree: PieceTreeBase, x: TreeNode) {\n\trecomputeTreeMetadata(tree, x);\n\n\twhile (x !== tree.root && x.parent.color === NodeColor.Red) {\n\t\tif (x.parent === x.parent.parent.left) {\n\t\t\tconst y = x.parent.parent.right;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.right) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\tleftRotate(tree, x);\n\t\t\t\t}\n\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\trightRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t} else {\n\t\t\tconst y = x.parent.parent.left;\n\n\t\t\tif (y.color === NodeColor.Red) {\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\ty.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tx = x.parent.parent;\n\t\t\t} else {\n\t\t\t\tif (x === x.parent.left) {\n\t\t\t\t\tx = x.parent;\n\t\t\t\t\trightRotate(tree, x);\n\t\t\t\t}\n\t\t\t\tx.parent.color = NodeColor.Black;\n\t\t\t\tx.parent.parent.color = NodeColor.Red;\n\t\t\t\tleftRotate(tree, x.parent.parent);\n\t\t\t}\n\t\t}\n\t}\n\n\ttree.root.color = NodeColor.Black;\n}\n\nexport function updateTreeMetadata(tree: PieceTreeBase, x: TreeNode, delta: number, lineFeedCntDelta: number): void {\n\t// node length change or line feed count change\n\twhile (x !== tree.root && x !== SENTINEL) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lineFeedCntDelta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n\nexport function recomputeTreeMetadata(tree: PieceTreeBase, x: TreeNode) {\n\tlet delta = 0;\n\tlet lf_delta = 0;\n\tif (x === tree.root) {\n\t\treturn;\n\t}\n\n\tif (delta === 0) {\n\t\t// go upwards till the node whose left subtree is changed.\n\t\twhile (x !== tree.root && x === x.parent.right) {\n\t\t\tx = x.parent;\n\t\t}\n\n\t\tif (x === tree.root) {\n\t\t\t// well, it means we add a node to the end (inorder)\n\t\t\treturn;\n\t\t}\n\n\t\t// x is the node whose right subtree is changed.\n\t\tx = x.parent;\n\n\t\tdelta = calculateSize(x.left) - x.size_left;\n\t\tlf_delta = calculateLF(x.left) - x.lf_left;\n\t\tx.size_left += delta;\n\t\tx.lf_left += lf_delta;\n\t}\n\n\t// go upwards till root. O(logN)\n\twhile (x !== tree.root && (delta !== 0 || lf_delta !== 0)) {\n\t\tif (x.parent.left === x) {\n\t\t\tx.parent.size_left += delta;\n\t\t\tx.parent.lf_left += lf_delta;\n\t\t}\n\n\t\tx = x.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as buffer from 'vs/base/common/buffer';\nimport { decodeUTF16LE } from 'vs/editor/common/core/stringBuilder';\n\nfunction escapeNewLine(str: string): string {\n\treturn (\n\t\tstr\n\t\t\t.replace(/\\n/g, '\\\\n')\n\t\t\t.replace(/\\r/g, '\\\\r')\n\t);\n}\n\nexport class TextChange {\n\n\tpublic get oldLength(): number {\n\t\treturn this.oldText.length;\n\t}\n\n\tpublic get oldEnd(): number {\n\t\treturn this.oldPosition + this.oldText.length;\n\t}\n\n\tpublic get newLength(): number {\n\t\treturn this.newText.length;\n\t}\n\n\tpublic get newEnd(): number {\n\t\treturn this.newPosition + this.newText.length;\n\t}\n\n\tconstructor(\n\t\tpublic readonly oldPosition: number,\n\t\tpublic readonly oldText: string,\n\t\tpublic readonly newPosition: number,\n\t\tpublic readonly newText: string\n\t) { }\n\n\tpublic toString(): string {\n\t\tif (this.oldText.length === 0) {\n\t\t\treturn `(insert@${this.oldPosition} \"${escapeNewLine(this.newText)}\")`;\n\t\t}\n\t\tif (this.newText.length === 0) {\n\t\t\treturn `(delete@${this.oldPosition} \"${escapeNewLine(this.oldText)}\")`;\n\t\t}\n\t\treturn `(replace@${this.oldPosition} \"${escapeNewLine(this.oldText)}\" with \"${escapeNewLine(this.newText)}\")`;\n\t}\n\n\tprivate static _writeStringSize(str: string): number {\n\t\treturn (\n\t\t\t4 + 2 * str.length\n\t\t);\n\t}\n\n\tprivate static _writeString(b: Uint8Array, str: string, offset: number): number {\n\t\tconst len = str.length;\n\t\tbuffer.writeUInt32BE(b, len, offset); offset += 4;\n\t\tfor (let i = 0; i < len; i++) {\n\t\t\tbuffer.writeUInt16LE(b, str.charCodeAt(i), offset); offset += 2;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tprivate static _readString(b: Uint8Array, offset: number): string {\n\t\tconst len = buffer.readUInt32BE(b, offset); offset += 4;\n\t\treturn decodeUTF16LE(b, offset, len);\n\t}\n\n\tpublic writeSize(): number {\n\t\treturn (\n\t\t\t+ 4 // oldPosition\n\t\t\t+ 4 // newPosition\n\t\t\t+ TextChange._writeStringSize(this.oldText)\n\t\t\t+ TextChange._writeStringSize(this.newText)\n\t\t);\n\t}\n\n\tpublic write(b: Uint8Array, offset: number): number {\n\t\tbuffer.writeUInt32BE(b, this.oldPosition, offset); offset += 4;\n\t\tbuffer.writeUInt32BE(b, this.newPosition, offset); offset += 4;\n\t\toffset = TextChange._writeString(b, this.oldText, offset);\n\t\toffset = TextChange._writeString(b, this.newText, offset);\n\t\treturn offset;\n\t}\n\n\tpublic static read(b: Uint8Array, offset: number, dest: TextChange[]): number {\n\t\tconst oldPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst newPosition = buffer.readUInt32BE(b, offset); offset += 4;\n\t\tconst oldText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(oldText);\n\t\tconst newText = TextChange._readString(b, offset); offset += TextChange._writeStringSize(newText);\n\t\tdest.push(new TextChange(oldPosition, oldText, newPosition, newText));\n\t\treturn offset;\n\t}\n}\n\nexport function compressConsecutiveTextChanges(prevEdits: TextChange[] | null, currEdits: TextChange[]): TextChange[] {\n\tif (prevEdits === null || prevEdits.length === 0) {\n\t\treturn currEdits;\n\t}\n\tconst compressor = new TextChangeCompressor(prevEdits, currEdits);\n\treturn compressor.compress();\n}\n\nclass TextChangeCompressor {\n\n\tprivate _prevEdits: TextChange[];\n\tprivate _currEdits: TextChange[];\n\n\tprivate _result: TextChange[];\n\tprivate _resultLen: number;\n\n\tprivate _prevLen: number;\n\tprivate _prevDeltaOffset: number;\n\n\tprivate _currLen: number;\n\tprivate _currDeltaOffset: number;\n\n\tconstructor(prevEdits: TextChange[], currEdits: TextChange[]) {\n\t\tthis._prevEdits = prevEdits;\n\t\tthis._currEdits = currEdits;\n\n\t\tthis._result = [];\n\t\tthis._resultLen = 0;\n\n\t\tthis._prevLen = this._prevEdits.length;\n\t\tthis._prevDeltaOffset = 0;\n\n\t\tthis._currLen = this._currEdits.length;\n\t\tthis._currDeltaOffset = 0;\n\t}\n\n\tpublic compress(): TextChange[] {\n\t\tlet prevIndex = 0;\n\t\tlet currIndex = 0;\n\n\t\tlet prevEdit = this._getPrev(prevIndex);\n\t\tlet currEdit = this._getCurr(currIndex);\n\n\t\twhile (prevIndex < this._prevLen || currIndex < this._currLen) {\n\n\t\t\tif (prevEdit === null) {\n\t\t\t\tthis._acceptCurr(currEdit!);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit === null) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldEnd <= prevEdit.newPosition) {\n\t\t\t\tthis._acceptCurr(currEdit);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newEnd <= currEdit.oldPosition) {\n\t\t\t\tthis._acceptPrev(prevEdit);\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (currEdit.oldPosition < prevEdit.newPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newPosition - currEdit.oldPosition);\n\t\t\t\tthis._acceptCurr(e1);\n\t\t\t\tcurrEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (prevEdit.newPosition < currEdit.oldPosition) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldPosition - prevEdit.newPosition);\n\t\t\t\tthis._acceptPrev(e1);\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point, currEdit.oldPosition === prevEdit.newPosition\n\n\t\t\tlet mergePrev: TextChange;\n\t\t\tlet mergeCurr: TextChange;\n\n\t\t\tif (currEdit.oldEnd === prevEdit.newEnd) {\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else if (currEdit.oldEnd < prevEdit.newEnd) {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitPrev(prevEdit, currEdit.oldLength);\n\t\t\t\tmergePrev = e1;\n\t\t\t\tmergeCurr = currEdit;\n\t\t\t\tprevEdit = e2;\n\t\t\t\tcurrEdit = this._getCurr(++currIndex);\n\t\t\t} else {\n\t\t\t\tconst [e1, e2] = TextChangeCompressor._splitCurr(currEdit, prevEdit.newLength);\n\t\t\t\tmergePrev = prevEdit;\n\t\t\t\tmergeCurr = e1;\n\t\t\t\tprevEdit = this._getPrev(++prevIndex);\n\t\t\t\tcurrEdit = e2;\n\t\t\t}\n\n\t\t\tthis._result[this._resultLen++] = new TextChange(\n\t\t\t\tmergePrev.oldPosition,\n\t\t\t\tmergePrev.oldText,\n\t\t\t\tmergeCurr.newPosition,\n\t\t\t\tmergeCurr.newText\n\t\t\t);\n\t\t\tthis._prevDeltaOffset += mergePrev.newLength - mergePrev.oldLength;\n\t\t\tthis._currDeltaOffset += mergeCurr.newLength - mergeCurr.oldLength;\n\t\t}\n\n\t\tconst merged = TextChangeCompressor._merge(this._result);\n\t\tconst cleaned = TextChangeCompressor._removeNoOps(merged);\n\t\treturn cleaned;\n\t}\n\n\tprivate _acceptCurr(currEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebaseCurr(this._prevDeltaOffset, currEdit);\n\t\tthis._currDeltaOffset += currEdit.newLength - currEdit.oldLength;\n\t}\n\n\tprivate _getCurr(currIndex: number): TextChange | null {\n\t\treturn (currIndex < this._currLen ? this._currEdits[currIndex] : null);\n\t}\n\n\tprivate _acceptPrev(prevEdit: TextChange): void {\n\t\tthis._result[this._resultLen++] = TextChangeCompressor._rebasePrev(this._currDeltaOffset, prevEdit);\n\t\tthis._prevDeltaOffset += prevEdit.newLength - prevEdit.oldLength;\n\t}\n\n\tprivate _getPrev(prevIndex: number): TextChange | null {\n\t\treturn (prevIndex < this._prevLen ? this._prevEdits[prevIndex] : null);\n\t}\n\n\tprivate static _rebaseCurr(prevDeltaOffset: number, currEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tcurrEdit.oldPosition - prevDeltaOffset,\n\t\t\tcurrEdit.oldText,\n\t\t\tcurrEdit.newPosition,\n\t\t\tcurrEdit.newText\n\t\t);\n\t}\n\n\tprivate static _rebasePrev(currDeltaOffset: number, prevEdit: TextChange): TextChange {\n\t\treturn new TextChange(\n\t\t\tprevEdit.oldPosition,\n\t\t\tprevEdit.oldText,\n\t\t\tprevEdit.newPosition + currDeltaOffset,\n\t\t\tprevEdit.newText\n\t\t);\n\t}\n\n\tprivate static _splitPrev(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.newText.substr(0, offset);\n\t\tconst postText = edit.newText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tedit.oldText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tpreText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldEnd,\n\t\t\t\t'',\n\t\t\t\tedit.newPosition + offset,\n\t\t\t\tpostText\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _splitCurr(edit: TextChange, offset: number): [TextChange, TextChange] {\n\t\tconst preText = edit.oldText.substr(0, offset);\n\t\tconst postText = edit.oldText.substr(offset);\n\n\t\treturn [\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition,\n\t\t\t\tpreText,\n\t\t\t\tedit.newPosition,\n\t\t\t\tedit.newText\n\t\t\t),\n\t\t\tnew TextChange(\n\t\t\t\tedit.oldPosition + offset,\n\t\t\t\tpostText,\n\t\t\t\tedit.newEnd,\n\t\t\t\t''\n\t\t\t)\n\t\t];\n\t}\n\n\tprivate static _merge(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tlet result: TextChange[] = [], resultLen = 0;\n\n\t\tlet prev = edits[0];\n\t\tfor (let i = 1; i < edits.length; i++) {\n\t\t\tconst curr = edits[i];\n\n\t\t\tif (prev.oldEnd === curr.oldPosition) {\n\t\t\t\t// Merge into `prev`\n\t\t\t\tprev = new TextChange(\n\t\t\t\t\tprev.oldPosition,\n\t\t\t\t\tprev.oldText + curr.oldText,\n\t\t\t\t\tprev.newPosition,\n\t\t\t\t\tprev.newText + curr.newText\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = curr;\n\t\t\t}\n\t\t}\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _removeNoOps(edits: TextChange[]): TextChange[] {\n\t\tif (edits.length === 0) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tlet result: TextChange[] = [], resultLen = 0;\n\n\t\tfor (let i = 0; i < edits.length; i++) {\n\t\t\tconst edit = edits[i];\n\n\t\t\tif (edit.oldText === edit.newText) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult[resultLen++] = edit;\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as strings from 'vs/base/common/strings';\nimport { WordCharacterClass, WordCharacterClassifier, getMapForWordSeparators } from 'vs/editor/common/controller/wordCharacterClassifier';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EndOfLinePreference, FindMatch } from 'vs/editor/common/model';\nimport { TextModel } from 'vs/editor/common/model/textModel';\n\nconst LIMIT_FIND_COUNT = 999;\n\nexport class SearchParams {\n\tpublic readonly searchString: string;\n\tpublic readonly isRegex: boolean;\n\tpublic readonly matchCase: boolean;\n\tpublic readonly wordSeparators: string | null;\n\n\tconstructor(searchString: string, isRegex: boolean, matchCase: boolean, wordSeparators: string | null) {\n\t\tthis.searchString = searchString;\n\t\tthis.isRegex = isRegex;\n\t\tthis.matchCase = matchCase;\n\t\tthis.wordSeparators = wordSeparators;\n\t}\n\n\tpublic parseSearchRequest(): SearchData | null {\n\t\tif (this.searchString === '') {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Try to create a RegExp out of the params\n\t\tlet multiline: boolean;\n\t\tif (this.isRegex) {\n\t\t\tmultiline = isMultilineRegexSource(this.searchString);\n\t\t} else {\n\t\t\tmultiline = (this.searchString.indexOf('\\n') >= 0);\n\t\t}\n\n\t\tlet regex: RegExp | null = null;\n\t\ttry {\n\t\t\tregex = strings.createRegExp(this.searchString, this.isRegex, {\n\t\t\t\tmatchCase: this.matchCase,\n\t\t\t\twholeWord: false,\n\t\t\t\tmultiline: multiline,\n\t\t\t\tglobal: true,\n\t\t\t\tunicode: true\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!regex) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet canUseSimpleSearch = (!this.isRegex && !multiline);\n\t\tif (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n\t\t\t// casing might make a difference\n\t\t\tcanUseSimpleSearch = this.matchCase;\n\t\t}\n\n\t\treturn new SearchData(regex, this.wordSeparators ? getMapForWordSeparators(this.wordSeparators) : null, canUseSimpleSearch ? this.searchString : null);\n\t}\n}\n\nexport function isMultilineRegexSource(searchString: string): boolean {\n\tif (!searchString || searchString.length === 0) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = searchString.length; i < len; i++) {\n\t\tconst chCode = searchString.charCodeAt(i);\n\n\t\tif (chCode === CharCode.Backslash) {\n\n\t\t\t// move to next char\n\t\t\ti++;\n\n\t\t\tif (i >= len) {\n\t\t\t\t// string ends with a \\\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst nextChCode = searchString.charCodeAt(i);\n\t\t\tif (nextChCode === CharCode.n || nextChCode === CharCode.r || nextChCode === CharCode.W || nextChCode === CharCode.w) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport class SearchData {\n\n\t/**\n\t * The regex to search for. Always defined.\n\t */\n\tpublic readonly regex: RegExp;\n\t/**\n\t * The word separator classifier.\n\t */\n\tpublic readonly wordSeparators: WordCharacterClassifier | null;\n\t/**\n\t * The simple string to search for (if possible).\n\t */\n\tpublic readonly simpleSearch: string | null;\n\n\tconstructor(regex: RegExp, wordSeparators: WordCharacterClassifier | null, simpleSearch: string | null) {\n\t\tthis.regex = regex;\n\t\tthis.wordSeparators = wordSeparators;\n\t\tthis.simpleSearch = simpleSearch;\n\t}\n}\n\nexport function createFindMatch(range: Range, rawMatches: RegExpExecArray, captureMatches: boolean): FindMatch {\n\tif (!captureMatches) {\n\t\treturn new FindMatch(range, null);\n\t}\n\tlet matches: string[] = [];\n\tfor (let i = 0, len = rawMatches.length; i < len; i++) {\n\t\tmatches[i] = rawMatches[i];\n\t}\n\treturn new FindMatch(range, matches);\n}\n\nclass LineFeedCounter {\n\n\tprivate readonly _lineFeedsOffsets: number[];\n\n\tconstructor(text: string) {\n\t\tlet lineFeedsOffsets: number[] = [];\n\t\tlet lineFeedsOffsetsLen = 0;\n\t\tfor (let i = 0, textLen = text.length; i < textLen; i++) {\n\t\t\tif (text.charCodeAt(i) === CharCode.LineFeed) {\n\t\t\t\tlineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n\t\t\t}\n\t\t}\n\t\tthis._lineFeedsOffsets = lineFeedsOffsets;\n\t}\n\n\tpublic findLineFeedCountBeforeOffset(offset: number): number {\n\t\tconst lineFeedsOffsets = this._lineFeedsOffsets;\n\t\tlet min = 0;\n\t\tlet max = lineFeedsOffsets.length - 1;\n\n\t\tif (max === -1) {\n\t\t\t// no line feeds\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (offset <= lineFeedsOffsets[0]) {\n\t\t\t// before first line feed\n\t\t\treturn 0;\n\t\t}\n\n\t\twhile (min < max) {\n\t\t\tconst mid = min + ((max - min) / 2 >> 0);\n\n\t\t\tif (lineFeedsOffsets[mid] >= offset) {\n\t\t\t\tmax = mid - 1;\n\t\t\t} else {\n\t\t\t\tif (lineFeedsOffsets[mid + 1] >= offset) {\n\t\t\t\t\t// bingo!\n\t\t\t\t\tmin = mid;\n\t\t\t\t\tmax = mid;\n\t\t\t\t} else {\n\t\t\t\t\tmin = mid + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn min + 1;\n\t}\n}\n\nexport class TextModelSearch {\n\n\tpublic static findMatches(model: TextModel, searchParams: SearchParams, searchRange: Range, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindMatchesMultiline(model, searchRange, new Searcher(searchData.wordSeparators, searchData.regex), captureMatches, limitResultCount);\n\t\t}\n\t\treturn this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t/**\n\t * Multiline search always executes on the lines concatenated with \\n.\n\t * We must therefore compensate for the count of \\n in case the model is CRLF\n\t */\n\tprivate static _getMultilineMatchRange(model: TextModel, deltaOffset: number, text: string, lfCounter: LineFeedCounter | null, matchIndex: number, match0: string): Range {\n\t\tlet startOffset: number;\n\t\tlet lineFeedCountBeforeMatch = 0;\n\t\tif (lfCounter) {\n\t\t\tlineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n\t\t\tstartOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tstartOffset = deltaOffset + matchIndex;\n\t\t}\n\n\t\tlet endOffset: number;\n\t\tif (lfCounter) {\n\t\t\tlet lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n\t\t\tlet lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n\t\t\tendOffset = startOffset + match0.length + lineFeedCountInMatch /* add as many \\r as there were \\n */;\n\t\t} else {\n\t\t\tendOffset = startOffset + match0.length;\n\t\t}\n\n\t\tconst startPosition = model.getPositionAt(startOffset);\n\t\tconst endPosition = model.getPositionAt(endOffset);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tprivate static _doFindMatchesMultiline(model: TextModel, searchRange: Range, searcher: Searcher, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(searchRange, EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\n\t\tconst result: FindMatch[] = [];\n\t\tlet counter = 0;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tresult[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n\t\t\tif (counter >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _doFindMatchesLineByLine(model: TextModel, searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\n\t\t// Early case for a search range that starts & stops on the same line number\n\t\tif (searchRange.startLineNumber === searchRange.endLineNumber) {\n\t\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\t// Collect results from first line\n\t\tconst text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n\n\t\t// Collect results from middle lines\n\t\tfor (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n\t\t\tresultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\t// Collect results from last line\n\t\tif (resultLen < limitResultCount) {\n\t\t\tconst text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _findMatchesInLine(searchData: SearchData, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\tpublic static findNextMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindNextMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst searchTextStart = new Position(searchStart.lineNumber, 1);\n\t\tconst deltaOffset = model.getOffsetAt(searchTextStart);\n\t\tconst lineCount = model.getLineCount();\n\t\t// We always execute multiline search over the lines joined with \\n\n\t\t// This makes it that \\n will match the EOL for both CRLF and LF models\n\t\t// We compensate for offset errors in `_getMultilineMatchRange`\n\t\tconst text = model.getValueInRange(new Range(searchTextStart.lineNumber, searchTextStart.column, lineCount, model.getLineMaxColumn(lineCount)), EndOfLinePreference.LF);\n\t\tconst lfCounter = (model.getEOL() === '\\r\\n' ? new LineFeedCounter(text) : null);\n\t\tsearcher.reset(searchStart.column - 1);\n\t\tlet m = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tthis._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\n\t\tif (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n\t\t\t// Try again from the top\n\t\t\treturn this._doFindNextMatchMultiline(model, new Position(1, 1), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindNextMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber);\n\t\tconst r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (startLineNumber + i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findFirstMatchInLine(searcher: Searcher, text: string, lineNumber: number, fromColumn: number, captureMatches: boolean): FindMatch | null {\n\t\t// Set regex to search from column\n\t\tsearcher.reset(fromColumn - 1);\n\t\tconst m: RegExpExecArray | null = searcher.next(text);\n\t\tif (m) {\n\t\t\treturn createFindMatch(\n\t\t\t\tnew Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length),\n\t\t\t\tm,\n\t\t\t\tcaptureMatches\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static findPreviousMatch(model: TextModel, searchParams: SearchParams, searchStart: Position, captureMatches: boolean): FindMatch | null {\n\t\tconst searchData = searchParams.parseSearchRequest();\n\t\tif (!searchData) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tif (searchData.regex.multiline) {\n\t\t\treturn this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n\t\t}\n\t\treturn this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n\t}\n\n\tprivate static _doFindPreviousMatchMultiline(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst matches = this._doFindMatchesMultiline(model, new Range(1, 1, searchStart.lineNumber, searchStart.column), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n\t\tif (matches.length > 0) {\n\t\t\treturn matches[matches.length - 1];\n\t\t}\n\n\t\tconst lineCount = model.getLineCount();\n\t\tif (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n\t\t\t// Try again with all content\n\t\t\treturn this._doFindPreviousMatchMultiline(model, new Position(lineCount, model.getLineMaxColumn(lineCount)), searcher, captureMatches);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _doFindPreviousMatchLineByLine(model: TextModel, searchStart: Position, searcher: Searcher, captureMatches: boolean): FindMatch | null {\n\t\tconst lineCount = model.getLineCount();\n\t\tconst startLineNumber = searchStart.lineNumber;\n\n\t\t// Look in first line\n\t\tconst text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n\t\tconst r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n\t\tif (r) {\n\t\t\treturn r;\n\t\t}\n\n\t\tfor (let i = 1; i <= lineCount; i++) {\n\t\t\tconst lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n\t\t\tconst text = model.getLineContent(lineIndex + 1);\n\t\t\tconst r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n\t\t\tif (r) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _findLastMatchInLine(searcher: Searcher, text: string, lineNumber: number, captureMatches: boolean): FindMatch | null {\n\t\tlet bestResult: FindMatch | null = null;\n\t\tlet m: RegExpExecArray | null;\n\t\tsearcher.reset(0);\n\t\twhile ((m = searcher.next(text))) {\n\t\t\tbestResult = createFindMatch(new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length), m, captureMatches);\n\t\t}\n\t\treturn bestResult;\n\t}\n}\n\nfunction leftIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex === 0) {\n\t\t// Match starts at start of string\n\t\treturn true;\n\t}\n\n\tconst charBefore = text.charCodeAt(matchStartIndex - 1);\n\tif (wordSeparators.get(charBefore) !== WordCharacterClass.Regular) {\n\t\t// The character before the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charBefore === CharCode.CarriageReturn || charBefore === CharCode.LineFeed) {\n\t\t// The character before the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst firstCharInMatch = text.charCodeAt(matchStartIndex);\n\t\tif (wordSeparators.get(firstCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The first character inside the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction rightIsWordBounday(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\tif (matchStartIndex + matchLength === textLength) {\n\t\t// Match ends at end of string\n\t\treturn true;\n\t}\n\n\tconst charAfter = text.charCodeAt(matchStartIndex + matchLength);\n\tif (wordSeparators.get(charAfter) !== WordCharacterClass.Regular) {\n\t\t// The character after the match is a word separator\n\t\treturn true;\n\t}\n\n\tif (charAfter === CharCode.CarriageReturn || charAfter === CharCode.LineFeed) {\n\t\t// The character after the match is line break or carriage return.\n\t\treturn true;\n\t}\n\n\tif (matchLength > 0) {\n\t\tconst lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n\t\tif (wordSeparators.get(lastCharInMatch) !== WordCharacterClass.Regular) {\n\t\t\t// The last character in the match is a word separator\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function isValidMatch(wordSeparators: WordCharacterClassifier, text: string, textLength: number, matchStartIndex: number, matchLength: number): boolean {\n\treturn (\n\t\tleftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t\t&& rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n\t);\n}\n\nexport class Searcher {\n\tpublic readonly _wordSeparators: WordCharacterClassifier | null;\n\tprivate readonly _searchRegex: RegExp;\n\tprivate _prevMatchStartIndex: number;\n\tprivate _prevMatchLength: number;\n\n\tconstructor(wordSeparators: WordCharacterClassifier | null, searchRegex: RegExp,) {\n\t\tthis._wordSeparators = wordSeparators;\n\t\tthis._searchRegex = searchRegex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic reset(lastIndex: number): void {\n\t\tthis._searchRegex.lastIndex = lastIndex;\n\t\tthis._prevMatchStartIndex = -1;\n\t\tthis._prevMatchLength = 0;\n\t}\n\n\tpublic next(text: string): RegExpExecArray | null {\n\t\tconst textLength = text.length;\n\n\t\tlet m: RegExpExecArray | null;\n\t\tdo {\n\t\t\tif (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n\t\t\t\t// Reached the end of the line\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tm = this._searchRegex.exec(text);\n\t\t\tif (!m) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst matchStartIndex = m.index;\n\t\t\tconst matchLength = m[0].length;\n\t\t\tif (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n\t\t\t\tif (matchLength === 0) {\n\t\t\t\t\t// the search result is an empty string and won't advance `regex.lastIndex`, so `regex.exec` will stuck here\n\t\t\t\t\t// we attempt to recover from that by advancing by two if surrogate pair found and by one otherwise\n\t\t\t\t\tif (strings.getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._searchRegex.lastIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t// Exit early if the regex matches the same range twice\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._prevMatchStartIndex = matchStartIndex;\n\t\t\tthis._prevMatchLength = matchLength;\n\n\t\t\tif (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n\t\t\t\treturn m;\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { FindMatch, ITextSnapshot } from 'vs/editor/common/model';\nimport { NodeColor, SENTINEL, TreeNode, fixInsert, leftest, rbDelete, righttest, updateTreeMetadata } from 'vs/editor/common/model/pieceTreeTextBuffer/rbTreeBase';\nimport { SearchData, Searcher, createFindMatch, isValidMatch } from 'vs/editor/common/model/textModelSearch';\n\n// const lfRegex = new RegExp(/\\r\\n|\\r|\\n/g);\nexport const AverageBufferSize = 65535;\n\nexport function createUintArray(arr: number[]): Uint32Array | Uint16Array {\n\tlet r;\n\tif (arr[arr.length - 1] < 65536) {\n\t\tr = new Uint16Array(arr.length);\n\t} else {\n\t\tr = new Uint32Array(arr.length);\n\t}\n\tr.set(arr, 0);\n\treturn r;\n}\n\nexport class LineStarts {\n\tconstructor(\n\t\tpublic readonly lineStarts: Uint32Array | Uint16Array | number[],\n\t\tpublic readonly cr: number,\n\t\tpublic readonly lf: number,\n\t\tpublic readonly crlf: number,\n\t\tpublic readonly isBasicASCII: boolean\n\t) { }\n}\n\nexport function createLineStartsFast(str: string, readonly: boolean = true): Uint32Array | Uint16Array | number[] {\n\tlet r: number[] = [0], rLength = 1;\n\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tr[rLength++] = i + 1;\n\t\t}\n\t}\n\tif (readonly) {\n\t\treturn createUintArray(r);\n\t} else {\n\t\treturn r;\n\t}\n}\n\nexport function createLineStarts(r: number[], str: string): LineStarts {\n\tr.length = 0;\n\tr[0] = 0;\n\tlet rLength = 1;\n\tlet cr = 0, lf = 0, crlf = 0;\n\tlet isBasicASCII = true;\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chr = str.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (i + 1 < len && str.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\tcrlf++;\n\t\t\t\tr[rLength++] = i + 2;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\tcr++;\n\t\t\t\t// \\r... case\n\t\t\t\tr[rLength++] = i + 1;\n\t\t\t}\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\tlf++;\n\t\t\tr[rLength++] = i + 1;\n\t\t} else {\n\t\t\tif (isBasicASCII) {\n\t\t\t\tif (chr !== CharCode.Tab && (chr < 32 || chr > 126)) {\n\t\t\t\t\tisBasicASCII = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tconst result = new LineStarts(createUintArray(r), cr, lf, crlf, isBasicASCII);\n\tr.length = 0;\n\n\treturn result;\n}\n\nexport interface NodePosition {\n\t/**\n\t * Piece Index\n\t */\n\tnode: TreeNode;\n\t/**\n\t * remainer in current piece.\n\t*/\n\tremainder: number;\n\t/**\n\t * node start offset in document.\n\t */\n\tnodeStartOffset: number;\n}\n\nexport interface BufferCursor {\n\t/**\n\t * Line number in current buffer\n\t */\n\tline: number;\n\t/**\n\t * Column number in current buffer\n\t */\n\tcolumn: number;\n}\n\nexport class Piece {\n\treadonly bufferIndex: number;\n\treadonly start: BufferCursor;\n\treadonly end: BufferCursor;\n\treadonly length: number;\n\treadonly lineFeedCnt: number;\n\n\tconstructor(bufferIndex: number, start: BufferCursor, end: BufferCursor, lineFeedCnt: number, length: number) {\n\t\tthis.bufferIndex = bufferIndex;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.lineFeedCnt = lineFeedCnt;\n\t\tthis.length = length;\n\t}\n}\n\nexport class StringBuffer {\n\tbuffer: string;\n\tlineStarts: Uint32Array | Uint16Array | number[];\n\n\tconstructor(buffer: string, lineStarts: Uint32Array | Uint16Array | number[]) {\n\t\tthis.buffer = buffer;\n\t\tthis.lineStarts = lineStarts;\n\t}\n}\n\n/**\n * Readonly snapshot for piece tree.\n * In a real multiple thread environment, to make snapshot reading always work correctly, we need to\n * 1. Make TreeNode.piece immutable, then reading and writing can run in parallel.\n * 2. TreeNode/Buffers normalization should not happen during snapshot reading.\n */\nclass PieceTreeSnapshot implements ITextSnapshot {\n\tprivate readonly _pieces: Piece[];\n\tprivate _index: number;\n\tprivate readonly _tree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\n\tconstructor(tree: PieceTreeBase, BOM: string) {\n\t\tthis._pieces = [];\n\t\tthis._tree = tree;\n\t\tthis._BOM = BOM;\n\t\tthis._index = 0;\n\t\tif (tree.root !== SENTINEL) {\n\t\t\ttree.iterate(tree.root, node => {\n\t\t\t\tif (node !== SENTINEL) {\n\t\t\t\t\tthis._pieces.push(node.piece);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\tread(): string | null {\n\t\tif (this._pieces.length === 0) {\n\t\t\tif (this._index === 0) {\n\t\t\t\tthis._index++;\n\t\t\t\treturn this._BOM;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tif (this._index > this._pieces.length - 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._index === 0) {\n\t\t\treturn this._BOM + this._tree.getPieceContent(this._pieces[this._index++]);\n\t\t}\n\t\treturn this._tree.getPieceContent(this._pieces[this._index++]);\n\t}\n}\n\ninterface CacheEntry {\n\tnode: TreeNode;\n\tnodeStartOffset: number;\n\tnodeStartLineNumber?: number;\n}\n\nclass PieceTreeSearchCache {\n\tprivate readonly _limit: number;\n\tprivate _cache: CacheEntry[];\n\n\tconstructor(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis._cache = [];\n\t}\n\n\tpublic get(offset: number): CacheEntry | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tlet nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartOffset <= offset && nodePos.nodeStartOffset + nodePos.node.piece.length >= offset) {\n\t\t\t\treturn nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get2(lineNumber: number): { node: TreeNode, nodeStartOffset: number, nodeStartLineNumber: number } | null {\n\t\tfor (let i = this._cache.length - 1; i >= 0; i--) {\n\t\t\tlet nodePos = this._cache[i];\n\t\t\tif (nodePos.nodeStartLineNumber && nodePos.nodeStartLineNumber < lineNumber && nodePos.nodeStartLineNumber + nodePos.node.piece.lineFeedCnt >= lineNumber) {\n\t\t\t\treturn <{ node: TreeNode, nodeStartOffset: number, nodeStartLineNumber: number }>nodePos;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic set(nodePosition: CacheEntry) {\n\t\tif (this._cache.length >= this._limit) {\n\t\t\tthis._cache.shift();\n\t\t}\n\t\tthis._cache.push(nodePosition);\n\t}\n\n\tpublic validate(offset: number) {\n\t\tlet hasInvalidVal = false;\n\t\tlet tmp: Array<CacheEntry | null> = this._cache;\n\t\tfor (let i = 0; i < tmp.length; i++) {\n\t\t\tlet nodePos = tmp[i]!;\n\t\t\tif (nodePos.node.parent === null || nodePos.nodeStartOffset >= offset) {\n\t\t\t\ttmp[i] = null;\n\t\t\t\thasInvalidVal = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (hasInvalidVal) {\n\t\t\tlet newArr: CacheEntry[] = [];\n\t\t\tfor (const entry of tmp) {\n\t\t\t\tif (entry !== null) {\n\t\t\t\t\tnewArr.push(entry);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._cache = newArr;\n\t\t}\n\t}\n}\n\nexport class PieceTreeBase {\n\troot!: TreeNode;\n\tprotected _buffers!: StringBuffer[]; // 0 is change buffer, others are readonly original buffer.\n\tprotected _lineCnt!: number;\n\tprotected _length!: number;\n\tprotected _EOL!: '\\r\\n' | '\\n';\n\tprotected _EOLLength!: number;\n\tprotected _EOLNormalized!: boolean;\n\tprivate _lastChangeBufferPos!: BufferCursor;\n\tprivate _searchCache!: PieceTreeSearchCache;\n\tprivate _lastVisitedLine!: { lineNumber: number; value: string; };\n\n\tconstructor(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis.create(chunks, eol, eolNormalized);\n\t}\n\n\tcreate(chunks: StringBuffer[], eol: '\\r\\n' | '\\n', eolNormalized: boolean) {\n\t\tthis._buffers = [\n\t\t\tnew StringBuffer('', [0])\n\t\t];\n\t\tthis._lastChangeBufferPos = { line: 0, column: 0 };\n\t\tthis.root = SENTINEL;\n\t\tthis._lineCnt = 1;\n\t\tthis._length = 0;\n\t\tthis._EOL = eol;\n\t\tthis._EOLLength = eol.length;\n\t\tthis._EOLNormalized = eolNormalized;\n\n\t\tlet lastNode: TreeNode | null = null;\n\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\tif (chunks[i].buffer.length > 0) {\n\t\t\t\tif (!chunks[i].lineStarts) {\n\t\t\t\t\tchunks[i].lineStarts = createLineStartsFast(chunks[i].buffer);\n\t\t\t\t}\n\n\t\t\t\tlet piece = new Piece(\n\t\t\t\t\ti + 1,\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: chunks[i].lineStarts.length - 1, column: chunks[i].buffer.length - chunks[i].lineStarts[chunks[i].lineStarts.length - 1] },\n\t\t\t\t\tchunks[i].lineStarts.length - 1,\n\t\t\t\t\tchunks[i].buffer.length\n\t\t\t\t);\n\t\t\t\tthis._buffers.push(chunks[i]);\n\t\t\t\tlastNode = this.rbInsertRight(lastNode, piece);\n\t\t\t}\n\t\t}\n\n\t\tthis._searchCache = new PieceTreeSearchCache(1);\n\t\tthis._lastVisitedLine = { lineNumber: 0, value: '' };\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tnormalizeEOL(eol: '\\r\\n' | '\\n') {\n\t\tlet averageBufferSize = AverageBufferSize;\n\t\tlet min = averageBufferSize - Math.floor(averageBufferSize / 3);\n\t\tlet max = min * 2;\n\n\t\tlet tempChunk = '';\n\t\tlet tempChunkLen = 0;\n\t\tlet chunks: StringBuffer[] = [];\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tlet str = this.getNodeContent(node);\n\t\t\tlet len = str.length;\n\t\t\tif (tempChunkLen <= min || tempChunkLen + len < max) {\n\t\t\t\ttempChunk += str;\n\t\t\t\ttempChunkLen += len;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// flush anyways\n\t\t\tlet text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t\ttempChunk = str;\n\t\t\ttempChunkLen = len;\n\t\t\treturn true;\n\t\t});\n\n\t\tif (tempChunkLen > 0) {\n\t\t\tlet text = tempChunk.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\tchunks.push(new StringBuffer(text, createLineStartsFast(text)));\n\t\t}\n\n\t\tthis.create(chunks, eol, true);\n\t}\n\n\t// #region Buffer API\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._EOL;\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._EOL = newEOL;\n\t\tthis._EOLLength = this._EOL.length;\n\t\tthis.normalizeEOL(newEOL);\n\t}\n\n\tpublic createSnapshot(BOM: string): ITextSnapshot {\n\t\treturn new PieceTreeSnapshot(this, BOM);\n\t}\n\n\tpublic equal(other: PieceTreeBase): boolean {\n\t\tif (this.getLength() !== other.getLength()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getLineCount() !== other.getLineCount()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet offset = 0;\n\t\tlet ret = this.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet str = this.getNodeContent(node);\n\t\t\tlet len = str.length;\n\t\t\tlet startPosition = other.nodeAt(offset);\n\t\t\tlet endPosition = other.nodeAt(offset + len);\n\t\t\tlet val = other.getValueInRange2(startPosition, endPosition);\n\n\t\t\treturn str === val;\n\t\t});\n\n\t\treturn ret;\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\tlet leftLen = 0; // inorder\n\n\t\tlet x = this.root;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left + 1 >= lineNumber) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt + 1 >= lineNumber) {\n\t\t\t\tleftLen += x.size_left;\n\t\t\t\t// lineNumber >= 2\n\t\t\t\tlet accumualtedValInCurrentIndex = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\treturn leftLen += accumualtedValInCurrentIndex + column - 1;\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tleftLen += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn leftLen;\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tlet x = this.root;\n\t\tlet lfCnt = 0;\n\t\tlet originalOffset = offset;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left !== 0 && x.size_left >= offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tlet out = this.getIndexOf(x, offset - x.size_left);\n\n\t\t\t\tlfCnt += x.lf_left + out.index;\n\n\t\t\t\tif (out.index === 0) {\n\t\t\t\t\tlet lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tlet column = originalOffset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t}\n\n\t\t\t\treturn new Position(lfCnt + 1, out.remainder + 1);\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\n\t\t\t\tif (x.right === SENTINEL) {\n\t\t\t\t\t// last node\n\t\t\t\t\tlet lineStartOffset = this.getOffsetAt(lfCnt + 1, 1);\n\t\t\t\t\tlet column = originalOffset - offset - lineStartOffset;\n\t\t\t\t\treturn new Position(lfCnt + 1, column + 1);\n\t\t\t\t} else {\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn new Position(1, 1);\n\t}\n\n\tpublic getValueInRange(range: Range, eol?: string): string {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet startPosition = this.nodeAt2(range.startLineNumber, range.startColumn);\n\t\tlet endPosition = this.nodeAt2(range.endLineNumber, range.endColumn);\n\n\t\tlet value = this.getValueInRange2(startPosition, endPosition);\n\t\tif (eol) {\n\t\t\tif (eol !== this._EOL || !this._EOLNormalized) {\n\t\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t}\n\n\t\t\tif (eol === this.getEOL() && this._EOLNormalized) {\n\t\t\t\tif (eol === '\\r\\n') {\n\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\treturn value.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic getValueInRange2(startPosition: NodePosition, endPosition: NodePosition): string {\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tlet node = startPosition.node;\n\t\t\tlet buffer = this._buffers[node.piece.bufferIndex].buffer;\n\t\t\tlet startOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\t\treturn buffer.substring(startOffset + startPosition.remainder, startOffset + endPosition.remainder);\n\t\t}\n\n\t\tlet x = startPosition.node;\n\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\tlet ret = buffer.substring(startOffset + startPosition.remainder, startOffset + x.piece.length);\n\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\tif (x === endPosition.node) {\n\t\t\t\tret += buffer.substring(startOffset, startOffset + endPosition.remainder);\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\tlet lines: string[] = [];\n\t\tlet linesLength = 0;\n\t\tlet currentLine = '';\n\t\tlet danglingCR = false;\n\n\t\tthis.iterate(this.root, node => {\n\t\t\tif (node === SENTINEL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst piece = node.piece;\n\t\t\tlet pieceLength = piece.length;\n\t\t\tif (pieceLength === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst buffer = this._buffers[piece.bufferIndex].buffer;\n\t\t\tconst lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\n\t\t\tconst pieceStartLine = piece.start.line;\n\t\t\tconst pieceEndLine = piece.end.line;\n\t\t\tlet pieceStartOffset = lineStarts[pieceStartLine] + piece.start.column;\n\n\t\t\tif (danglingCR) {\n\t\t\t\tif (buffer.charCodeAt(pieceStartOffset) === CharCode.LineFeed) {\n\t\t\t\t\t// pretend the \\n was in the previous piece..\n\t\t\t\t\tpieceStartOffset++;\n\t\t\t\t\tpieceLength--;\n\t\t\t\t}\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t\tcurrentLine = '';\n\t\t\t\tdanglingCR = false;\n\t\t\t\tif (pieceLength === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pieceStartLine === pieceEndLine) {\n\t\t\t\t// this piece has no new lines\n\t\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(pieceStartOffset + pieceLength - 1) === CharCode.CarriageReturn) {\n\t\t\t\t\tdanglingCR = true;\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength - 1);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine += buffer.substr(pieceStartOffset, pieceLength);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// add the text before the first line start in this piece\n\t\t\tcurrentLine += (\n\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t? buffer.substring(pieceStartOffset, Math.max(pieceStartOffset, lineStarts[pieceStartLine + 1] - this._EOLLength))\n\t\t\t\t\t: buffer.substring(pieceStartOffset, lineStarts[pieceStartLine + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t);\n\t\t\tlines[linesLength++] = currentLine;\n\n\t\t\tfor (let line = pieceStartLine + 1; line < pieceEndLine; line++) {\n\t\t\t\tcurrentLine = (\n\t\t\t\t\tthis._EOLNormalized\n\t\t\t\t\t\t? buffer.substring(lineStarts[line], lineStarts[line + 1] - this._EOLLength)\n\t\t\t\t\t\t: buffer.substring(lineStarts[line], lineStarts[line + 1]).replace(/(\\r\\n|\\r|\\n)$/, '')\n\t\t\t\t);\n\t\t\t\tlines[linesLength++] = currentLine;\n\t\t\t}\n\n\t\t\tif (!this._EOLNormalized && buffer.charCodeAt(lineStarts[pieceEndLine] + piece.end.column - 1) === CharCode.CarriageReturn) {\n\t\t\t\tdanglingCR = true;\n\t\t\t\tif (piece.end.column === 0) {\n\t\t\t\t\t// The last line ended with a \\r, let's undo the push, it will be pushed by next iteration\n\t\t\t\t\tlinesLength--;\n\t\t\t\t} else {\n\t\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column - 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentLine = buffer.substr(lineStarts[pieceEndLine], piece.end.column);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\tif (danglingCR) {\n\t\t\tlines[linesLength++] = currentLine;\n\t\t\tcurrentLine = '';\n\t\t}\n\n\t\tlines[linesLength++] = currentLine;\n\t\treturn lines;\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._length;\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lineCnt;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._lastVisitedLine.lineNumber === lineNumber) {\n\t\t\treturn this._lastVisitedLine.value;\n\t\t}\n\n\t\tthis._lastVisitedLine.lineNumber = lineNumber;\n\n\t\tif (lineNumber === this._lineCnt) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber);\n\t\t} else if (this._EOLNormalized) {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber, this._EOLLength);\n\t\t} else {\n\t\t\tthis._lastVisitedLine.value = this.getLineRawContent(lineNumber).replace(/(\\r\\n|\\r|\\n)$/, '');\n\t\t}\n\n\t\treturn this._lastVisitedLine.value;\n\t}\n\n\tprivate _getCharCode(nodePos: NodePosition): number {\n\t\tif (nodePos.remainder === nodePos.node.piece.length) {\n\t\t\t// the char we want to fetch is at the head of next node.\n\t\t\tlet matchingNode = nodePos.node.next();\n\t\t\tif (!matchingNode) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet buffer = this._buffers[matchingNode.piece.bufferIndex];\n\t\t\tlet startOffset = this.offsetInBuffer(matchingNode.piece.bufferIndex, matchingNode.piece.start);\n\t\t\treturn buffer.buffer.charCodeAt(startOffset);\n\t\t} else {\n\t\t\tlet buffer = this._buffers[nodePos.node.piece.bufferIndex];\n\t\t\tlet startOffset = this.offsetInBuffer(nodePos.node.piece.bufferIndex, nodePos.node.piece.start);\n\t\t\tlet targetOffset = startOffset + nodePos.remainder;\n\n\t\t\treturn buffer.buffer.charCodeAt(targetOffset);\n\t\t}\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\tlet nodePos = this.nodeAt2(lineNumber, index + 1);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\tif (lineNumber === this.getLineCount()) {\n\t\t\tlet startOffset = this.getOffsetAt(lineNumber, 1);\n\t\t\treturn this.getLength() - startOffset;\n\t\t}\n\t\treturn this.getOffsetAt(lineNumber + 1, 1) - this.getOffsetAt(lineNumber, 1) - this._EOLLength;\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\tlet nodePos = this.nodeAt(offset);\n\t\treturn this._getCharCode(nodePos);\n\t}\n\n\tpublic findMatchesInNode(node: TreeNode, searcher: Searcher, startLineNumber: number, startColumn: number, startCursor: BufferCursor, endCursor: BufferCursor, searchData: SearchData, captureMatches: boolean, limitResultCount: number, resultLen: number, result: FindMatch[]) {\n\t\tlet buffer = this._buffers[node.piece.bufferIndex];\n\t\tlet startOffsetInBuffer = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start);\n\t\tlet start = this.offsetInBuffer(node.piece.bufferIndex, startCursor);\n\t\tlet end = this.offsetInBuffer(node.piece.bufferIndex, endCursor);\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tlet ret: BufferCursor = { line: 0, column: 0 };\n\t\tlet searchText: string;\n\t\tlet offsetInBuffer: (offset: number) => number;\n\n\t\tif (searcher._wordSeparators) {\n\t\t\tsearchText = buffer.buffer.substring(start, end);\n\t\t\toffsetInBuffer = (offset: number) => offset + start;\n\t\t\tsearcher.reset(0);\n\t\t} else {\n\t\t\tsearchText = buffer.buffer;\n\t\t\toffsetInBuffer = (offset: number) => offset;\n\t\t\tsearcher.reset(start);\n\t\t}\n\n\t\tdo {\n\t\t\tm = searcher.next(searchText);\n\n\t\t\tif (m) {\n\t\t\t\tif (offsetInBuffer(m.index) >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tthis.positionInBuffer(node, offsetInBuffer(m.index) - startOffsetInBuffer, ret);\n\t\t\t\tlet lineFeedCnt = this.getLineFeedCnt(node.piece.bufferIndex, startCursor, ret);\n\t\t\t\tlet retStartColumn = ret.line === startCursor.line ? ret.column - startCursor.column + startColumn : ret.column + 1;\n\t\t\t\tlet retEndColumn = retStartColumn + m[0].length;\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(startLineNumber + lineFeedCnt, retStartColumn, startLineNumber + lineFeedCnt, retEndColumn), m, captureMatches);\n\n\t\t\t\tif (offsetInBuffer(m.index) + m[0].length >= end) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} while (m);\n\n\t\treturn resultLen;\n\t}\n\n\tpublic findMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\tconst result: FindMatch[] = [];\n\t\tlet resultLen = 0;\n\t\tconst searcher = new Searcher(searchData.wordSeparators, searchData.regex);\n\n\t\tlet startPosition = this.nodeAt2(searchRange.startLineNumber, searchRange.startColumn);\n\t\tif (startPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet endPosition = this.nodeAt2(searchRange.endLineNumber, searchRange.endColumn);\n\t\tif (endPosition === null) {\n\t\t\treturn [];\n\t\t}\n\t\tlet start = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\tlet end = this.positionInBuffer(endPosition.node, endPosition.remainder);\n\n\t\tif (startPosition.node === endPosition.node) {\n\t\t\tthis.findMatchesInNode(startPosition.node, searcher, searchRange.startLineNumber, searchRange.startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startLineNumber = searchRange.startLineNumber;\n\n\t\tlet currentNode = startPosition.node;\n\t\twhile (currentNode !== endPosition.node) {\n\t\t\tlet lineBreakCnt = this.getLineFeedCnt(currentNode.piece.bufferIndex, start, currentNode.piece.end);\n\n\t\t\tif (lineBreakCnt >= 1) {\n\t\t\t\t// last line break position\n\t\t\t\tlet lineStarts = this._buffers[currentNode.piece.bufferIndex].lineStarts;\n\t\t\t\tlet startOffsetInBuffer = this.offsetInBuffer(currentNode.piece.bufferIndex, currentNode.piece.start);\n\t\t\t\tlet nextLineStartOffset = lineStarts[start.line + lineBreakCnt];\n\t\t\t\tlet startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\t\t\tresultLen = this.findMatchesInNode(currentNode, searcher, startLineNumber, startColumn, start, this.positionInBuffer(currentNode, nextLineStartOffset - startOffsetInBuffer), searchData, captureMatches, limitResultCount, resultLen, result);\n\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tstartLineNumber += lineBreakCnt;\n\t\t\t}\n\n\t\t\tlet startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\t// search for the remaining content\n\t\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, this.getLineContent(startLineNumber).substr(startColumn), startLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\n\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tstartLineNumber++;\n\t\t\tstartPosition = this.nodeAt2(startLineNumber, 1);\n\t\t\tcurrentNode = startPosition.node;\n\t\t\tstart = this.positionInBuffer(startPosition.node, startPosition.remainder);\n\t\t}\n\n\t\tif (startLineNumber === searchRange.endLineNumber) {\n\t\t\tlet startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn - 1 : 0;\n\t\t\tconst text = this.getLineContent(startLineNumber).substring(startColumn, searchRange.endColumn - 1);\n\t\t\tresultLen = this._findMatchesInLine(searchData, searcher, text, searchRange.endLineNumber, startColumn, resultLen, result, captureMatches, limitResultCount);\n\t\t\treturn result;\n\t\t}\n\n\t\tlet startColumn = startLineNumber === searchRange.startLineNumber ? searchRange.startColumn : 1;\n\t\tresultLen = this.findMatchesInNode(endPosition.node, searcher, startLineNumber, startColumn, start, end, searchData, captureMatches, limitResultCount, resultLen, result);\n\t\treturn result;\n\t}\n\n\tprivate _findMatchesInLine(searchData: SearchData, searcher: Searcher, text: string, lineNumber: number, deltaOffset: number, resultLen: number, result: FindMatch[], captureMatches: boolean, limitResultCount: number): number {\n\t\tconst wordSeparators = searchData.wordSeparators;\n\t\tif (!captureMatches && searchData.simpleSearch) {\n\t\t\tconst searchString = searchData.simpleSearch;\n\t\t\tconst searchStringLen = searchString.length;\n\t\t\tconst textLength = text.length;\n\n\t\t\tlet lastMatchIndex = -searchStringLen;\n\t\t\twhile ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n\t\t\t\tif (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n\t\t\t\t\tresult[resultLen++] = new FindMatch(new Range(lineNumber, lastMatchIndex + 1 + deltaOffset, lineNumber, lastMatchIndex + 1 + searchStringLen + deltaOffset), null);\n\t\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\t\treturn resultLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultLen;\n\t\t}\n\n\t\tlet m: RegExpExecArray | null;\n\t\t// Reset regex to search from the beginning\n\t\tsearcher.reset(0);\n\t\tdo {\n\t\t\tm = searcher.next(text);\n\t\t\tif (m) {\n\t\t\t\tresult[resultLen++] = createFindMatch(new Range(lineNumber, m.index + 1 + deltaOffset, lineNumber, m.index + 1 + m[0].length + deltaOffset), m, captureMatches);\n\t\t\t\tif (resultLen >= limitResultCount) {\n\t\t\t\t\treturn resultLen;\n\t\t\t\t}\n\t\t\t}\n\t\t} while (m);\n\t\treturn resultLen;\n\t}\n\n\t// #endregion\n\n\t// #region Piece Table\n\tpublic insert(offset: number, value: string, eolNormalized: boolean = false): void {\n\t\tthis._EOLNormalized = this._EOLNormalized && eolNormalized;\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (this.root !== SENTINEL) {\n\t\t\tlet { node, remainder, nodeStartOffset } = this.nodeAt(offset);\n\t\t\tlet piece = node.piece;\n\t\t\tlet bufferIndex = piece.bufferIndex;\n\t\t\tlet insertPosInBuffer = this.positionInBuffer(node, remainder);\n\t\t\tif (node.piece.bufferIndex === 0 &&\n\t\t\t\tpiece.end.line === this._lastChangeBufferPos.line &&\n\t\t\t\tpiece.end.column === this._lastChangeBufferPos.column &&\n\t\t\t\t(nodeStartOffset + piece.length === offset) &&\n\t\t\t\tvalue.length < AverageBufferSize\n\t\t\t) {\n\t\t\t\t// changed buffer\n\t\t\t\tthis.appendToNode(node, value);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (nodeStartOffset === offset) {\n\t\t\t\tthis.insertContentToNodeLeft(value, node);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t} else if (nodeStartOffset + node.piece.length > offset) {\n\t\t\t\t// we are inserting into the middle of a node.\n\t\t\t\tlet nodesToDel: TreeNode[] = [];\n\t\t\t\tlet newRightPiece = new Piece(\n\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\tinsertPosInBuffer,\n\t\t\t\t\tpiece.end,\n\t\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, insertPosInBuffer, piece.end),\n\t\t\t\t\tthis.offsetInBuffer(bufferIndex, piece.end) - this.offsetInBuffer(bufferIndex, insertPosInBuffer)\n\t\t\t\t);\n\n\t\t\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\t\t\tlet headOfRight = this.nodeCharCodeAt(node, remainder);\n\n\t\t\t\t\tif (headOfRight === 10 /** \\n */) {\n\t\t\t\t\t\tlet newStart: BufferCursor = { line: newRightPiece.start.line + 1, column: 0 };\n\t\t\t\t\t\tnewRightPiece = new Piece(\n\t\t\t\t\t\t\tnewRightPiece.bufferIndex,\n\t\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\t\tnewRightPiece.end,\n\t\t\t\t\t\t\tthis.getLineFeedCnt(newRightPiece.bufferIndex, newStart, newRightPiece.end),\n\t\t\t\t\t\t\tnewRightPiece.length - 1\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tvalue += '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// reuse node for content before insertion point.\n\t\t\t\tif (this.shouldCheckCRLF() && this.startWithLF(value)) {\n\t\t\t\t\tlet tailOfLeft = this.nodeCharCodeAt(node, remainder - 1);\n\t\t\t\t\tif (tailOfLeft === 13 /** \\r */) {\n\t\t\t\t\t\tlet previousPos = this.positionInBuffer(node, remainder - 1);\n\t\t\t\t\t\tthis.deleteNodeTail(node, previousPos);\n\t\t\t\t\t\tvalue = '\\r' + value;\n\n\t\t\t\t\t\tif (node.piece.length === 0) {\n\t\t\t\t\t\t\tnodesToDel.push(node);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.deleteNodeTail(node, insertPosInBuffer);\n\t\t\t\t}\n\n\t\t\t\tlet newPieces = this.createNewPieces(value);\n\t\t\t\tif (newRightPiece.length > 0) {\n\t\t\t\t\tthis.rbInsertRight(node, newRightPiece);\n\t\t\t\t}\n\n\t\t\t\tlet tmpNode = node;\n\t\t\t\tfor (let k = 0; k < newPieces.length; k++) {\n\t\t\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t\t\t}\n\t\t\t\tthis.deleteNodes(nodesToDel);\n\t\t\t} else {\n\t\t\t\tthis.insertContentToNodeRight(value, node);\n\t\t\t}\n\t\t} else {\n\t\t\t// insert new node\n\t\t\tlet pieces = this.createNewPieces(value);\n\t\t\tlet node = this.rbInsertLeft(null, pieces[0]);\n\n\t\t\tfor (let k = 1; k < pieces.length; k++) {\n\t\t\t\tnode = this.rbInsertRight(node, pieces[k]);\n\t\t\t}\n\t\t}\n\n\t\t// todo, this is too brutal. Total line feed count should be updated the same way as lf_left.\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tpublic delete(offset: number, cnt: number): void {\n\t\tthis._lastVisitedLine.lineNumber = 0;\n\t\tthis._lastVisitedLine.value = '';\n\n\t\tif (cnt <= 0 || this.root === SENTINEL) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet startPosition = this.nodeAt(offset);\n\t\tlet endPosition = this.nodeAt(offset + cnt);\n\t\tlet startNode = startPosition.node;\n\t\tlet endNode = endPosition.node;\n\n\t\tif (startNode === endNode) {\n\t\t\tlet startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\t\tlet endSplitPosInBuffer = this.positionInBuffer(startNode, endPosition.remainder);\n\n\t\t\tif (startPosition.nodeStartOffset === offset) {\n\t\t\t\tif (cnt === startNode.piece.length) { // delete node\n\t\t\t\t\tlet next = startNode.next();\n\t\t\t\t\trbDelete(this, startNode);\n\t\t\t\t\tthis.validateCRLFWithPrevNode(next);\n\t\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.deleteNodeHead(startNode, endSplitPosInBuffer);\n\t\t\t\tthis._searchCache.validate(offset);\n\t\t\t\tthis.validateCRLFWithPrevNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (startPosition.nodeStartOffset + startNode.piece.length === offset + cnt) {\n\t\t\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\t\t\tthis.validateCRLFWithNextNode(startNode);\n\t\t\t\tthis.computeBufferMetadata();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// delete content in the middle, this node will be splitted to nodes\n\t\t\tthis.shrinkNode(startNode, startSplitPosInBuffer, endSplitPosInBuffer);\n\t\t\tthis.computeBufferMetadata();\n\t\t\treturn;\n\t\t}\n\n\t\tlet nodesToDel: TreeNode[] = [];\n\n\t\tlet startSplitPosInBuffer = this.positionInBuffer(startNode, startPosition.remainder);\n\t\tthis.deleteNodeTail(startNode, startSplitPosInBuffer);\n\t\tthis._searchCache.validate(offset);\n\t\tif (startNode.piece.length === 0) {\n\t\t\tnodesToDel.push(startNode);\n\t\t}\n\n\t\t// update last touched node\n\t\tlet endSplitPosInBuffer = this.positionInBuffer(endNode, endPosition.remainder);\n\t\tthis.deleteNodeHead(endNode, endSplitPosInBuffer);\n\t\tif (endNode.piece.length === 0) {\n\t\t\tnodesToDel.push(endNode);\n\t\t}\n\n\t\t// delete nodes in between\n\t\tlet secondNode = startNode.next();\n\t\tfor (let node = secondNode; node !== SENTINEL && node !== endNode; node = node.next()) {\n\t\t\tnodesToDel.push(node);\n\t\t}\n\n\t\tlet prev = startNode.piece.length === 0 ? startNode.prev() : startNode;\n\t\tthis.deleteNodes(nodesToDel);\n\t\tthis.validateCRLFWithNextNode(prev);\n\t\tthis.computeBufferMetadata();\n\t}\n\n\tprivate insertContentToNodeLeft(value: string, node: TreeNode) {\n\t\t// we are inserting content to the beginning of node\n\t\tlet nodesToDel: TreeNode[] = [];\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value) && this.startWithLF(node)) {\n\t\t\t// move `\\n` to new node.\n\n\t\t\tlet piece = node.piece;\n\t\t\tlet newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\tlet nPiece = new Piece(\n\t\t\t\tpiece.bufferIndex,\n\t\t\t\tnewStart,\n\t\t\t\tpiece.end,\n\t\t\t\tthis.getLineFeedCnt(piece.bufferIndex, newStart, piece.end),\n\t\t\t\tpiece.length - 1\n\t\t\t);\n\n\t\t\tnode.piece = nPiece;\n\n\t\t\tvalue += '\\n';\n\t\t\tupdateTreeMetadata(this, node, -1, -1);\n\n\t\t\tif (node.piece.length === 0) {\n\t\t\t\tnodesToDel.push(node);\n\t\t\t}\n\t\t}\n\n\t\tlet newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertLeft(node, newPieces[newPieces.length - 1]);\n\t\tfor (let k = newPieces.length - 2; k >= 0; k--) {\n\t\t\tnewNode = this.rbInsertLeft(newNode, newPieces[k]);\n\t\t}\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t\tthis.deleteNodes(nodesToDel);\n\t}\n\n\tprivate insertContentToNodeRight(value: string, node: TreeNode) {\n\t\t// we are inserting to the right of this node.\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\t// move \\n to the new node.\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tlet newPieces = this.createNewPieces(value);\n\t\tlet newNode = this.rbInsertRight(node, newPieces[0]);\n\t\tlet tmpNode = newNode;\n\n\t\tfor (let k = 1; k < newPieces.length; k++) {\n\t\t\ttmpNode = this.rbInsertRight(tmpNode, newPieces[k]);\n\t\t}\n\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate positionInBuffer(node: TreeNode, remainder: number): BufferCursor;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret: BufferCursor): null;\n\tprivate positionInBuffer(node: TreeNode, remainder: number, ret?: BufferCursor): BufferCursor | null {\n\t\tlet piece = node.piece;\n\t\tlet bufferIndex = node.piece.bufferIndex;\n\t\tlet lineStarts = this._buffers[bufferIndex].lineStarts;\n\n\t\tlet startOffset = lineStarts[piece.start.line] + piece.start.column;\n\n\t\tlet offset = startOffset + remainder;\n\n\t\t// binary search offset between startOffset and endOffset\n\t\tlet low = piece.start.line;\n\t\tlet high = piece.end.line;\n\n\t\tlet mid: number = 0;\n\t\tlet midStop: number = 0;\n\t\tlet midStart: number = 0;\n\n\t\twhile (low <= high) {\n\t\t\tmid = low + ((high - low) / 2) | 0;\n\t\t\tmidStart = lineStarts[mid];\n\n\t\t\tif (mid === high) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tmidStop = lineStarts[mid + 1];\n\n\t\t\tif (offset < midStart) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else if (offset >= midStop) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (ret) {\n\t\t\tret.line = mid;\n\t\t\tret.column = offset - midStart;\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tline: mid,\n\t\t\tcolumn: offset - midStart\n\t\t};\n\t}\n\n\tprivate getLineFeedCnt(bufferIndex: number, start: BufferCursor, end: BufferCursor): number {\n\t\t// we don't need to worry about start: abc\\r|\\n, or abc|\\r, or abc|\\n, or abc|\\r\\n doesn't change the fact that, there is one line break after start.\n\t\t// now let's take care of end: abc\\r|\\n, if end is in between \\r and \\n, we need to add line feed count by 1\n\t\tif (end.column === 0) {\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tlet lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\tif (end.line === lineStarts.length - 1) { // it means, there is no \\n after end, otherwise, there will be one more lineStart.\n\t\t\treturn end.line - start.line;\n\t\t}\n\n\t\tlet nextLineStartOffset = lineStarts[end.line + 1];\n\t\tlet endOffset = lineStarts[end.line] + end.column;\n\t\tif (nextLineStartOffset > endOffset + 1) { // there are more than 1 character after end, which means it can't be \\n\n\t\t\treturn end.line - start.line;\n\t\t}\n\t\t// endOffset + 1 === nextLineStartOffset\n\t\t// character at endOffset is \\n, so we check the character before first\n\t\t// if character at endOffset is \\r, end.column is 0 and we can't get here.\n\t\tlet previousCharOffset = endOffset - 1; // end.column > 0 so it's okay.\n\t\tlet buffer = this._buffers[bufferIndex].buffer;\n\n\t\tif (buffer.charCodeAt(previousCharOffset) === 13) {\n\t\t\treturn end.line - start.line + 1;\n\t\t} else {\n\t\t\treturn end.line - start.line;\n\t\t}\n\t}\n\n\tprivate offsetInBuffer(bufferIndex: number, cursor: BufferCursor): number {\n\t\tlet lineStarts = this._buffers[bufferIndex].lineStarts;\n\t\treturn lineStarts[cursor.line] + cursor.column;\n\t}\n\n\tprivate deleteNodes(nodes: TreeNode[]): void {\n\t\tfor (let i = 0; i < nodes.length; i++) {\n\t\t\trbDelete(this, nodes[i]);\n\t\t}\n\t}\n\n\tprivate createNewPieces(text: string): Piece[] {\n\t\tif (text.length > AverageBufferSize) {\n\t\t\t// the content is large, operations like substring, charCode becomes slow\n\t\t\t// so here we split it into smaller chunks, just like what we did for CR/LF normalization\n\t\t\tlet newPieces: Piece[] = [];\n\t\t\twhile (text.length > AverageBufferSize) {\n\t\t\t\tconst lastChar = text.charCodeAt(AverageBufferSize - 1);\n\t\t\t\tlet splitText;\n\t\t\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize - 1);\n\t\t\t\t\ttext = text.substring(AverageBufferSize - 1);\n\t\t\t\t} else {\n\t\t\t\t\tsplitText = text.substring(0, AverageBufferSize);\n\t\t\t\t\ttext = text.substring(AverageBufferSize);\n\t\t\t\t}\n\n\t\t\t\tlet lineStarts = createLineStartsFast(splitText);\n\t\t\t\tnewPieces.push(new Piece(\n\t\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t\t{ line: lineStarts.length - 1, column: splitText.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\t\tlineStarts.length - 1,\n\t\t\t\t\tsplitText.length\n\t\t\t\t));\n\t\t\t\tthis._buffers.push(new StringBuffer(splitText, lineStarts));\n\t\t\t}\n\n\t\t\tlet lineStarts = createLineStartsFast(text);\n\t\t\tnewPieces.push(new Piece(\n\t\t\t\tthis._buffers.length, /* buffer index */\n\t\t\t\t{ line: 0, column: 0 },\n\t\t\t\t{ line: lineStarts.length - 1, column: text.length - lineStarts[lineStarts.length - 1] },\n\t\t\t\tlineStarts.length - 1,\n\t\t\t\ttext.length\n\t\t\t));\n\t\t\tthis._buffers.push(new StringBuffer(text, lineStarts));\n\n\t\t\treturn newPieces;\n\t\t}\n\n\t\tlet startOffset = this._buffers[0].buffer.length;\n\t\tconst lineStarts = createLineStartsFast(text, false);\n\n\t\tlet start = this._lastChangeBufferPos;\n\t\tif (this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 1] === startOffset\n\t\t\t&& startOffset !== 0\n\t\t\t&& this.startWithLF(text)\n\t\t\t&& this.endWithCR(this._buffers[0].buffer) // todo, we can check this._lastChangeBufferPos's column as it's the last one\n\t\t) {\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line, column: this._lastChangeBufferPos.column + 1 };\n\t\t\tstart = this._lastChangeBufferPos;\n\n\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\tlineStarts[i] += startOffset + 1;\n\t\t\t}\n\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += '_' + text;\n\t\t\tstartOffset += 1;\n\t\t} else {\n\t\t\tif (startOffset !== 0) {\n\t\t\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\t\t\tlineStarts[i] += startOffset;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\t\tthis._buffers[0].buffer += text;\n\t\t}\n\n\t\tconst endOffset = this._buffers[0].buffer.length;\n\t\tlet endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tlet endColumn = endOffset - this._buffers[0].lineStarts[endIndex];\n\t\tlet endPos = { line: endIndex, column: endColumn };\n\t\tlet newPiece = new Piece(\n\t\t\t0, /** todo@peng */\n\t\t\tstart,\n\t\t\tendPos,\n\t\t\tthis.getLineFeedCnt(0, start, endPos),\n\t\t\tendOffset - startOffset\n\t\t);\n\t\tthis._lastChangeBufferPos = endPos;\n\t\treturn [newPiece];\n\t}\n\n\tpublic getLinesRawContent(): string {\n\t\treturn this.getContentOfSubTree(this.root);\n\t}\n\n\tpublic getLineRawContent(lineNumber: number, endOffset: number = 0): string {\n\t\tlet x = this.root;\n\n\t\tlet ret = '';\n\t\tlet cache = this._searchCache.get2(lineNumber);\n\t\tif (cache) {\n\t\t\tx = cache.node;\n\t\t\tlet prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber - 1);\n\t\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\tif (cache.nodeStartLineNumber + x.piece.lineFeedCnt === lineNumber) {\n\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t} else {\n\t\t\t\tlet accumulatedValue = this.getAccumulatedValue(x, lineNumber - cache.nodeStartLineNumber);\n\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t}\n\t\t} else {\n\t\t\tlet nodeStartOffset = 0;\n\t\t\tconst originalLineNumber = lineNumber;\n\t\t\twhile (x !== SENTINEL) {\n\t\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\t\tx = x.left;\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\t\tlet prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tlet accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\t\tthis._searchCache.set({\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tnodeStartOffset,\n\t\t\t\t\t\tnodeStartLineNumber: originalLineNumber - (lineNumber - 1 - x.lf_left)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn buffer.substring(startOffset + prevAccumulatedValue, startOffset + accumulatedValue - endOffset);\n\t\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\t\tlet prevAccumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\t\t\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\t\tret = buffer.substring(startOffset + prevAccumulatedValue, startOffset + x.piece.length);\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\t\tx = x.right;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains end column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\t\t\tlet buffer = this._buffers[x.piece.bufferIndex].buffer;\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tlet accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\n\t\t\t\tret += buffer.substring(startOffset, startOffset + accumulatedValue - endOffset);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\tlet startOffset = this.offsetInBuffer(x.piece.bufferIndex, x.piece.start);\n\t\t\t\tret += buffer.substr(startOffset, x.piece.length);\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate computeBufferMetadata() {\n\t\tlet x = this.root;\n\n\t\tlet lfCnt = 1;\n\t\tlet len = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tlfCnt += x.lf_left + x.piece.lineFeedCnt;\n\t\t\tlen += x.size_left + x.piece.length;\n\t\t\tx = x.right;\n\t\t}\n\n\t\tthis._lineCnt = lfCnt;\n\t\tthis._length = len;\n\t\tthis._searchCache.validate(this._length);\n\t}\n\n\t// #region node operations\n\tprivate getIndexOf(node: TreeNode, accumulatedValue: number): { index: number, remainder: number } {\n\t\tlet piece = node.piece;\n\t\tlet pos = this.positionInBuffer(node, accumulatedValue);\n\t\tlet lineCnt = pos.line - piece.start.line;\n\n\t\tif (this.offsetInBuffer(piece.bufferIndex, piece.end) - this.offsetInBuffer(piece.bufferIndex, piece.start) === accumulatedValue) {\n\t\t\t// we are checking the end of this node, so a CRLF check is necessary.\n\t\t\tlet realLineCnt = this.getLineFeedCnt(node.piece.bufferIndex, piece.start, pos);\n\t\t\tif (realLineCnt !== lineCnt) {\n\t\t\t\t// aha yes, CRLF\n\t\t\t\treturn { index: realLineCnt, remainder: 0 };\n\t\t\t}\n\t\t}\n\n\t\treturn { index: lineCnt, remainder: pos.column };\n\t}\n\n\tprivate getAccumulatedValue(node: TreeNode, index: number) {\n\t\tif (index < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet piece = node.piece;\n\t\tlet lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tlet expectedLineStartIndex = piece.start.line + index + 1;\n\t\tif (expectedLineStartIndex > piece.end.line) {\n\t\t\treturn lineStarts[piece.end.line] + piece.end.column - lineStarts[piece.start.line] - piece.start.column;\n\t\t} else {\n\t\t\treturn lineStarts[expectedLineStartIndex] - lineStarts[piece.start.line] - piece.start.column;\n\t\t}\n\t}\n\n\tprivate deleteNodeTail(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalEndOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\n\t\tconst newEnd = pos;\n\t\tconst newEndOffset = this.offsetInBuffer(piece.bufferIndex, newEnd);\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = newEndOffset - originalEndOffset;\n\t\tconst newLength = piece.length + size_delta;\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate deleteNodeHead(node: TreeNode, pos: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalLFCnt = piece.lineFeedCnt;\n\t\tconst originalStartOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\n\t\tconst newStart = pos;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\tconst newStartOffset = this.offsetInBuffer(piece.bufferIndex, newStart);\n\t\tconst lf_delta = newLineFeedCnt - originalLFCnt;\n\t\tconst size_delta = originalStartOffset - newStartOffset;\n\t\tconst newLength = piece.length + size_delta;\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tpiece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, size_delta, lf_delta);\n\t}\n\n\tprivate shrinkNode(node: TreeNode, start: BufferCursor, end: BufferCursor) {\n\t\tconst piece = node.piece;\n\t\tconst originalStartPos = piece.start;\n\t\tconst originalEndPos = piece.end;\n\n\t\t// old piece, originalStartPos, start\n\t\tconst oldLength = piece.length;\n\t\tconst oldLFCnt = piece.lineFeedCnt;\n\t\tconst newEnd = start;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, piece.start, newEnd);\n\t\tconst newLength = this.offsetInBuffer(piece.bufferIndex, start) - this.offsetInBuffer(piece.bufferIndex, originalStartPos);\n\n\t\tnode.piece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tpiece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, node, newLength - oldLength, newLineFeedCnt - oldLFCnt);\n\n\t\t// new right piece, end, originalEndPos\n\t\tlet newPiece = new Piece(\n\t\t\tpiece.bufferIndex,\n\t\t\tend,\n\t\t\toriginalEndPos,\n\t\t\tthis.getLineFeedCnt(piece.bufferIndex, end, originalEndPos),\n\t\t\tthis.offsetInBuffer(piece.bufferIndex, originalEndPos) - this.offsetInBuffer(piece.bufferIndex, end)\n\t\t);\n\n\t\tlet newNode = this.rbInsertRight(node, newPiece);\n\t\tthis.validateCRLFWithPrevNode(newNode);\n\t}\n\n\tprivate appendToNode(node: TreeNode, value: string): void {\n\t\tif (this.adjustCarriageReturnFromNext(value, node)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\n\t\tconst hitCRLF = this.shouldCheckCRLF() && this.startWithLF(value) && this.endWithCR(node);\n\t\tconst startOffset = this._buffers[0].buffer.length;\n\t\tthis._buffers[0].buffer += value;\n\t\tconst lineStarts = createLineStartsFast(value, false);\n\t\tfor (let i = 0; i < lineStarts.length; i++) {\n\t\t\tlineStarts[i] += startOffset;\n\t\t}\n\t\tif (hitCRLF) {\n\t\t\tlet prevStartOffset = this._buffers[0].lineStarts[this._buffers[0].lineStarts.length - 2];\n\t\t\t(<number[]>this._buffers[0].lineStarts).pop();\n\t\t\t// _lastChangeBufferPos is already wrong\n\t\t\tthis._lastChangeBufferPos = { line: this._lastChangeBufferPos.line - 1, column: startOffset - prevStartOffset };\n\t\t}\n\n\t\tthis._buffers[0].lineStarts = (<number[]>this._buffers[0].lineStarts).concat(<number[]>lineStarts.slice(1));\n\t\tconst endIndex = this._buffers[0].lineStarts.length - 1;\n\t\tconst endColumn = this._buffers[0].buffer.length - this._buffers[0].lineStarts[endIndex];\n\t\tconst newEnd = { line: endIndex, column: endColumn };\n\t\tconst newLength = node.piece.length + value.length;\n\t\tconst oldLineFeedCnt = node.piece.lineFeedCnt;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(0, node.piece.start, newEnd);\n\t\tconst lf_delta = newLineFeedCnt - oldLineFeedCnt;\n\n\t\tnode.piece = new Piece(\n\t\t\tnode.piece.bufferIndex,\n\t\t\tnode.piece.start,\n\t\t\tnewEnd,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tthis._lastChangeBufferPos = newEnd;\n\t\tupdateTreeMetadata(this, node, value.length, lf_delta);\n\t}\n\n\tprivate nodeAt(offset: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet cache = this._searchCache.get(offset);\n\t\tif (cache) {\n\t\t\treturn {\n\t\t\t\tnode: cache.node,\n\t\t\t\tnodeStartOffset: cache.nodeStartOffset,\n\t\t\t\tremainder: offset - cache.nodeStartOffset\n\t\t\t};\n\t\t}\n\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.size_left > offset) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.size_left + x.piece.length >= offset) {\n\t\t\t\tnodeStartOffset += x.size_left;\n\t\t\t\tlet ret = {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: offset - x.size_left,\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t\tthis._searchCache.set(ret);\n\t\t\t\treturn ret;\n\t\t\t} else {\n\t\t\t\toffset -= x.size_left + x.piece.length;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeAt2(lineNumber: number, column: number): NodePosition {\n\t\tlet x = this.root;\n\t\tlet nodeStartOffset = 0;\n\n\t\twhile (x !== SENTINEL) {\n\t\t\tif (x.left !== SENTINEL && x.lf_left >= lineNumber - 1) {\n\t\t\t\tx = x.left;\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt > lineNumber - 1) {\n\t\t\t\tlet prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tlet accumulatedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 1);\n\t\t\t\tnodeStartOffset += x.size_left;\n\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(prevAccumualtedValue + column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else if (x.lf_left + x.piece.lineFeedCnt === lineNumber - 1) {\n\t\t\t\tlet prevAccumualtedValue = this.getAccumulatedValue(x, lineNumber - x.lf_left - 2);\n\t\t\t\tif (prevAccumualtedValue + column - 1 <= x.piece.length) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: prevAccumualtedValue + column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length - prevAccumualtedValue;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlineNumber -= x.lf_left + x.piece.lineFeedCnt;\n\t\t\t\tnodeStartOffset += x.size_left + x.piece.length;\n\t\t\t\tx = x.right;\n\t\t\t}\n\t\t}\n\n\t\t// search in order, to find the node contains position.column\n\t\tx = x.next();\n\t\twhile (x !== SENTINEL) {\n\n\t\t\tif (x.piece.lineFeedCnt > 0) {\n\t\t\t\tlet accumulatedValue = this.getAccumulatedValue(x, 0);\n\t\t\t\tlet nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\treturn {\n\t\t\t\t\tnode: x,\n\t\t\t\t\tremainder: Math.min(column - 1, accumulatedValue),\n\t\t\t\t\tnodeStartOffset\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tif (x.piece.length >= column - 1) {\n\t\t\t\t\tlet nodeStartOffset = this.offsetOfNode(x);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tnode: x,\n\t\t\t\t\t\tremainder: column - 1,\n\t\t\t\t\t\tnodeStartOffset\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcolumn -= x.piece.length;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = x.next();\n\t\t}\n\n\t\treturn null!;\n\t}\n\n\tprivate nodeCharCodeAt(node: TreeNode, offset: number): number {\n\t\tif (node.piece.lineFeedCnt < 1) {\n\t\t\treturn -1;\n\t\t}\n\t\tlet buffer = this._buffers[node.piece.bufferIndex];\n\t\tlet newOffset = this.offsetInBuffer(node.piece.bufferIndex, node.piece.start) + offset;\n\t\treturn buffer.buffer.charCodeAt(newOffset);\n\t}\n\n\tprivate offsetOfNode(node: TreeNode): number {\n\t\tif (!node) {\n\t\t\treturn 0;\n\t\t}\n\t\tlet pos = node.size_left;\n\t\twhile (node !== this.root) {\n\t\t\tif (node.parent.right === node) {\n\t\t\t\tpos += node.parent.size_left + node.parent.piece.length;\n\t\t\t}\n\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\t// #endregion\n\n\t// #region CRLF\n\tprivate shouldCheckCRLF() {\n\t\treturn !(this._EOLNormalized && this._EOL === '\\n');\n\t}\n\n\tprivate startWithLF(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(0) === 10;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet piece = val.piece;\n\t\tlet lineStarts = this._buffers[piece.bufferIndex].lineStarts;\n\t\tlet line = piece.start.line;\n\t\tlet startOffset = lineStarts[line] + piece.start.column;\n\t\tif (line === lineStarts.length - 1) {\n\t\t\t// last line, so there is no line feed at the end of this line\n\t\t\treturn false;\n\t\t}\n\t\tlet nextLineOffset = lineStarts[line + 1];\n\t\tif (nextLineOffset > startOffset + 1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._buffers[piece.bufferIndex].buffer.charCodeAt(startOffset) === 10;\n\t}\n\n\tprivate endWithCR(val: string | TreeNode): boolean {\n\t\tif (typeof val === 'string') {\n\t\t\treturn val.charCodeAt(val.length - 1) === 13;\n\t\t}\n\n\t\tif (val === SENTINEL || val.piece.lineFeedCnt === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.nodeCharCodeAt(val, val.piece.length - 1) === 13;\n\t}\n\n\tprivate validateCRLFWithPrevNode(nextNode: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.startWithLF(nextNode)) {\n\t\t\tlet node = nextNode.prev();\n\t\t\tif (this.endWithCR(node)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate validateCRLFWithNextNode(node: TreeNode) {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(node)) {\n\t\t\tlet nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\tthis.fixCRLF(node, nextNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate fixCRLF(prev: TreeNode, next: TreeNode) {\n\t\tlet nodesToDel: TreeNode[] = [];\n\t\t// update node\n\t\tlet lineStarts = this._buffers[prev.piece.bufferIndex].lineStarts;\n\t\tlet newEnd: BufferCursor;\n\t\tif (prev.piece.end.column === 0) {\n\t\t\t// it means, last line ends with \\r, not \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line - 1, column: lineStarts[prev.piece.end.line] - lineStarts[prev.piece.end.line - 1] - 1 };\n\t\t} else {\n\t\t\t// \\r\\n\n\t\t\tnewEnd = { line: prev.piece.end.line, column: prev.piece.end.column - 1 };\n\t\t}\n\n\t\tconst prevNewLength = prev.piece.length - 1;\n\t\tconst prevNewLFCnt = prev.piece.lineFeedCnt - 1;\n\t\tprev.piece = new Piece(\n\t\t\tprev.piece.bufferIndex,\n\t\t\tprev.piece.start,\n\t\t\tnewEnd,\n\t\t\tprevNewLFCnt,\n\t\t\tprevNewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, prev, - 1, -1);\n\t\tif (prev.piece.length === 0) {\n\t\t\tnodesToDel.push(prev);\n\t\t}\n\n\t\t// update nextNode\n\t\tlet newStart: BufferCursor = { line: next.piece.start.line + 1, column: 0 };\n\t\tconst newLength = next.piece.length - 1;\n\t\tconst newLineFeedCnt = this.getLineFeedCnt(next.piece.bufferIndex, newStart, next.piece.end);\n\t\tnext.piece = new Piece(\n\t\t\tnext.piece.bufferIndex,\n\t\t\tnewStart,\n\t\t\tnext.piece.end,\n\t\t\tnewLineFeedCnt,\n\t\t\tnewLength\n\t\t);\n\n\t\tupdateTreeMetadata(this, next, - 1, -1);\n\t\tif (next.piece.length === 0) {\n\t\t\tnodesToDel.push(next);\n\t\t}\n\n\t\t// create new piece which contains \\r\\n\n\t\tlet pieces = this.createNewPieces('\\r\\n');\n\t\tthis.rbInsertRight(prev, pieces[0]);\n\t\t// delete empty nodes\n\n\t\tfor (let i = 0; i < nodesToDel.length; i++) {\n\t\t\trbDelete(this, nodesToDel[i]);\n\t\t}\n\t}\n\n\tprivate adjustCarriageReturnFromNext(value: string, node: TreeNode): boolean {\n\t\tif (this.shouldCheckCRLF() && this.endWithCR(value)) {\n\t\t\tlet nextNode = node.next();\n\t\t\tif (this.startWithLF(nextNode)) {\n\t\t\t\t// move `\\n` forward\n\t\t\t\tvalue += '\\n';\n\n\t\t\t\tif (nextNode.piece.length === 1) {\n\t\t\t\t\trbDelete(this, nextNode);\n\t\t\t\t} else {\n\n\t\t\t\t\tconst piece = nextNode.piece;\n\t\t\t\t\tconst newStart: BufferCursor = { line: piece.start.line + 1, column: 0 };\n\t\t\t\t\tconst newLength = piece.length - 1;\n\t\t\t\t\tconst newLineFeedCnt = this.getLineFeedCnt(piece.bufferIndex, newStart, piece.end);\n\t\t\t\t\tnextNode.piece = new Piece(\n\t\t\t\t\t\tpiece.bufferIndex,\n\t\t\t\t\t\tnewStart,\n\t\t\t\t\t\tpiece.end,\n\t\t\t\t\t\tnewLineFeedCnt,\n\t\t\t\t\t\tnewLength\n\t\t\t\t\t);\n\n\t\t\t\t\tupdateTreeMetadata(this, nextNode, -1, -1);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// #endregion\n\n\t// #endregion\n\n\t// #region Tree operations\n\titerate(node: TreeNode, callback: (node: TreeNode) => boolean): boolean {\n\t\tif (node === SENTINEL) {\n\t\t\treturn callback(SENTINEL);\n\t\t}\n\n\t\tlet leftRet = this.iterate(node.left, callback);\n\t\tif (!leftRet) {\n\t\t\treturn leftRet;\n\t\t}\n\n\t\treturn callback(node) && this.iterate(node.right, callback);\n\t}\n\n\tprivate getNodeContent(node: TreeNode) {\n\t\tif (node === SENTINEL) {\n\t\t\treturn '';\n\t\t}\n\t\tlet buffer = this._buffers[node.piece.bufferIndex];\n\t\tlet currentContent;\n\t\tlet piece = node.piece;\n\t\tlet startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tlet endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tcurrentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\tgetPieceContent(piece: Piece) {\n\t\tlet buffer = this._buffers[piece.bufferIndex];\n\t\tlet startOffset = this.offsetInBuffer(piece.bufferIndex, piece.start);\n\t\tlet endOffset = this.offsetInBuffer(piece.bufferIndex, piece.end);\n\t\tlet currentContent = buffer.buffer.substring(startOffset, endOffset);\n\t\treturn currentContent;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b    <----   a    b\n\t *                         /\n\t *                        z\n\t */\n\tprivate rbInsertRight(node: TreeNode | null, p: Piece): TreeNode {\n\t\tlet z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tlet x = this.root;\n\t\tif (x === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.right === SENTINEL) {\n\t\t\tnode!.right = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tlet nextNode = leftest(node!.right);\n\t\t\tnextNode.left = z;\n\t\t\tz.parent = nextNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\t/**\n\t *      node              node\n\t *     /  \\              /  \\\n\t *    a   b     ---->   a    b\n\t *                       \\\n\t *                        z\n\t */\n\tprivate rbInsertLeft(node: TreeNode | null, p: Piece): TreeNode {\n\t\tlet z = new TreeNode(p, NodeColor.Red);\n\t\tz.left = SENTINEL;\n\t\tz.right = SENTINEL;\n\t\tz.parent = SENTINEL;\n\t\tz.size_left = 0;\n\t\tz.lf_left = 0;\n\n\t\tif (this.root === SENTINEL) {\n\t\t\tthis.root = z;\n\t\t\tz.color = NodeColor.Black;\n\t\t} else if (node!.left === SENTINEL) {\n\t\t\tnode!.left = z;\n\t\t\tz.parent = node!;\n\t\t} else {\n\t\t\tlet prevNode = righttest(node!.left); // a\n\t\t\tprevNode.right = z;\n\t\t\tz.parent = prevNode;\n\t\t}\n\n\t\tfixInsert(this, z);\n\t\treturn z;\n\t}\n\n\tprivate getContentOfSubTree(node: TreeNode): string {\n\t\tlet str = '';\n\n\t\tthis.iterate(node, node => {\n\t\t\tstr += this.getNodeContent(node);\n\t\t\treturn true;\n\t\t});\n\n\t\treturn str;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRelativePattern, match as matchGlobPattern } from 'vs/base/common/glob';\nimport { URI } from 'vs/base/common/uri'; // TODO@Alex\nimport { normalize } from 'vs/base/common/path';\n\nexport interface LanguageFilter {\n\tlanguage?: string;\n\tscheme?: string;\n\tpattern?: string | IRelativePattern;\n\t/**\n\t * This provider is implemented in the UI thread.\n\t */\n\thasAccessToAllModels?: boolean;\n\texclusive?: boolean;\n}\n\nexport type LanguageSelector = string | LanguageFilter | Array<string | LanguageFilter>;\n\nexport function score(selector: LanguageSelector | undefined, candidateUri: URI, candidateLanguage: string, candidateIsSynchronized: boolean): number {\n\n\tif (Array.isArray(selector)) {\n\t\t// array -> take max individual value\n\t\tlet ret = 0;\n\t\tfor (const filter of selector) {\n\t\t\tconst value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized);\n\t\t\tif (value === 10) {\n\t\t\t\treturn value; // already at the highest\n\t\t\t}\n\t\t\tif (value > ret) {\n\t\t\t\tret = value;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\n\t} else if (typeof selector === 'string') {\n\n\t\tif (!candidateIsSynchronized) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// short-hand notion, desugars to\n\t\t// 'fooLang' -> { language: 'fooLang'}\n\t\t// '*' -> { language: '*' }\n\t\tif (selector === '*') {\n\t\t\treturn 5;\n\t\t} else if (selector === candidateLanguage) {\n\t\t\treturn 10;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\n\t} else if (selector) {\n\t\t// filter -> select accordingly, use defaults for scheme\n\t\tconst { language, pattern, scheme, hasAccessToAllModels } = selector;\n\n\t\tif (!candidateIsSynchronized && !hasAccessToAllModels) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet ret = 0;\n\n\t\tif (scheme) {\n\t\t\tif (scheme === candidateUri.scheme) {\n\t\t\t\tret = 10;\n\t\t\t} else if (scheme === '*') {\n\t\t\t\tret = 5;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (language) {\n\t\t\tif (language === candidateLanguage) {\n\t\t\t\tret = 10;\n\t\t\t} else if (language === '*') {\n\t\t\t\tret = Math.max(ret, 5);\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (pattern) {\n\t\t\tlet normalizedPattern: string | IRelativePattern;\n\t\t\tif (typeof pattern === 'string') {\n\t\t\t\tnormalizedPattern = pattern;\n\t\t\t} else {\n\t\t\t\t// Since this pattern has a `base` property, we need\n\t\t\t\t// to normalize this path first before passing it on\n\t\t\t\t// because we will compare it against `Uri.fsPath`\n\t\t\t\t// which uses platform specific separators.\n\t\t\t\t// Refs: https://github.com/microsoft/vscode/issues/99938\n\t\t\t\tnormalizedPattern = { ...pattern, base: normalize(pattern.base) };\n\t\t\t}\n\n\t\t\tif (normalizedPattern === candidateUri.fsPath || matchGlobPattern(normalizedPattern, candidateUri.fsPath)) {\n\t\t\t\tret = 10;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ColorId, ITokenizationRegistry, ITokenizationSupport, ITokenizationSupportChangedEvent } from 'vs/editor/common/modes';\n\nexport class TokenizationRegistryImpl implements ITokenizationRegistry {\n\n\tprivate readonly _map = new Map<string, ITokenizationSupport>();\n\tprivate readonly _promises = new Map<string, Thenable<void>>();\n\n\tprivate readonly _onDidChange = new Emitter<ITokenizationSupportChangedEvent>();\n\tpublic readonly onDidChange: Event<ITokenizationSupportChangedEvent> = this._onDidChange.event;\n\n\tprivate _colorMap: Color[] | null;\n\n\tconstructor() {\n\t\tthis._colorMap = null;\n\t}\n\n\tpublic fire(languages: string[]): void {\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: languages,\n\t\t\tchangedColorMap: false\n\t\t});\n\t}\n\n\tpublic register(language: string, support: ITokenizationSupport) {\n\t\tthis._map.set(language, support);\n\t\tthis.fire([language]);\n\t\treturn toDisposable(() => {\n\t\t\tif (this._map.get(language) !== support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._map.delete(language);\n\t\t\tthis.fire([language]);\n\t\t});\n\t}\n\n\tpublic registerPromise(language: string, supportPromise: Thenable<ITokenizationSupport | null>): IDisposable {\n\n\t\tlet registration: IDisposable | null = null;\n\t\tlet isDisposed: boolean = false;\n\n\t\tthis._promises.set(language, supportPromise.then(support => {\n\t\t\tthis._promises.delete(language);\n\t\t\tif (isDisposed || !support) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tregistration = this.register(language, support);\n\t\t}));\n\n\t\treturn toDisposable(() => {\n\t\t\tisDisposed = true;\n\t\t\tif (registration) {\n\t\t\t\tregistration.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getPromise(language: string): Thenable<ITokenizationSupport> | null {\n\t\tconst support = this.get(language);\n\t\tif (support) {\n\t\t\treturn Promise.resolve(support);\n\t\t}\n\t\tconst promise = this._promises.get(language);\n\t\tif (promise) {\n\t\t\treturn promise.then(_ => this.get(language)!);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic get(language: string): ITokenizationSupport | null {\n\t\treturn (this._map.get(language) || null);\n\t}\n\n\tpublic setColorMap(colorMap: Color[]): void {\n\t\tthis._colorMap = colorMap;\n\t\tthis._onDidChange.fire({\n\t\t\tchangedLanguages: Array.from(this._map.keys()),\n\t\t\tchangedColorMap: true\n\t\t});\n\t}\n\n\tpublic getColorMap(): Color[] | null {\n\t\treturn this._colorMap;\n\t}\n\n\tpublic getDefaultBackground(): Color | null {\n\t\tif (this._colorMap && this._colorMap.length > ColorId.DefaultBackground) {\n\t\t\treturn this._colorMap[ColorId.DefaultBackground];\n\t\t}\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from 'vs/editor/common/model';\nimport { ILanguageSelection } from 'vs/editor/common/services/modeService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from 'vs/editor/common/modes';\nimport { SemanticTokensProviderStyling } from 'vs/editor/common/services/semanticTokensProviderStyling';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tupdateModel(model: ITextModel, value: string | ITextBufferFactory): void;\n\n\tsetMode(model: ITextModel, languageSelection: ILanguageSelection): void;\n\n\tdestroyModel(resource: URI): void;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\tgetSemanticTokensProviderStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling;\n\n\tonModelAdded: Event<ITextModel>;\n\n\tonModelRemoved: Event<ITextModel>;\n\n\tonModelModeChanged: Event<{ model: ITextModel; oldModeId: string; }>;\n}\n\nexport function shouldSynchronizeModel(model: ITextModel): boolean {\n\treturn (\n\t\t!model.isTooLargeForSyncing() && !model.isForSimpleWidget\n\t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LRUCache } from 'vs/base/common/map';\nimport { MovingAverage } from 'vs/base/common/numbers';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { LanguageSelector, score } from 'vs/editor/common/modes/languageSelector';\nimport { shouldSynchronizeModel } from 'vs/editor/common/services/modelService';\n\ninterface Entry<T> {\n\tselector: LanguageSelector;\n\tprovider: T;\n\t_score: number;\n\t_time: number;\n}\n\nfunction isExclusive(selector: LanguageSelector): boolean {\n\tif (typeof selector === 'string') {\n\t\treturn false;\n\t} else if (Array.isArray(selector)) {\n\t\treturn selector.every(isExclusive);\n\t} else {\n\t\treturn !!selector.exclusive;\n\t}\n}\n\nexport class LanguageFeatureRegistry<T> {\n\n\tprivate _clock: number = 0;\n\tprivate readonly _entries: Entry<T>[] = [];\n\tprivate readonly _onDidChange = new Emitter<number>();\n\n\tget onDidChange(): Event<number> {\n\t\treturn this._onDidChange.event;\n\t}\n\n\tregister(selector: LanguageSelector, provider: T): IDisposable {\n\n\t\tlet entry: Entry<T> | undefined = {\n\t\t\tselector,\n\t\t\tprovider,\n\t\t\t_score: -1,\n\t\t\t_time: this._clock++\n\t\t};\n\n\t\tthis._entries.push(entry);\n\t\tthis._lastCandidate = undefined;\n\t\tthis._onDidChange.fire(this._entries.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tif (entry) {\n\t\t\t\tlet idx = this._entries.indexOf(entry);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis._entries.splice(idx, 1);\n\t\t\t\t\tthis._lastCandidate = undefined;\n\t\t\t\t\tthis._onDidChange.fire(this._entries.length);\n\t\t\t\t\tentry = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas(model: ITextModel): boolean {\n\t\treturn this.all(model).length > 0;\n\t}\n\n\tall(model: ITextModel): T[] {\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthis._updateScores(model);\n\t\tconst result: T[] = [];\n\n\t\t// from registry\n\t\tfor (let entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tresult.push(entry.provider);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tordered(model: ITextModel): T[] {\n\t\tconst result: T[] = [];\n\t\tthis._orderedForEach(model, entry => result.push(entry.provider));\n\t\treturn result;\n\t}\n\n\torderedGroups(model: ITextModel): T[][] {\n\t\tconst result: T[][] = [];\n\t\tlet lastBucket: T[];\n\t\tlet lastBucketScore: number;\n\n\t\tthis._orderedForEach(model, entry => {\n\t\t\tif (lastBucket && lastBucketScore === entry._score) {\n\t\t\t\tlastBucket.push(entry.provider);\n\t\t\t} else {\n\t\t\t\tlastBucketScore = entry._score;\n\t\t\t\tlastBucket = [entry.provider];\n\t\t\t\tresult.push(lastBucket);\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprivate _orderedForEach(model: ITextModel, callback: (provider: Entry<T>) => any): void {\n\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._updateScores(model);\n\n\t\tfor (const entry of this._entries) {\n\t\t\tif (entry._score > 0) {\n\t\t\t\tcallback(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _lastCandidate: { uri: string; language: string; } | undefined;\n\n\tprivate _updateScores(model: ITextModel): void {\n\n\t\tlet candidate = {\n\t\t\turi: model.uri.toString(),\n\t\t\tlanguage: model.getLanguageIdentifier().language\n\t\t};\n\n\t\tif (this._lastCandidate\n\t\t\t&& this._lastCandidate.language === candidate.language\n\t\t\t&& this._lastCandidate.uri === candidate.uri) {\n\n\t\t\t// nothing has changed\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lastCandidate = candidate;\n\n\t\tfor (let entry of this._entries) {\n\t\t\tentry._score = score(entry.selector, model.uri, model.getLanguageIdentifier().language, shouldSynchronizeModel(model));\n\n\t\t\tif (isExclusive(entry.selector) && entry._score > 0) {\n\t\t\t\t// support for one exclusive selector that overwrites\n\t\t\t\t// any other selector\n\t\t\t\tfor (let entry of this._entries) {\n\t\t\t\t\tentry._score = 0;\n\t\t\t\t}\n\t\t\t\tentry._score = 1000;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// needs sorting\n\t\tthis._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n\t}\n\n\tprivate static _compareByScoreAndTime(a: Entry<any>, b: Entry<any>): number {\n\t\tif (a._score < b._score) {\n\t\t\treturn 1;\n\t\t} else if (a._score > b._score) {\n\t\t\treturn -1;\n\t\t} else if (a._time < b._time) {\n\t\t\treturn 1;\n\t\t} else if (a._time > b._time) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n\n\n/**\n * Keeps moving average per model and set of providers so that requests\n * can be debounce according to the provider performance\n */\nexport class LanguageFeatureRequestDelays {\n\n\tprivate readonly _cache = new LRUCache<string, MovingAverage>(50, 0.7);\n\n\tconstructor(\n\t\tprivate readonly _registry: LanguageFeatureRegistry<any>,\n\t\treadonly min: number,\n\t\treadonly max: number = Number.MAX_SAFE_INTEGER,\n\t) { }\n\n\tprivate _key(model: ITextModel): string {\n\t\treturn model.id + hash(this._registry.all(model));\n\t}\n\n\tprivate _clamp(value: number | undefined): number {\n\t\tif (value === undefined) {\n\t\t\treturn this.min;\n\t\t} else {\n\t\t\treturn Math.min(this.max, Math.max(this.min, Math.floor(value * 1.3)));\n\t\t}\n\t}\n\n\tget(model: ITextModel): number {\n\t\tconst key = this._key(model);\n\t\tconst avg = this._cache.get(key);\n\t\treturn this._clamp(avg?.value);\n\t}\n\n\tupdate(model: ITextModel, value: number): number {\n\t\tconst key = this._key(model);\n\t\tlet avg = this._cache.get(key);\n\t\tif (!avg) {\n\t\t\tavg = new MovingAverage();\n\t\t\tthis._cache.set(key, avg);\n\t\t}\n\t\tavg.update(value);\n\t\treturn this.get(model);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color } from 'vs/base/common/color';\nimport { Event } from 'vs/base/common/event';\nimport { IMarkdownString } from 'vs/base/common/htmlContent';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { TokenizationResult, TokenizationResult2 } from 'vs/editor/common/core/token';\nimport * as model from 'vs/editor/common/model';\nimport { LanguageFeatureRegistry } from 'vs/editor/common/modes/languageFeatureRegistry';\nimport { TokenizationRegistryImpl } from 'vs/editor/common/modes/tokenizationRegistry';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IMarkerData } from 'vs/platform/markers/common/markers';\nimport { iconRegistry, Codicon } from 'vs/base/common/codicons';\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum LanguageId {\n\tNull = 0,\n\tPlainText = 1\n}\n\n/**\n * @internal\n */\nexport class LanguageIdentifier {\n\n\t/**\n\t * A string identifier. Unique across languages. e.g. 'javascript'.\n\t */\n\tpublic readonly language: string;\n\n\t/**\n\t * A numeric identifier. Unique across languages. e.g. 5\n\t * Will vary at runtime based on registration order, etc.\n\t */\n\tpublic readonly id: LanguageId;\n\n\tconstructor(language: string, id: LanguageId) {\n\t\tthis.language = language;\n\t\tthis.id = id;\n\t}\n}\n\n/**\n * A mode. Will soon be obsolete.\n * @internal\n */\nexport interface IMode {\n\n\tgetId(): string;\n\n\tgetLanguageIdentifier(): LanguageIdentifier;\n\n}\n\n/**\n * A font style. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum FontStyle {\n\tNotSet = -1,\n\tNone = 0,\n\tItalic = 1,\n\tBold = 2,\n\tUnderline = 4\n}\n\n/**\n * Open ended enum at runtime\n * @internal\n */\nexport const enum ColorId {\n\tNone = 0,\n\tDefaultForeground = 1,\n\tDefaultBackground = 2\n}\n\n/**\n * A standard token type. Values are 2^x such that a bit mask can be used.\n * @internal\n */\nexport const enum StandardTokenType {\n\tOther = 0,\n\tComment = 1,\n\tString = 2,\n\tRegEx = 4\n}\n\n/**\n * Helpers to manage the \"collapsed\" metadata of an entire StackElement stack.\n * The following assumptions have been made:\n *  - languageId < 256 => needs 8 bits\n *  - unique color count < 512 => needs 9 bits\n *\n * The binary format is:\n * - -------------------------------------------\n *     3322 2222 2222 1111 1111 1100 0000 0000\n *     1098 7654 3210 9876 5432 1098 7654 3210\n * - -------------------------------------------\n *     xxxx xxxx xxxx xxxx xxxx xxxx xxxx xxxx\n *     bbbb bbbb bfff ffff ffFF FTTT LLLL LLLL\n * - -------------------------------------------\n *  - L = LanguageId (8 bits)\n *  - T = StandardTokenType (3 bits)\n *  - F = FontStyle (3 bits)\n *  - f = foreground color (9 bits)\n *  - b = background color (9 bits)\n *\n * @internal\n */\nexport const enum MetadataConsts {\n\tLANGUAGEID_MASK = 0b00000000000000000000000011111111,\n\tTOKEN_TYPE_MASK = 0b00000000000000000000011100000000,\n\tFONT_STYLE_MASK = 0b00000000000000000011100000000000,\n\tFOREGROUND_MASK = 0b00000000011111111100000000000000,\n\tBACKGROUND_MASK = 0b11111111100000000000000000000000,\n\n\tITALIC_MASK = 0b00000000000000000000100000000000,\n\tBOLD_MASK = 0b00000000000000000001000000000000,\n\tUNDERLINE_MASK = 0b00000000000000000010000000000000,\n\n\tSEMANTIC_USE_ITALIC = 0b00000000000000000000000000000001,\n\tSEMANTIC_USE_BOLD = 0b00000000000000000000000000000010,\n\tSEMANTIC_USE_UNDERLINE = 0b00000000000000000000000000000100,\n\tSEMANTIC_USE_FOREGROUND = 0b00000000000000000000000000001000,\n\tSEMANTIC_USE_BACKGROUND = 0b00000000000000000000000000010000,\n\n\tLANGUAGEID_OFFSET = 0,\n\tTOKEN_TYPE_OFFSET = 8,\n\tFONT_STYLE_OFFSET = 11,\n\tFOREGROUND_OFFSET = 14,\n\tBACKGROUND_OFFSET = 23\n}\n\n/**\n * @internal\n */\nexport class TokenMetadata {\n\n\tpublic static getLanguageId(metadata: number): LanguageId {\n\t\treturn (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n\t}\n\n\tpublic static getTokenType(metadata: number): StandardTokenType {\n\t\treturn (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n\t}\n\n\tpublic static getFontStyle(metadata: number): FontStyle {\n\t\treturn (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n\t}\n\n\tpublic static getForeground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n\t}\n\n\tpublic static getBackground(metadata: number): ColorId {\n\t\treturn (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n\t}\n\n\tpublic static getClassNameFromMetadata(metadata: number): string {\n\t\tlet foreground = this.getForeground(metadata);\n\t\tlet className = 'mtk' + foreground;\n\n\t\tlet fontStyle = this.getFontStyle(metadata);\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tclassName += ' mtki';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tclassName += ' mtkb';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tclassName += ' mtku';\n\t\t}\n\n\t\treturn className;\n\t}\n\n\tpublic static getInlineStyleFromMetadata(metadata: number, colorMap: string[]): string {\n\t\tconst foreground = this.getForeground(metadata);\n\t\tconst fontStyle = this.getFontStyle(metadata);\n\n\t\tlet result = `color: ${colorMap[foreground]};`;\n\t\tif (fontStyle & FontStyle.Italic) {\n\t\t\tresult += 'font-style: italic;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Bold) {\n\t\t\tresult += 'font-weight: bold;';\n\t\t}\n\t\tif (fontStyle & FontStyle.Underline) {\n\t\t\tresult += 'text-decoration: underline;';\n\t\t}\n\t\treturn result;\n\t}\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationSupport {\n\n\tgetInitialState(): IState;\n\n\t// add offsetDelta to each of the returned indices\n\ttokenize(line: string, state: IState, offsetDelta: number): TokenizationResult;\n\n\ttokenize2(line: string, state: IState, offsetDelta: number): TokenizationResult2;\n}\n\n/**\n * The state of the tokenizer between two lines.\n * It is useful to store flags such as in multiline comment, etc.\n * The model will clone the previous line's state and pass it in to tokenize the next line.\n */\nexport interface IState {\n\tclone(): IState;\n\tequals(other: IState): boolean;\n}\n\n/**\n * A provider result represents the values a provider, like the [`HoverProvider`](#HoverProvider),\n * may return. For once this is the actual result type `T`, like `Hover`, or a thenable that resolves\n * to that type `T`. In addition, `null` and `undefined` can be returned - either directly or from a\n * thenable.\n */\nexport type ProviderResult<T> = T | undefined | null | Thenable<T | undefined | null>;\n\n/**\n * A hover represents additional information for a symbol or word. Hovers are\n * rendered in a tooltip-like widget.\n */\nexport interface Hover {\n\t/**\n\t * The contents of this hover.\n\t */\n\tcontents: IMarkdownString[];\n\n\t/**\n\t * The range to which this hover applies. When missing, the\n\t * editor will use the range at the current position or the\n\t * current position itself.\n\t */\n\trange?: IRange;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface HoverProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideHover(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Hover>;\n}\n\n/**\n * An evaluatable expression represents additional information for an expression in a document. Evaluatable expression are\n * evaluated by a debugger or runtime and their result is rendered in a tooltip-like widget.\n * @internal\n */\nexport interface EvaluatableExpression {\n\t/**\n\t * The range to which this expression applies.\n\t */\n\trange: IRange;\n\t/*\n\t * This expression overrides the expression extracted from the range.\n\t */\n\texpression?: string;\n}\n\n/**\n * The hover provider interface defines the contract between extensions and\n * the [hover](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n * @internal\n */\nexport interface EvaluatableExpressionProvider {\n\t/**\n\t * Provide a hover for the given position and document. Multiple hovers at the same\n\t * position will be merged by the editor. A hover can have a range which defaults\n\t * to the word range at the position when omitted.\n\t */\n\tprovideEvaluatableExpression(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<EvaluatableExpression>;\n}\n\nexport const enum CompletionItemKind {\n\tMethod,\n\tFunction,\n\tConstructor,\n\tField,\n\tVariable,\n\tClass,\n\tStruct,\n\tInterface,\n\tModule,\n\tProperty,\n\tEvent,\n\tOperator,\n\tUnit,\n\tValue,\n\tConstant,\n\tEnum,\n\tEnumMember,\n\tKeyword,\n\tText,\n\tColor,\n\tFile,\n\tReference,\n\tCustomcolor,\n\tFolder,\n\tTypeParameter,\n\tUser,\n\tIssue,\n\tSnippet, // <- highest value (used for compare!)\n}\n\n/**\n * @internal\n */\nexport const completionKindToCssClass = (function () {\n\tlet data = Object.create(null);\n\tdata[CompletionItemKind.Method] = 'symbol-method';\n\tdata[CompletionItemKind.Function] = 'symbol-function';\n\tdata[CompletionItemKind.Constructor] = 'symbol-constructor';\n\tdata[CompletionItemKind.Field] = 'symbol-field';\n\tdata[CompletionItemKind.Variable] = 'symbol-variable';\n\tdata[CompletionItemKind.Class] = 'symbol-class';\n\tdata[CompletionItemKind.Struct] = 'symbol-struct';\n\tdata[CompletionItemKind.Interface] = 'symbol-interface';\n\tdata[CompletionItemKind.Module] = 'symbol-module';\n\tdata[CompletionItemKind.Property] = 'symbol-property';\n\tdata[CompletionItemKind.Event] = 'symbol-event';\n\tdata[CompletionItemKind.Operator] = 'symbol-operator';\n\tdata[CompletionItemKind.Unit] = 'symbol-unit';\n\tdata[CompletionItemKind.Value] = 'symbol-value';\n\tdata[CompletionItemKind.Constant] = 'symbol-constant';\n\tdata[CompletionItemKind.Enum] = 'symbol-enum';\n\tdata[CompletionItemKind.EnumMember] = 'symbol-enum-member';\n\tdata[CompletionItemKind.Keyword] = 'symbol-keyword';\n\tdata[CompletionItemKind.Snippet] = 'symbol-snippet';\n\tdata[CompletionItemKind.Text] = 'symbol-text';\n\tdata[CompletionItemKind.Color] = 'symbol-color';\n\tdata[CompletionItemKind.File] = 'symbol-file';\n\tdata[CompletionItemKind.Reference] = 'symbol-reference';\n\tdata[CompletionItemKind.Customcolor] = 'symbol-customcolor';\n\tdata[CompletionItemKind.Folder] = 'symbol-folder';\n\tdata[CompletionItemKind.TypeParameter] = 'symbol-type-parameter';\n\tdata[CompletionItemKind.User] = 'account';\n\tdata[CompletionItemKind.Issue] = 'issues';\n\n\treturn function (kind: CompletionItemKind): string {\n\t\tconst name = data[kind];\n\t\tlet codicon = name && iconRegistry.get(name);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for CompletionItemKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn codicon.classNames;\n\t};\n})();\n\n/**\n * @internal\n */\nexport let completionKindFromString: {\n\t(value: string): CompletionItemKind;\n\t(value: string, strict: true): CompletionItemKind | undefined;\n} = (function () {\n\tlet data: Record<string, CompletionItemKind> = Object.create(null);\n\tdata['method'] = CompletionItemKind.Method;\n\tdata['function'] = CompletionItemKind.Function;\n\tdata['constructor'] = <any>CompletionItemKind.Constructor;\n\tdata['field'] = CompletionItemKind.Field;\n\tdata['variable'] = CompletionItemKind.Variable;\n\tdata['class'] = CompletionItemKind.Class;\n\tdata['struct'] = CompletionItemKind.Struct;\n\tdata['interface'] = CompletionItemKind.Interface;\n\tdata['module'] = CompletionItemKind.Module;\n\tdata['property'] = CompletionItemKind.Property;\n\tdata['event'] = CompletionItemKind.Event;\n\tdata['operator'] = CompletionItemKind.Operator;\n\tdata['unit'] = CompletionItemKind.Unit;\n\tdata['value'] = CompletionItemKind.Value;\n\tdata['constant'] = CompletionItemKind.Constant;\n\tdata['enum'] = CompletionItemKind.Enum;\n\tdata['enum-member'] = CompletionItemKind.EnumMember;\n\tdata['enumMember'] = CompletionItemKind.EnumMember;\n\tdata['keyword'] = CompletionItemKind.Keyword;\n\tdata['snippet'] = CompletionItemKind.Snippet;\n\tdata['text'] = CompletionItemKind.Text;\n\tdata['color'] = CompletionItemKind.Color;\n\tdata['file'] = CompletionItemKind.File;\n\tdata['reference'] = CompletionItemKind.Reference;\n\tdata['customcolor'] = CompletionItemKind.Customcolor;\n\tdata['folder'] = CompletionItemKind.Folder;\n\tdata['type-parameter'] = CompletionItemKind.TypeParameter;\n\tdata['typeParameter'] = CompletionItemKind.TypeParameter;\n\tdata['account'] = CompletionItemKind.User;\n\tdata['issue'] = CompletionItemKind.Issue;\n\treturn function (value: string, strict?: true) {\n\t\tlet res = data[value];\n\t\tif (typeof res === 'undefined' && !strict) {\n\t\t\tres = CompletionItemKind.Property;\n\t\t}\n\t\treturn res;\n\t};\n})();\n\nexport interface CompletionItemLabel {\n\t/**\n\t * The function or variable. Rendered leftmost.\n\t */\n\tname: string;\n\n\t/**\n\t * The parameters without the return type. Render after `name`.\n\t */\n\tparameters?: string;\n\n\t/**\n\t * The fully qualified name, like package name or file path. Rendered after `signature`.\n\t */\n\tqualifier?: string;\n\n\t/**\n\t * The return-type of a function or type of a property/variable. Rendered rightmost.\n\t */\n\ttype?: string;\n}\n\nexport const enum CompletionItemTag {\n\tDeprecated = 1\n}\n\nexport const enum CompletionItemInsertTextRule {\n\t/**\n\t * Adjust whitespace/indentation of multiline insert texts to\n\t * match the current line indentation.\n\t */\n\tKeepWhitespace = 0b001,\n\n\t/**\n\t * `insertText` is a snippet.\n\t */\n\tInsertAsSnippet = 0b100,\n}\n\n/**\n * A completion item represents a text snippet that is\n * proposed to complete text that is being typed.\n */\nexport interface CompletionItem {\n\t/**\n\t * The label of this completion item. By default\n\t * this is also the text that is inserted when selecting\n\t * this completion.\n\t */\n\tlabel: string | CompletionItemLabel;\n\t/**\n\t * The kind of this completion item. Based on the kind\n\t * an icon is chosen by the editor.\n\t */\n\tkind: CompletionItemKind;\n\t/**\n\t * A modifier to the `kind` which affect how the item\n\t * is rendered, e.g. Deprecated is rendered with a strikeout\n\t */\n\ttags?: ReadonlyArray<CompletionItemTag>;\n\t/**\n\t * A human-readable string with additional information\n\t * about this item, like type or symbol information.\n\t */\n\tdetail?: string;\n\t/**\n\t * A human-readable string that represents a doc-comment.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * A string that should be used when comparing this item\n\t * with other items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tsortText?: string;\n\t/**\n\t * A string that should be used when filtering a set of\n\t * completion items. When `falsy` the [label](#CompletionItem.label)\n\t * is used.\n\t */\n\tfilterText?: string;\n\t/**\n\t * Select this item when showing. *Note* that only one completion item can be selected and\n\t * that the editor decides which item that is. The rule is that the *first* item of those\n\t * that match best is selected.\n\t */\n\tpreselect?: boolean;\n\t/**\n\t * A string or snippet that should be inserted in a document when selecting\n\t * this completion.\n\t * is used.\n\t */\n\tinsertText: string;\n\t/**\n\t * Addition rules (as bitmask) that should be applied when inserting\n\t * this completion.\n\t */\n\tinsertTextRules?: CompletionItemInsertTextRule;\n\t/**\n\t * A range of text that should be replaced by this completion item.\n\t *\n\t * Defaults to a range from the start of the [current word](#TextDocument.getWordRangeAtPosition) to the\n\t * current position.\n\t *\n\t * *Note:* The range must be a [single line](#Range.isSingleLine) and it must\n\t * [contain](#Range.contains) the position at which completion has been [requested](#CompletionItemProvider.provideCompletionItems).\n\t */\n\trange: IRange | { insert: IRange, replace: IRange };\n\t/**\n\t * An optional set of characters that when pressed while this completion is active will accept it first and\n\t * then type that character. *Note* that all commit characters should have `length=1` and that superfluous\n\t * characters will be ignored.\n\t */\n\tcommitCharacters?: string[];\n\t/**\n\t * An optional array of additional text edits that are applied when\n\t * selecting this completion. Edits must not overlap with the main edit\n\t * nor with themselves.\n\t */\n\tadditionalTextEdits?: model.ISingleEditOperation[];\n\t/**\n\t * A command that should be run upon acceptance of this item.\n\t */\n\tcommand?: Command;\n\n\t/**\n\t * @internal\n\t */\n\t_id?: [number, number];\n}\n\nexport interface CompletionList {\n\tsuggestions: CompletionItem[];\n\tincomplete?: boolean;\n\tdispose?(): void;\n}\n\n/**\n * How a suggest provider was triggered.\n */\nexport const enum CompletionTriggerKind {\n\tInvoke = 0,\n\tTriggerCharacter = 1,\n\tTriggerForIncompleteCompletions = 2\n}\n/**\n * Contains additional information about the context in which\n * [completion provider](#CompletionItemProvider.provideCompletionItems) is triggered.\n */\nexport interface CompletionContext {\n\t/**\n\t * How the completion was triggered.\n\t */\n\ttriggerKind: CompletionTriggerKind;\n\t/**\n\t * Character that triggered the completion item provider.\n\t *\n\t * `undefined` if provider was not triggered by a character.\n\t */\n\ttriggerCharacter?: string;\n}\n/**\n * The completion item provider interface defines the contract between extensions and\n * the [IntelliSense](https://code.visualstudio.com/docs/editor/intellisense).\n *\n * When computing *complete* completion items is expensive, providers can optionally implement\n * the `resolveCompletionItem`-function. In that case it is enough to return completion\n * items with a [label](#CompletionItem.label) from the\n * [provideCompletionItems](#CompletionItemProvider.provideCompletionItems)-function. Subsequently,\n * when a completion item is shown in the UI and gains focus this provider is asked to resolve\n * the item, like adding [doc-comment](#CompletionItem.documentation) or [details](#CompletionItem.detail).\n */\nexport interface CompletionItemProvider {\n\n\t/**\n\t * @internal\n\t */\n\t_debugDisplayName?: string;\n\n\ttriggerCharacters?: string[];\n\t/**\n\t * Provide completion items for the given position and document.\n\t */\n\tprovideCompletionItems(model: model.ITextModel, position: Position, context: CompletionContext, token: CancellationToken): ProviderResult<CompletionList>;\n\n\t/**\n\t * Given a completion item fill in more data, like [doc-comment](#CompletionItem.documentation)\n\t * or [details](#CompletionItem.detail).\n\t *\n\t * The editor will only resolve a completion item once.\n\t */\n\tresolveCompletionItem?(item: CompletionItem, token: CancellationToken): ProviderResult<CompletionItem>;\n}\n\nexport interface CodeAction {\n\ttitle: string;\n\tcommand?: Command;\n\tedit?: WorkspaceEdit;\n\tdiagnostics?: IMarkerData[];\n\tkind?: string;\n\tisPreferred?: boolean;\n\tdisabled?: string;\n}\n\n/**\n * @internal\n */\nexport const enum CodeActionTriggerType {\n\tAuto = 1,\n\tManual = 2,\n}\n\n/**\n * @internal\n */\nexport interface CodeActionContext {\n\tonly?: string;\n\ttrigger: CodeActionTriggerType;\n}\n\nexport interface CodeActionList extends IDisposable {\n\treadonly actions: ReadonlyArray<CodeAction>;\n}\n\n/**\n * The code action interface defines the contract between extensions and\n * the [light bulb](https://code.visualstudio.com/docs/editor/editingevolved#_code-action) feature.\n * @internal\n */\nexport interface CodeActionProvider {\n\n\tdisplayName?: string\n\n\t/**\n\t * Provide commands for the given document and range.\n\t */\n\tprovideCodeActions(model: model.ITextModel, range: Range | Selection, context: CodeActionContext, token: CancellationToken): ProviderResult<CodeActionList>;\n\n\t/**\n\t * Given a code action fill in the edit. Will only invoked when missing.\n\t */\n\tresolveCodeAction?(codeAction: CodeAction, token: CancellationToken): ProviderResult<CodeAction>;\n\n\t/**\n\t * Optional list of CodeActionKinds that this provider returns.\n\t */\n\treadonly providedCodeActionKinds?: ReadonlyArray<string>;\n\n\treadonly documentation?: ReadonlyArray<{ readonly kind: string, readonly command: Command }>;\n\n\t/**\n\t * @internal\n\t */\n\t_getAdditionalMenuItems?(context: CodeActionContext, actions: readonly CodeAction[]): Command[];\n}\n\n/**\n * Represents a parameter of a callable-signature. A parameter can\n * have a label and a doc-comment.\n */\nexport interface ParameterInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string | [number, number];\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n}\n/**\n * Represents the signature of something callable. A signature\n * can have a label, like a function-name, a doc-comment, and\n * a set of parameters.\n */\nexport interface SignatureInformation {\n\t/**\n\t * The label of this signature. Will be shown in\n\t * the UI.\n\t */\n\tlabel: string;\n\t/**\n\t * The human-readable doc-comment of this signature. Will be shown\n\t * in the UI but can be omitted.\n\t */\n\tdocumentation?: string | IMarkdownString;\n\t/**\n\t * The parameters of this signature.\n\t */\n\tparameters: ParameterInformation[];\n\t/**\n\t * Index of the active parameter.\n\t *\n\t * If provided, this is used in place of `SignatureHelp.activeSignature`.\n\t */\n\tactiveParameter?: number;\n}\n/**\n * Signature help represents the signature of something\n * callable. There can be multiple signatures but only one\n * active and only one active parameter.\n */\nexport interface SignatureHelp {\n\t/**\n\t * One or more signatures.\n\t */\n\tsignatures: SignatureInformation[];\n\t/**\n\t * The active signature.\n\t */\n\tactiveSignature: number;\n\t/**\n\t * The active parameter of the active signature.\n\t */\n\tactiveParameter: number;\n}\n\nexport interface SignatureHelpResult extends IDisposable {\n\tvalue: SignatureHelp;\n}\n\nexport enum SignatureHelpTriggerKind {\n\tInvoke = 1,\n\tTriggerCharacter = 2,\n\tContentChange = 3,\n}\n\nexport interface SignatureHelpContext {\n\treadonly triggerKind: SignatureHelpTriggerKind;\n\treadonly triggerCharacter?: string;\n\treadonly isRetrigger: boolean;\n\treadonly activeSignatureHelp?: SignatureHelp;\n}\n\n/**\n * The signature help provider interface defines the contract between extensions and\n * the [parameter hints](https://code.visualstudio.com/docs/editor/intellisense)-feature.\n */\nexport interface SignatureHelpProvider {\n\n\treadonly signatureHelpTriggerCharacters?: ReadonlyArray<string>;\n\treadonly signatureHelpRetriggerCharacters?: ReadonlyArray<string>;\n\n\t/**\n\t * Provide help for the signature at the given position and document.\n\t */\n\tprovideSignatureHelp(model: model.ITextModel, position: Position, token: CancellationToken, context: SignatureHelpContext): ProviderResult<SignatureHelpResult>;\n}\n\n/**\n * A document highlight kind.\n */\nexport enum DocumentHighlightKind {\n\t/**\n\t * A textual occurrence.\n\t */\n\tText,\n\t/**\n\t * Read-access of a symbol, like reading a variable.\n\t */\n\tRead,\n\t/**\n\t * Write-access of a symbol, like writing to a variable.\n\t */\n\tWrite\n}\n/**\n * A document highlight is a range inside a text document which deserves\n * special attention. Usually a document highlight is visualized by changing\n * the background color of its range.\n */\nexport interface DocumentHighlight {\n\t/**\n\t * The range this highlight applies to.\n\t */\n\trange: IRange;\n\t/**\n\t * The highlight kind, default is [text](#DocumentHighlightKind.Text).\n\t */\n\tkind?: DocumentHighlightKind;\n}\n/**\n * The document highlight provider interface defines the contract between extensions and\n * the word-highlight-feature.\n */\nexport interface DocumentHighlightProvider {\n\t/**\n\t * Provide a set of document highlights, like all occurrences of a variable or\n\t * all exit-points of a function.\n\t */\n\tprovideDocumentHighlights(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<DocumentHighlight[]>;\n}\n\n/**\n * The rename provider interface defines the contract between extensions and\n * the live-rename feature.\n */\nexport interface OnTypeRenameProvider {\n\n\twordPattern?: RegExp;\n\n\t/**\n\t * Provide a list of ranges that can be live-renamed together.\n\t */\n\tprovideOnTypeRenameRanges(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<{ ranges: IRange[]; wordPattern?: RegExp; }>;\n}\n\n/**\n * Value-object that contains additional information when\n * requesting references.\n */\nexport interface ReferenceContext {\n\t/**\n\t * Include the declaration of the current symbol.\n\t */\n\tincludeDeclaration: boolean;\n}\n/**\n * The reference provider interface defines the contract between extensions and\n * the [find references](https://code.visualstudio.com/docs/editor/editingevolved#_peek)-feature.\n */\nexport interface ReferenceProvider {\n\t/**\n\t * Provide a set of project-wide references for the given position and document.\n\t */\n\tprovideReferences(model: model.ITextModel, position: Position, context: ReferenceContext, token: CancellationToken): ProviderResult<Location[]>;\n}\n\n/**\n * Represents a location inside a resource, such as a line\n * inside a text file.\n */\nexport interface Location {\n\t/**\n\t * The resource identifier of this location.\n\t */\n\turi: URI;\n\t/**\n\t * The document range of this locations.\n\t */\n\trange: IRange;\n}\n\nexport interface LocationLink {\n\t/**\n\t * A range to select where this link originates from.\n\t */\n\toriginSelectionRange?: IRange;\n\n\t/**\n\t * The target uri this link points to.\n\t */\n\turi: URI;\n\n\t/**\n\t * The full range this link points to.\n\t */\n\trange: IRange;\n\n\t/**\n\t * A range to select this link points to. Must be contained\n\t * in `LocationLink.range`.\n\t */\n\ttargetSelectionRange?: IRange;\n}\n\n/**\n * @internal\n */\nexport function isLocationLink(thing: any): thing is LocationLink {\n\treturn thing\n\t\t&& URI.isUri((thing as LocationLink).uri)\n\t\t&& Range.isIRange((thing as LocationLink).range)\n\t\t&& (Range.isIRange((thing as LocationLink).originSelectionRange) || Range.isIRange((thing as LocationLink).targetSelectionRange));\n}\n\nexport type Definition = Location | Location[] | LocationLink[];\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DefinitionProvider {\n\t/**\n\t * Provide the definition of the symbol at the given position and document.\n\t */\n\tprovideDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The definition provider interface defines the contract between extensions and\n * the [go to definition](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-definition)\n * and peek definition features.\n */\nexport interface DeclarationProvider {\n\t/**\n\t * Provide the declaration of the symbol at the given position and document.\n\t */\n\tprovideDeclaration(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The implementation provider interface defines the contract between extensions and\n * the go to implementation feature.\n */\nexport interface ImplementationProvider {\n\t/**\n\t * Provide the implementation of the symbol at the given position and document.\n\t */\n\tprovideImplementation(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * The type definition provider interface defines the contract between extensions and\n * the go to type definition feature.\n */\nexport interface TypeDefinitionProvider {\n\t/**\n\t * Provide the type definition of the symbol at the given position and document.\n\t */\n\tprovideTypeDefinition(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<Definition | LocationLink[]>;\n}\n\n/**\n * A symbol kind.\n */\nexport const enum SymbolKind {\n\tFile = 0,\n\tModule = 1,\n\tNamespace = 2,\n\tPackage = 3,\n\tClass = 4,\n\tMethod = 5,\n\tProperty = 6,\n\tField = 7,\n\tConstructor = 8,\n\tEnum = 9,\n\tInterface = 10,\n\tFunction = 11,\n\tVariable = 12,\n\tConstant = 13,\n\tString = 14,\n\tNumber = 15,\n\tBoolean = 16,\n\tArray = 17,\n\tObject = 18,\n\tKey = 19,\n\tNull = 20,\n\tEnumMember = 21,\n\tStruct = 22,\n\tEvent = 23,\n\tOperator = 24,\n\tTypeParameter = 25\n}\n\nexport const enum SymbolTag {\n\tDeprecated = 1,\n}\n\n/**\n * @internal\n */\nexport namespace SymbolKinds {\n\n\tconst byName = new Map<string, SymbolKind>();\n\tbyName.set('file', SymbolKind.File);\n\tbyName.set('module', SymbolKind.Module);\n\tbyName.set('namespace', SymbolKind.Namespace);\n\tbyName.set('package', SymbolKind.Package);\n\tbyName.set('class', SymbolKind.Class);\n\tbyName.set('method', SymbolKind.Method);\n\tbyName.set('property', SymbolKind.Property);\n\tbyName.set('field', SymbolKind.Field);\n\tbyName.set('constructor', SymbolKind.Constructor);\n\tbyName.set('enum', SymbolKind.Enum);\n\tbyName.set('interface', SymbolKind.Interface);\n\tbyName.set('function', SymbolKind.Function);\n\tbyName.set('variable', SymbolKind.Variable);\n\tbyName.set('constant', SymbolKind.Constant);\n\tbyName.set('string', SymbolKind.String);\n\tbyName.set('number', SymbolKind.Number);\n\tbyName.set('boolean', SymbolKind.Boolean);\n\tbyName.set('array', SymbolKind.Array);\n\tbyName.set('object', SymbolKind.Object);\n\tbyName.set('key', SymbolKind.Key);\n\tbyName.set('null', SymbolKind.Null);\n\tbyName.set('enum-member', SymbolKind.EnumMember);\n\tbyName.set('struct', SymbolKind.Struct);\n\tbyName.set('event', SymbolKind.Event);\n\tbyName.set('operator', SymbolKind.Operator);\n\tbyName.set('type-parameter', SymbolKind.TypeParameter);\n\n\tconst byKind = new Map<SymbolKind, string>();\n\tbyKind.set(SymbolKind.File, 'file');\n\tbyKind.set(SymbolKind.Module, 'module');\n\tbyKind.set(SymbolKind.Namespace, 'namespace');\n\tbyKind.set(SymbolKind.Package, 'package');\n\tbyKind.set(SymbolKind.Class, 'class');\n\tbyKind.set(SymbolKind.Method, 'method');\n\tbyKind.set(SymbolKind.Property, 'property');\n\tbyKind.set(SymbolKind.Field, 'field');\n\tbyKind.set(SymbolKind.Constructor, 'constructor');\n\tbyKind.set(SymbolKind.Enum, 'enum');\n\tbyKind.set(SymbolKind.Interface, 'interface');\n\tbyKind.set(SymbolKind.Function, 'function');\n\tbyKind.set(SymbolKind.Variable, 'variable');\n\tbyKind.set(SymbolKind.Constant, 'constant');\n\tbyKind.set(SymbolKind.String, 'string');\n\tbyKind.set(SymbolKind.Number, 'number');\n\tbyKind.set(SymbolKind.Boolean, 'boolean');\n\tbyKind.set(SymbolKind.Array, 'array');\n\tbyKind.set(SymbolKind.Object, 'object');\n\tbyKind.set(SymbolKind.Key, 'key');\n\tbyKind.set(SymbolKind.Null, 'null');\n\tbyKind.set(SymbolKind.EnumMember, 'enum-member');\n\tbyKind.set(SymbolKind.Struct, 'struct');\n\tbyKind.set(SymbolKind.Event, 'event');\n\tbyKind.set(SymbolKind.Operator, 'operator');\n\tbyKind.set(SymbolKind.TypeParameter, 'type-parameter');\n\t/**\n\t * @internal\n\t */\n\texport function fromString(value: string): SymbolKind | undefined {\n\t\treturn byName.get(value);\n\t}\n\t/**\n\t * @internal\n\t */\n\texport function toString(kind: SymbolKind): string | undefined {\n\t\treturn byKind.get(kind);\n\t}\n\t/**\n\t * @internal\n\t */\n\texport function toCssClassName(kind: SymbolKind, inline?: boolean): string {\n\t\tconst symbolName = byKind.get(kind);\n\t\tlet codicon = symbolName && iconRegistry.get('symbol-' + symbolName);\n\t\tif (!codicon) {\n\t\t\tconsole.info('No codicon found for SymbolKind ' + kind);\n\t\t\tcodicon = Codicon.symbolProperty;\n\t\t}\n\t\treturn `${inline ? 'inline' : 'block'} ${codicon.classNames}`;\n\t}\n}\n\nexport interface DocumentSymbol {\n\tname: string;\n\tdetail: string;\n\tkind: SymbolKind;\n\ttags: ReadonlyArray<SymbolTag>;\n\tcontainerName?: string;\n\trange: IRange;\n\tselectionRange: IRange;\n\tchildren?: DocumentSymbol[];\n}\n\n/**\n * The document symbol provider interface defines the contract between extensions and\n * the [go to symbol](https://code.visualstudio.com/docs/editor/editingevolved#_go-to-symbol)-feature.\n */\nexport interface DocumentSymbolProvider {\n\n\tdisplayName?: string;\n\n\t/**\n\t * Provide symbol information for the given document.\n\t */\n\tprovideDocumentSymbols(model: model.ITextModel, token: CancellationToken): ProviderResult<DocumentSymbol[]>;\n}\n\nexport type TextEdit = { range: IRange; text: string; eol?: model.EndOfLineSequence; };\n\n/**\n * Interface used to format a model\n */\nexport interface FormattingOptions {\n\t/**\n\t * Size of a tab in spaces.\n\t */\n\ttabSize: number;\n\t/**\n\t * Prefer spaces over tabs.\n\t */\n\tinsertSpaces: boolean;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentFormattingEditProvider {\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a whole document.\n\t */\n\tprovideDocumentFormattingEdits(model: model.ITextModel, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface DocumentRangeFormattingEditProvider {\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\treadonly displayName?: string;\n\n\t/**\n\t * Provide formatting edits for a range in a document.\n\t *\n\t * The given range is a hint and providers can decide to format a smaller\n\t * or larger range. Often this is done by adjusting the start and end\n\t * of the range to full syntax nodes.\n\t */\n\tprovideDocumentRangeFormattingEdits(model: model.ITextModel, range: Range, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n/**\n * The document formatting provider interface defines the contract between extensions and\n * the formatting-feature.\n */\nexport interface OnTypeFormattingEditProvider {\n\n\n\t/**\n\t * @internal\n\t */\n\treadonly extensionId?: ExtensionIdentifier;\n\n\tautoFormatTriggerCharacters: string[];\n\n\t/**\n\t * Provide formatting edits after a character has been typed.\n\t *\n\t * The given position and character should hint to the provider\n\t * what range the position to expand to, like find the matching `{`\n\t * when `}` has been entered.\n\t */\n\tprovideOnTypeFormattingEdits(model: model.ITextModel, position: Position, ch: string, options: FormattingOptions, token: CancellationToken): ProviderResult<TextEdit[]>;\n}\n\n/**\n * @internal\n */\nexport interface IInplaceReplaceSupportResult {\n\tvalue: string;\n\trange: IRange;\n}\n\n/**\n * A link inside the editor.\n */\nexport interface ILink {\n\trange: IRange;\n\turl?: URI | string;\n\ttooltip?: string;\n}\n\nexport interface ILinksList {\n\tlinks: ILink[];\n\tdispose?(): void;\n}\n/**\n * A provider of links.\n */\nexport interface LinkProvider {\n\tprovideLinks(model: model.ITextModel, token: CancellationToken): ProviderResult<ILinksList>;\n\tresolveLink?: (link: ILink, token: CancellationToken) => ProviderResult<ILink>;\n}\n\n/**\n * A color in RGBA format.\n */\nexport interface IColor {\n\n\t/**\n\t * The red component in the range [0-1].\n\t */\n\treadonly red: number;\n\n\t/**\n\t * The green component in the range [0-1].\n\t */\n\treadonly green: number;\n\n\t/**\n\t * The blue component in the range [0-1].\n\t */\n\treadonly blue: number;\n\n\t/**\n\t * The alpha component in the range [0-1].\n\t */\n\treadonly alpha: number;\n}\n\n/**\n * String representations for a color\n */\nexport interface IColorPresentation {\n\t/**\n\t * The label of this color presentation. It will be shown on the color\n\t * picker header. By default this is also the text that is inserted when selecting\n\t * this color presentation.\n\t */\n\tlabel: string;\n\t/**\n\t * An [edit](#TextEdit) which is applied to a document when selecting\n\t * this presentation for the color.\n\t */\n\ttextEdit?: TextEdit;\n\t/**\n\t * An optional array of additional [text edits](#TextEdit) that are applied when\n\t * selecting this color presentation.\n\t */\n\tadditionalTextEdits?: TextEdit[];\n}\n\n/**\n * A color range is a range in a text model which represents a color.\n */\nexport interface IColorInformation {\n\n\t/**\n\t * The range within the model.\n\t */\n\trange: IRange;\n\n\t/**\n\t * The color represented in this range.\n\t */\n\tcolor: IColor;\n}\n\n/**\n * A provider of colors for editor models.\n */\nexport interface DocumentColorProvider {\n\t/**\n\t * Provides the color ranges for a specific model.\n\t */\n\tprovideDocumentColors(model: model.ITextModel, token: CancellationToken): ProviderResult<IColorInformation[]>;\n\t/**\n\t * Provide the string representations for a color.\n\t */\n\tprovideColorPresentations(model: model.ITextModel, colorInfo: IColorInformation, token: CancellationToken): ProviderResult<IColorPresentation[]>;\n}\n\nexport interface SelectionRange {\n\trange: IRange;\n}\n\nexport interface SelectionRangeProvider {\n\t/**\n\t * Provide ranges that should be selected from the given position.\n\t */\n\tprovideSelectionRanges(model: model.ITextModel, positions: Position[], token: CancellationToken): ProviderResult<SelectionRange[][]>;\n}\n\nexport interface FoldingContext {\n}\n/**\n * A provider of folding ranges for editor models.\n */\nexport interface FoldingRangeProvider {\n\t/**\n\t * Provides the folding ranges for a specific model.\n\t */\n\tprovideFoldingRanges(model: model.ITextModel, context: FoldingContext, token: CancellationToken): ProviderResult<FoldingRange[]>;\n}\n\nexport interface FoldingRange {\n\n\t/**\n\t * The one-based start line of the range to fold. The folded area starts after the line's last character.\n\t */\n\tstart: number;\n\n\t/**\n\t * The one-based end line of the range to fold. The folded area ends with the line's last character.\n\t */\n\tend: number;\n\n\t/**\n\t * Describes the [Kind](#FoldingRangeKind) of the folding range such as [Comment](#FoldingRangeKind.Comment) or\n\t * [Region](#FoldingRangeKind.Region). The kind is used to categorize folding ranges and used by commands\n\t * like 'Fold all comments'. See\n\t * [FoldingRangeKind](#FoldingRangeKind) for an enumeration of standardized kinds.\n\t */\n\tkind?: FoldingRangeKind;\n}\nexport class FoldingRangeKind {\n\t/**\n\t * Kind for folding range representing a comment. The value of the kind is 'comment'.\n\t */\n\tstatic readonly Comment = new FoldingRangeKind('comment');\n\t/**\n\t * Kind for folding range representing a import. The value of the kind is 'imports'.\n\t */\n\tstatic readonly Imports = new FoldingRangeKind('imports');\n\t/**\n\t * Kind for folding range representing regions (for example marked by `#region`, `#endregion`).\n\t * The value of the kind is 'region'.\n\t */\n\tstatic readonly Region = new FoldingRangeKind('region');\n\n\t/**\n\t * Creates a new [FoldingRangeKind](#FoldingRangeKind).\n\t *\n\t * @param value of the kind.\n\t */\n\tpublic constructor(public value: string) {\n\t}\n}\n\n\nexport interface WorkspaceEditMetadata {\n\tneedsConfirmation: boolean;\n\tlabel: string;\n\tdescription?: string;\n\ticonPath?: { id: string } | URI | { light: URI, dark: URI };\n}\n\nexport interface WorkspaceFileEditOptions {\n\toverwrite?: boolean;\n\tignoreIfNotExists?: boolean;\n\tignoreIfExists?: boolean;\n\trecursive?: boolean;\n}\n\nexport interface WorkspaceFileEdit {\n\toldUri?: URI;\n\tnewUri?: URI;\n\toptions?: WorkspaceFileEditOptions;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceTextEdit {\n\tresource: URI;\n\tedit: TextEdit;\n\tmodelVersionId?: number;\n\tmetadata?: WorkspaceEditMetadata;\n}\n\nexport interface WorkspaceEdit {\n\tedits: Array<WorkspaceTextEdit | WorkspaceFileEdit>;\n}\n\nexport interface Rejection {\n\trejectReason?: string;\n}\nexport interface RenameLocation {\n\trange: IRange;\n\ttext: string;\n}\n\nexport interface RenameProvider {\n\tprovideRenameEdits(model: model.ITextModel, position: Position, newName: string, token: CancellationToken): ProviderResult<WorkspaceEdit & Rejection>;\n\tresolveRenameLocation?(model: model.ITextModel, position: Position, token: CancellationToken): ProviderResult<RenameLocation & Rejection>;\n}\n\n/**\n * @internal\n */\nexport interface AuthenticationSession {\n\tid: string;\n\taccessToken: string;\n\taccount: {\n\t\tlabel: string;\n\t\tid: string;\n\t}\n\tscopes: ReadonlyArray<string>;\n}\n\n/**\n * @internal\n */\nexport interface AuthenticationSessionsChangeEvent {\n\tadded: ReadonlyArray<string>;\n\tremoved: ReadonlyArray<string>;\n\tchanged: ReadonlyArray<string>;\n}\n\n/**\n * @internal\n */\nexport interface AuthenticationProviderInformation {\n\tid: string;\n\tlabel: string;\n}\n\nexport interface Command {\n\tid: string;\n\ttitle: string;\n\ttooltip?: string;\n\targuments?: any[];\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadTemplate {\n\tcontrollerHandle: number;\n\tlabel: string;\n\tacceptInputCommand?: Command;\n\tadditionalCommands?: Command[];\n\tdeleteCommand?: Command;\n}\n\n/**\n * @internal\n */\nexport interface CommentInfo {\n\textensionId?: string;\n\tthreads: CommentThread[];\n\tcommentingRanges: CommentingRanges;\n}\n\n/**\n * @internal\n */\nexport enum CommentThreadCollapsibleState {\n\t/**\n\t * Determines an item is collapsed\n\t */\n\tCollapsed = 0,\n\t/**\n\t * Determines an item is expanded\n\t */\n\tExpanded = 1\n}\n\n\n\n/**\n * @internal\n */\nexport interface CommentWidget {\n\tcommentThread: CommentThread;\n\tcomment?: Comment;\n\tinput: string;\n\tonDidChangeInput: Event<string>;\n}\n\n/**\n * @internal\n */\nexport interface CommentInput {\n\tvalue: string;\n\turi: URI;\n}\n\n/**\n * @internal\n */\nexport interface CommentThread {\n\tcommentThreadHandle: number;\n\tcontrollerHandle: number;\n\textensionId?: string;\n\tthreadId: string;\n\tresource: string | null;\n\trange: IRange;\n\tlabel: string | undefined;\n\tcontextValue: string | undefined;\n\tcomments: Comment[] | undefined;\n\tonDidChangeComments: Event<Comment[] | undefined>;\n\tcollapsibleState?: CommentThreadCollapsibleState;\n\treadOnly: boolean;\n\tinput?: CommentInput;\n\tonDidChangeInput: Event<CommentInput | undefined>;\n\tonDidChangeRange: Event<IRange>;\n\tonDidChangeLabel: Event<string | undefined>;\n\tonDidChangeCollasibleState: Event<CommentThreadCollapsibleState | undefined>;\n\tonDidChangeReadOnly: Event<boolean>;\n\tisDisposed: boolean;\n}\n\n/**\n * @internal\n */\n\nexport interface CommentingRanges {\n\treadonly resource: URI;\n\tranges: IRange[];\n}\n\n/**\n * @internal\n */\nexport interface CommentReaction {\n\treadonly label?: string;\n\treadonly iconPath?: UriComponents;\n\treadonly count?: number;\n\treadonly hasReacted?: boolean;\n\treadonly canEdit?: boolean;\n}\n\n/**\n * @internal\n */\nexport interface CommentOptions {\n\t/**\n\t * An optional string to show on the comment input box when it's collapsed.\n\t */\n\tprompt?: string;\n\n\t/**\n\t * An optional string to show as placeholder in the comment input box when it's focused.\n\t */\n\tplaceHolder?: string;\n}\n\n/**\n * @internal\n */\nexport enum CommentMode {\n\tEditing = 0,\n\tPreview = 1\n}\n\n/**\n * @internal\n */\nexport interface Comment {\n\treadonly uniqueIdInThread: number;\n\treadonly body: IMarkdownString;\n\treadonly userName: string;\n\treadonly userIconPath?: string;\n\treadonly contextValue?: string;\n\treadonly commentReactions?: CommentReaction[];\n\treadonly label?: string;\n\treadonly mode?: CommentMode;\n}\n\n/**\n * @internal\n */\nexport interface CommentThreadChangedEvent {\n\t/**\n\t * Added comment threads.\n\t */\n\treadonly added: CommentThread[];\n\n\t/**\n\t * Removed comment threads.\n\t */\n\treadonly removed: CommentThread[];\n\n\t/**\n\t * Changed comment threads.\n\t */\n\treadonly changed: CommentThread[];\n}\n\n/**\n * @internal\n */\nexport interface IWebviewPortMapping {\n\twebviewPort: number;\n\textensionHostPort: number;\n}\n\n/**\n * @internal\n */\nexport interface IWebviewOptions {\n\treadonly enableScripts?: boolean;\n\treadonly enableCommandUris?: boolean;\n\treadonly localResourceRoots?: ReadonlyArray<UriComponents>;\n\treadonly portMapping?: ReadonlyArray<IWebviewPortMapping>;\n}\n\n/**\n * @internal\n */\nexport interface IWebviewPanelOptions {\n\treadonly enableFindWidget?: boolean;\n\treadonly retainContextWhenHidden?: boolean;\n}\n\n\nexport interface CodeLens {\n\trange: IRange;\n\tid?: string;\n\tcommand?: Command;\n}\n\nexport interface CodeLensList {\n\tlenses: CodeLens[];\n\tdispose(): void;\n}\n\nexport interface CodeLensProvider {\n\tonDidChange?: Event<this>;\n\tprovideCodeLenses(model: model.ITextModel, token: CancellationToken): ProviderResult<CodeLensList>;\n\tresolveCodeLens?(model: model.ITextModel, codeLens: CodeLens, token: CancellationToken): ProviderResult<CodeLens>;\n}\n\nexport interface SemanticTokensLegend {\n\treadonly tokenTypes: string[];\n\treadonly tokenModifiers: string[];\n}\n\nexport interface SemanticTokens {\n\treadonly resultId?: string;\n\treadonly data: Uint32Array;\n}\n\nexport interface SemanticTokensEdit {\n\treadonly start: number;\n\treadonly deleteCount: number;\n\treadonly data?: Uint32Array;\n}\n\nexport interface SemanticTokensEdits {\n\treadonly resultId?: string;\n\treadonly edits: SemanticTokensEdit[];\n}\n\nexport interface DocumentSemanticTokensProvider {\n\tonDidChange?: Event<void>;\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentSemanticTokens(model: model.ITextModel, lastResultId: string | null, token: CancellationToken): ProviderResult<SemanticTokens | SemanticTokensEdits>;\n\treleaseDocumentSemanticTokens(resultId: string | undefined): void;\n}\n\nexport interface DocumentRangeSemanticTokensProvider {\n\tgetLegend(): SemanticTokensLegend;\n\tprovideDocumentRangeSemanticTokens(model: model.ITextModel, range: Range, token: CancellationToken): ProviderResult<SemanticTokens>;\n}\n\n// --- feature registries ------\n\n/**\n * @internal\n */\nexport const ReferenceProviderRegistry = new LanguageFeatureRegistry<ReferenceProvider>();\n\n/**\n * @internal\n */\nexport const RenameProviderRegistry = new LanguageFeatureRegistry<RenameProvider>();\n\n/**\n * @internal\n */\nexport const CompletionProviderRegistry = new LanguageFeatureRegistry<CompletionItemProvider>();\n\n/**\n * @internal\n */\nexport const SignatureHelpProviderRegistry = new LanguageFeatureRegistry<SignatureHelpProvider>();\n\n/**\n * @internal\n */\nexport const HoverProviderRegistry = new LanguageFeatureRegistry<HoverProvider>();\n\n/**\n * @internal\n */\nexport const EvaluatableExpressionProviderRegistry = new LanguageFeatureRegistry<EvaluatableExpressionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSymbolProviderRegistry = new LanguageFeatureRegistry<DocumentSymbolProvider>();\n\n/**\n * @internal\n */\nexport const DocumentHighlightProviderRegistry = new LanguageFeatureRegistry<DocumentHighlightProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeRenameProviderRegistry = new LanguageFeatureRegistry<OnTypeRenameProvider>();\n\n/**\n * @internal\n */\nexport const DefinitionProviderRegistry = new LanguageFeatureRegistry<DefinitionProvider>();\n\n/**\n * @internal\n */\nexport const DeclarationProviderRegistry = new LanguageFeatureRegistry<DeclarationProvider>();\n\n/**\n * @internal\n */\nexport const ImplementationProviderRegistry = new LanguageFeatureRegistry<ImplementationProvider>();\n\n/**\n * @internal\n */\nexport const TypeDefinitionProviderRegistry = new LanguageFeatureRegistry<TypeDefinitionProvider>();\n\n/**\n * @internal\n */\nexport const CodeLensProviderRegistry = new LanguageFeatureRegistry<CodeLensProvider>();\n\n/**\n * @internal\n */\nexport const CodeActionProviderRegistry = new LanguageFeatureRegistry<CodeActionProvider>();\n\n/**\n * @internal\n */\nexport const DocumentFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeFormattingEditProviderRegistry = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const OnTypeFormattingEditProviderRegistry = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>();\n\n/**\n * @internal\n */\nexport const LinkProviderRegistry = new LanguageFeatureRegistry<LinkProvider>();\n\n/**\n * @internal\n */\nexport const ColorProviderRegistry = new LanguageFeatureRegistry<DocumentColorProvider>();\n\n/**\n * @internal\n */\nexport const SelectionRangeRegistry = new LanguageFeatureRegistry<SelectionRangeProvider>();\n\n/**\n * @internal\n */\nexport const FoldingRangeProviderRegistry = new LanguageFeatureRegistry<FoldingRangeProvider>();\n\n/**\n * @internal\n */\nexport const DocumentSemanticTokensProviderRegistry = new LanguageFeatureRegistry<DocumentSemanticTokensProvider>();\n\n/**\n * @internal\n */\nexport const DocumentRangeSemanticTokensProviderRegistry = new LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>();\n\n/**\n * @internal\n */\nexport interface ITokenizationSupportChangedEvent {\n\tchangedLanguages: string[];\n\tchangedColorMap: boolean;\n}\n\n/**\n * @internal\n */\nexport interface ITokenizationRegistry {\n\n\t/**\n\t * An event triggered when:\n\t *  - a tokenization support is registered, unregistered or changed.\n\t *  - the color map is changed.\n\t */\n\tonDidChange: Event<ITokenizationSupportChangedEvent>;\n\n\t/**\n\t * Fire a change event for a language.\n\t * This is useful for languages that embed other languages.\n\t */\n\tfire(languages: string[]): void;\n\n\t/**\n\t * Register a tokenization support.\n\t */\n\tregister(language: string, support: ITokenizationSupport): IDisposable;\n\n\t/**\n\t * Register a promise for a tokenization support.\n\t */\n\tregisterPromise(language: string, promise: Thenable<ITokenizationSupport>): IDisposable;\n\n\t/**\n\t * Get the tokenization support for a language.\n\t * Returns `null` if not found.\n\t */\n\tget(language: string): ITokenizationSupport | null;\n\n\t/**\n\t * Get the promise of a tokenization support for a language.\n\t * `null` is returned if no support is available and no promise for the support has been registered yet.\n\t */\n\tgetPromise(language: string): Thenable<ITokenizationSupport> | null;\n\n\t/**\n\t * Set the new color map that all tokens will use in their ColorId binary encoded bits for foreground and background.\n\t */\n\tsetColorMap(colorMap: Color[]): void;\n\n\tgetColorMap(): Color[] | null;\n\n\tgetDefaultBackground(): Color | null;\n}\n\n/**\n * @internal\n */\nexport const TokenizationRegistry = new TokenizationRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorId, LanguageId, StandardTokenType, TokenMetadata } from 'vs/editor/common/modes';\n\nexport interface IViewLineTokens {\n\tequals(other: IViewLineTokens): boolean;\n\tgetCount(): number;\n\tgetForeground(tokenIndex: number): ColorId;\n\tgetEndOffset(tokenIndex: number): number;\n\tgetClassName(tokenIndex: number): string;\n\tgetInlineStyle(tokenIndex: number, colorMap: string[]): string;\n\tfindTokenIndexAtOffset(offset: number): number;\n}\n\nexport class LineTokens implements IViewLineTokens {\n\t_lineTokensBrand: void;\n\n\tprivate readonly _tokens: Uint32Array;\n\tprivate readonly _tokensCount: number;\n\tprivate readonly _text: string;\n\n\tconstructor(tokens: Uint32Array, text: string) {\n\t\tthis._tokens = tokens;\n\t\tthis._tokensCount = (this._tokens.length >>> 1);\n\t\tthis._text = text;\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof LineTokens) {\n\t\t\treturn this.slicedEquals(other, 0, this._tokensCount);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic slicedEquals(other: LineTokens, sliceFromTokenIndex: number, sliceTokenCount: number): boolean {\n\t\tif (this._text !== other._text) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._tokensCount !== other._tokensCount) {\n\t\t\treturn false;\n\t\t}\n\t\tconst from = (sliceFromTokenIndex << 1);\n\t\tconst to = from + (sliceTokenCount << 1);\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tif (this._tokens[i] !== other._tokens[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getLineContent(): string {\n\t\treturn this._text;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getStartOffset(tokenIndex: number): number {\n\t\tif (tokenIndex > 0) {\n\t\t\treturn this._tokens[(tokenIndex - 1) << 1];\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn metadata;\n\t}\n\n\tpublic getLanguageId(tokenIndex: number): LanguageId {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getLanguageId(metadata);\n\t}\n\n\tpublic getStandardTokenType(tokenIndex: number): StandardTokenType {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getTokenType(metadata);\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getForeground(metadata);\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getClassNameFromMetadata(metadata);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\tconst metadata = this._tokens[(tokenIndex << 1) + 1];\n\t\treturn TokenMetadata.getInlineStyleFromMetadata(metadata, colorMap);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\treturn this._tokens[tokenIndex << 1];\n\t}\n\n\t/**\n\t * Find the token containing offset `offset`.\n\t * @param offset The search offset\n\t * @return The index of the token containing the offset.\n\t */\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn LineTokens.findIndexInTokensArray(this._tokens, offset);\n\t}\n\n\tpublic inflate(): IViewLineTokens {\n\t\treturn this;\n\t}\n\n\tpublic sliceAndInflate(startOffset: number, endOffset: number, deltaOffset: number): IViewLineTokens {\n\t\treturn new SlicedLineTokens(this, startOffset, endOffset, deltaOffset);\n\t}\n\n\tpublic static convertToEndOffset(tokens: Uint32Array, lineTextLength: number): void {\n\t\tconst tokenCount = (tokens.length >>> 1);\n\t\tconst lastTokenIndex = tokenCount - 1;\n\t\tfor (let tokenIndex = 0; tokenIndex < lastTokenIndex; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] = tokens[(tokenIndex + 1) << 1];\n\t\t}\n\t\ttokens[lastTokenIndex << 1] = lineTextLength;\n\t}\n\n\tpublic static findIndexInTokensArray(tokens: Uint32Array, desiredIndex: number): number {\n\t\tif (tokens.length <= 2) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlet low = 0;\n\t\tlet high = (tokens.length >>> 1) - 1;\n\n\t\twhile (low < high) {\n\n\t\t\tconst mid = low + Math.floor((high - low) / 2);\n\t\t\tconst endOffset = tokens[(mid << 1)];\n\n\t\t\tif (endOffset === desiredIndex) {\n\t\t\t\treturn mid + 1;\n\t\t\t} else if (endOffset < desiredIndex) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else if (endOffset > desiredIndex) {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n}\n\nexport class SlicedLineTokens implements IViewLineTokens {\n\n\tprivate readonly _source: LineTokens;\n\tprivate readonly _startOffset: number;\n\tprivate readonly _endOffset: number;\n\tprivate readonly _deltaOffset: number;\n\n\tprivate readonly _firstTokenIndex: number;\n\tprivate readonly _tokensCount: number;\n\n\tconstructor(source: LineTokens, startOffset: number, endOffset: number, deltaOffset: number) {\n\t\tthis._source = source;\n\t\tthis._startOffset = startOffset;\n\t\tthis._endOffset = endOffset;\n\t\tthis._deltaOffset = deltaOffset;\n\t\tthis._firstTokenIndex = source.findTokenIndexAtOffset(startOffset);\n\n\t\tthis._tokensCount = 0;\n\t\tfor (let i = this._firstTokenIndex, len = source.getCount(); i < len; i++) {\n\t\t\tconst tokenStartOffset = source.getStartOffset(i);\n\t\t\tif (tokenStartOffset >= endOffset) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._tokensCount++;\n\t\t}\n\t}\n\n\tpublic equals(other: IViewLineTokens): boolean {\n\t\tif (other instanceof SlicedLineTokens) {\n\t\t\treturn (\n\t\t\t\tthis._startOffset === other._startOffset\n\t\t\t\t&& this._endOffset === other._endOffset\n\t\t\t\t&& this._deltaOffset === other._deltaOffset\n\t\t\t\t&& this._source.slicedEquals(other._source, this._firstTokenIndex, this._tokensCount)\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokensCount;\n\t}\n\n\tpublic getForeground(tokenIndex: number): ColorId {\n\t\treturn this._source.getForeground(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getEndOffset(tokenIndex: number): number {\n\t\tconst tokenEndOffset = this._source.getEndOffset(this._firstTokenIndex + tokenIndex);\n\t\treturn Math.min(this._endOffset, tokenEndOffset) - this._startOffset + this._deltaOffset;\n\t}\n\n\tpublic getClassName(tokenIndex: number): string {\n\t\treturn this._source.getClassName(this._firstTokenIndex + tokenIndex);\n\t}\n\n\tpublic getInlineStyle(tokenIndex: number, colorMap: string[]): string {\n\t\treturn this._source.getInlineStyle(this._firstTokenIndex + tokenIndex, colorMap);\n\t}\n\n\tpublic findTokenIndexAtOffset(offset: number): number {\n\t\treturn this._source.findTokenIndexAtOffset(offset + this._startOffset - this._deltaOffset) - this._firstTokenIndex;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { LineTokens } from 'vs/editor/common/core/lineTokens';\nimport { Position } from 'vs/editor/common/core/position';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { ColorId, FontStyle, LanguageId, MetadataConsts, StandardTokenType, TokenMetadata } from 'vs/editor/common/modes';\nimport { writeUInt32BE, readUInt32BE } from 'vs/base/common/buffer';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport const enum StringEOL {\n\tUnknown = 0,\n\tInvalid = 3,\n\tLF = 1,\n\tCRLF = 2\n}\n\nexport function countEOL(text: string): [number, number, number, StringEOL] {\n\tlet eolCount = 0;\n\tlet firstLineLength = 0;\n\tlet lastLineStart = 0;\n\tlet eol: StringEOL = StringEOL.Unknown;\n\tfor (let i = 0, len = text.length; i < len; i++) {\n\t\tconst chr = text.charCodeAt(i);\n\n\t\tif (chr === CharCode.CarriageReturn) {\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tif (i + 1 < len && text.charCodeAt(i + 1) === CharCode.LineFeed) {\n\t\t\t\t// \\r\\n... case\n\t\t\t\teol |= StringEOL.CRLF;\n\t\t\t\ti++; // skip \\n\n\t\t\t} else {\n\t\t\t\t// \\r... case\n\t\t\t\teol |= StringEOL.Invalid;\n\t\t\t}\n\t\t\tlastLineStart = i + 1;\n\t\t} else if (chr === CharCode.LineFeed) {\n\t\t\t// \\n... case\n\t\t\teol |= StringEOL.LF;\n\t\t\tif (eolCount === 0) {\n\t\t\t\tfirstLineLength = i;\n\t\t\t}\n\t\t\teolCount++;\n\t\t\tlastLineStart = i + 1;\n\t\t}\n\t}\n\tif (eolCount === 0) {\n\t\tfirstLineLength = text.length;\n\t}\n\treturn [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n\nfunction getDefaultMetadata(topLevelLanguageId: LanguageId): number {\n\treturn (\n\t\t(topLevelLanguageId << MetadataConsts.LANGUAGEID_OFFSET)\n\t\t| (StandardTokenType.Other << MetadataConsts.TOKEN_TYPE_OFFSET)\n\t\t| (FontStyle.None << MetadataConsts.FONT_STYLE_OFFSET)\n\t\t| (ColorId.DefaultForeground << MetadataConsts.FOREGROUND_OFFSET)\n\t\t| (ColorId.DefaultBackground << MetadataConsts.BACKGROUND_OFFSET)\n\t) >>> 0;\n}\n\nconst EMPTY_LINE_TOKENS = (new Uint32Array(0)).buffer;\n\nexport class MultilineTokensBuilder {\n\n\tpublic readonly tokens: MultilineTokens[];\n\n\tconstructor() {\n\t\tthis.tokens = [];\n\t}\n\n\tpublic add(lineNumber: number, lineTokens: Uint32Array): void {\n\t\tif (this.tokens.length > 0) {\n\t\t\tconst last = this.tokens[this.tokens.length - 1];\n\t\t\tconst lastLineNumber = last.startLineNumber + last.tokens.length - 1;\n\t\t\tif (lastLineNumber + 1 === lineNumber) {\n\t\t\t\t// append\n\t\t\t\tlast.tokens.push(lineTokens);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.tokens.push(new MultilineTokens(lineNumber, [lineTokens]));\n\t}\n\n\tpublic static deserialize(buff: Uint8Array): MultilineTokens[] {\n\t\tlet offset = 0;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tlet result: MultilineTokens[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\toffset = MultilineTokens.deserialize(buff, offset, result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic serialize(): Uint8Array {\n\t\tconst size = this._serializeSize();\n\t\tconst result = new Uint8Array(size);\n\t\tthis._serialize(result);\n\t\treturn result;\n\t}\n\n\tprivate _serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the count\n\t\tfor (let i = 0; i < this.tokens.length; i++) {\n\t\t\tresult += this.tokens[i].serializeSize();\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _serialize(destination: Uint8Array): void {\n\t\tlet offset = 0;\n\t\twriteUInt32BE(destination, this.tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this.tokens.length; i++) {\n\t\t\toffset = this.tokens[i].serialize(destination, offset);\n\t\t}\n\t}\n}\n\nexport class SparseEncodedTokens {\n\t/**\n\t * The encoding of tokens is:\n\t *  4*i    deltaLine (from `startLineNumber`)\n\t *  4*i+1  startCharacter (from the line start)\n\t *  4*i+2  endCharacter (from the line start)\n\t *  4*i+3  metadata\n\t */\n\tprivate readonly _tokens: Uint32Array;\n\tprivate _tokenCount: number;\n\n\tconstructor(tokens: Uint32Array) {\n\t\tthis._tokens = tokens;\n\t\tthis._tokenCount = tokens.length / 4;\n\t}\n\n\tpublic toString(startLineNumber: number): string {\n\t\tlet pieces: string[] = [];\n\t\tfor (let i = 0; i < this._tokenCount; i++) {\n\t\t\tpieces.push(`(${this._getDeltaLine(i) + startLineNumber},${this._getStartCharacter(i)}-${this._getEndCharacter(i)})`);\n\t\t}\n\t\treturn `[${pieces.join(',')}]`;\n\t}\n\n\tpublic getMaxDeltaLine(): number {\n\t\tconst tokenCount = this._getTokenCount();\n\t\tif (tokenCount === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn this._getDeltaLine(tokenCount - 1);\n\t}\n\n\tpublic getRange(): Range | null {\n\t\tconst tokenCount = this._getTokenCount();\n\t\tif (tokenCount === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tconst startChar = this._getStartCharacter(0);\n\t\tconst maxDeltaLine = this._getDeltaLine(tokenCount - 1);\n\t\tconst endChar = this._getEndCharacter(tokenCount - 1);\n\t\treturn new Range(0, startChar + 1, maxDeltaLine, endChar + 1);\n\t}\n\n\tprivate _getTokenCount(): number {\n\t\treturn this._tokenCount;\n\t}\n\n\tprivate _getDeltaLine(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex];\n\t}\n\n\tprivate _getStartCharacter(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex + 1];\n\t}\n\n\tprivate _getEndCharacter(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex + 2];\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn (this._getTokenCount() === 0);\n\t}\n\n\tpublic getLineTokens(deltaLine: number): LineTokens2 | null {\n\t\tlet low = 0;\n\t\tlet high = this._getTokenCount() - 1;\n\n\t\twhile (low < high) {\n\t\t\tconst mid = low + Math.floor((high - low) / 2);\n\t\t\tconst midDeltaLine = this._getDeltaLine(mid);\n\n\t\t\tif (midDeltaLine < deltaLine) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else if (midDeltaLine > deltaLine) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\tlet min = mid;\n\t\t\t\twhile (min > low && this._getDeltaLine(min - 1) === deltaLine) {\n\t\t\t\t\tmin--;\n\t\t\t\t}\n\t\t\t\tlet max = mid;\n\t\t\t\twhile (max < high && this._getDeltaLine(max + 1) === deltaLine) {\n\t\t\t\t\tmax++;\n\t\t\t\t}\n\t\t\t\treturn new LineTokens2(this._tokens.subarray(4 * min, 4 * max + 4));\n\t\t\t}\n\t\t}\n\n\t\tif (this._getDeltaLine(low) === deltaLine) {\n\t\t\treturn new LineTokens2(this._tokens.subarray(4 * low, 4 * low + 4));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic clear(): void {\n\t\tthis._tokenCount = 0;\n\t}\n\n\tpublic removeTokens(startDeltaLine: number, startChar: number, endDeltaLine: number, endChar: number): number {\n\t\tconst tokens = this._tokens;\n\t\tconst tokenCount = this._tokenCount;\n\t\tlet newTokenCount = 0;\n\t\tlet hasDeletedTokens = false;\n\t\tlet firstDeltaLine = 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst srcOffset = 4 * i;\n\t\t\tconst tokenDeltaLine = tokens[srcOffset];\n\t\t\tconst tokenStartCharacter = tokens[srcOffset + 1];\n\t\t\tconst tokenEndCharacter = tokens[srcOffset + 2];\n\t\t\tconst tokenMetadata = tokens[srcOffset + 3];\n\n\t\t\tif (\n\t\t\t\t(tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))\n\t\t\t\t&& (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))\n\t\t\t) {\n\t\t\t\thasDeletedTokens = true;\n\t\t\t} else {\n\t\t\t\tif (newTokenCount === 0) {\n\t\t\t\t\tfirstDeltaLine = tokenDeltaLine;\n\t\t\t\t}\n\t\t\t\tif (hasDeletedTokens) {\n\t\t\t\t\t// must move the token to the left\n\t\t\t\t\tconst destOffset = 4 * newTokenCount;\n\t\t\t\t\ttokens[destOffset] = tokenDeltaLine - firstDeltaLine;\n\t\t\t\t\ttokens[destOffset + 1] = tokenStartCharacter;\n\t\t\t\t\ttokens[destOffset + 2] = tokenEndCharacter;\n\t\t\t\t\ttokens[destOffset + 3] = tokenMetadata;\n\t\t\t\t}\n\t\t\t\tnewTokenCount++;\n\t\t\t}\n\t\t}\n\n\t\tthis._tokenCount = newTokenCount;\n\n\t\treturn firstDeltaLine;\n\t}\n\n\tpublic split(startDeltaLine: number, startChar: number, endDeltaLine: number, endChar: number): [SparseEncodedTokens, SparseEncodedTokens, number] {\n\t\tconst tokens = this._tokens;\n\t\tconst tokenCount = this._tokenCount;\n\t\tlet aTokens: number[] = [];\n\t\tlet bTokens: number[] = [];\n\t\tlet destTokens: number[] = aTokens;\n\t\tlet destOffset = 0;\n\t\tlet destFirstDeltaLine: number = 0;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst srcOffset = 4 * i;\n\t\t\tconst tokenDeltaLine = tokens[srcOffset];\n\t\t\tconst tokenStartCharacter = tokens[srcOffset + 1];\n\t\t\tconst tokenEndCharacter = tokens[srcOffset + 2];\n\t\t\tconst tokenMetadata = tokens[srcOffset + 3];\n\n\t\t\tif ((tokenDeltaLine > startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter >= startChar))) {\n\t\t\t\tif ((tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter <= endChar))) {\n\t\t\t\t\t// this token is touching the range\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\t// this token is after the range\n\t\t\t\t\tif (destTokens !== bTokens) {\n\t\t\t\t\t\t// this token is the first token after the range\n\t\t\t\t\t\tdestTokens = bTokens;\n\t\t\t\t\t\tdestOffset = 0;\n\t\t\t\t\t\tdestFirstDeltaLine = tokenDeltaLine;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdestTokens[destOffset++] = tokenDeltaLine - destFirstDeltaLine;\n\t\t\tdestTokens[destOffset++] = tokenStartCharacter;\n\t\t\tdestTokens[destOffset++] = tokenEndCharacter;\n\t\t\tdestTokens[destOffset++] = tokenMetadata;\n\t\t}\n\n\t\treturn [new SparseEncodedTokens(new Uint32Array(aTokens)), new SparseEncodedTokens(new Uint32Array(bTokens)), destFirstDeltaLine];\n\t}\n\n\tpublic acceptDeleteRange(horizontalShiftForFirstLineTokens: number, startDeltaLine: number, startCharacter: number, endDeltaLine: number, endCharacter: number): void {\n\t\t// This is a bit complex, here are the cases I used to think about this:\n\t\t//\n\t\t// 1. The token starts before the deletion range\n\t\t// 1a. The token is completely before the deletion range\n\t\t//               -----------\n\t\t//                          xxxxxxxxxxx\n\t\t// 1b. The token starts before, the deletion range ends after the token\n\t\t//               -----------\n\t\t//                      xxxxxxxxxxx\n\t\t// 1c. The token starts before, the deletion range ends precisely with the token\n\t\t//               ---------------\n\t\t//                      xxxxxxxx\n\t\t// 1d. The token starts before, the deletion range is inside the token\n\t\t//               ---------------\n\t\t//                    xxxxx\n\t\t//\n\t\t// 2. The token starts at the same position with the deletion range\n\t\t// 2a. The token starts at the same position, and ends inside the deletion range\n\t\t//               -------\n\t\t//               xxxxxxxxxxx\n\t\t// 2b. The token starts at the same position, and ends at the same position as the deletion range\n\t\t//               ----------\n\t\t//               xxxxxxxxxx\n\t\t// 2c. The token starts at the same position, and ends after the deletion range\n\t\t//               -------------\n\t\t//               xxxxxxx\n\t\t//\n\t\t// 3. The token starts inside the deletion range\n\t\t// 3a. The token is inside the deletion range\n\t\t//                -------\n\t\t//             xxxxxxxxxxxxx\n\t\t// 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n\t\t//                ----------\n\t\t//             xxxxxxxxxxxxx\n\t\t// 3c. The token starts inside the deletion range, and ends after the deletion range\n\t\t//                ------------\n\t\t//             xxxxxxxxxxx\n\t\t//\n\t\t// 4. The token starts after the deletion range\n\t\t//                  -----------\n\t\t//          xxxxxxxx\n\t\t//\n\t\tconst tokens = this._tokens;\n\t\tconst tokenCount = this._tokenCount;\n\t\tconst deletedLineCount = (endDeltaLine - startDeltaLine);\n\t\tlet newTokenCount = 0;\n\t\tlet hasDeletedTokens = false;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst srcOffset = 4 * i;\n\t\t\tlet tokenDeltaLine = tokens[srcOffset];\n\t\t\tlet tokenStartCharacter = tokens[srcOffset + 1];\n\t\t\tlet tokenEndCharacter = tokens[srcOffset + 2];\n\t\t\tconst tokenMetadata = tokens[srcOffset + 3];\n\n\t\t\tif (tokenDeltaLine < startDeltaLine || (tokenDeltaLine === startDeltaLine && tokenEndCharacter <= startCharacter)) {\n\t\t\t\t// 1a. The token is completely before the deletion range\n\t\t\t\t// => nothing to do\n\t\t\t\tnewTokenCount++;\n\t\t\t\tcontinue;\n\t\t\t} else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter < startCharacter) {\n\t\t\t\t// 1b, 1c, 1d\n\t\t\t\t// => the token survives, but it needs to shrink\n\t\t\t\tif (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n\t\t\t\t\t// 1d. The token starts before, the deletion range is inside the token\n\t\t\t\t\t// => the token shrinks by the deletion character count\n\t\t\t\t\ttokenEndCharacter -= (endCharacter - startCharacter);\n\t\t\t\t} else {\n\t\t\t\t\t// 1b. The token starts before, the deletion range ends after the token\n\t\t\t\t\t// 1c. The token starts before, the deletion range ends precisely with the token\n\t\t\t\t\t// => the token shrinks its ending to the deletion start\n\t\t\t\t\ttokenEndCharacter = startCharacter;\n\t\t\t\t}\n\t\t\t} else if (tokenDeltaLine === startDeltaLine && tokenStartCharacter === startCharacter) {\n\t\t\t\t// 2a, 2b, 2c\n\t\t\t\tif (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n\t\t\t\t\t// 2c. The token starts at the same position, and ends after the deletion range\n\t\t\t\t\t// => the token shrinks by the deletion character count\n\t\t\t\t\ttokenEndCharacter -= (endCharacter - startCharacter);\n\t\t\t\t} else {\n\t\t\t\t\t// 2a. The token starts at the same position, and ends inside the deletion range\n\t\t\t\t\t// 2b. The token starts at the same position, and ends at the same position as the deletion range\n\t\t\t\t\t// => the token is deleted\n\t\t\t\t\thasDeletedTokens = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (tokenDeltaLine < endDeltaLine || (tokenDeltaLine === endDeltaLine && tokenStartCharacter < endCharacter)) {\n\t\t\t\t// 3a, 3b, 3c\n\t\t\t\tif (tokenDeltaLine === endDeltaLine && tokenEndCharacter > endCharacter) {\n\t\t\t\t\t// 3c. The token starts inside the deletion range, and ends after the deletion range\n\t\t\t\t\t// => the token moves left and shrinks\n\t\t\t\t\tif (tokenDeltaLine === startDeltaLine) {\n\t\t\t\t\t\t// the deletion started on the same line as the token\n\t\t\t\t\t\t// => the token moves left and shrinks\n\t\t\t\t\t\ttokenStartCharacter = startCharacter;\n\t\t\t\t\t\ttokenEndCharacter = tokenStartCharacter + (tokenEndCharacter - endCharacter);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// the deletion started on a line above the token\n\t\t\t\t\t\t// => the token moves to the beginning of the line\n\t\t\t\t\t\ttokenStartCharacter = 0;\n\t\t\t\t\t\ttokenEndCharacter = tokenStartCharacter + (tokenEndCharacter - endCharacter);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// 3a. The token is inside the deletion range\n\t\t\t\t\t// 3b. The token starts inside the deletion range, and ends at the same position as the deletion range\n\t\t\t\t\t// => the token is deleted\n\t\t\t\t\thasDeletedTokens = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (tokenDeltaLine > endDeltaLine) {\n\t\t\t\t// 4. (partial) The token starts after the deletion range, on a line below...\n\t\t\t\tif (deletedLineCount === 0 && !hasDeletedTokens) {\n\t\t\t\t\t// early stop, there is no need to walk all the tokens and do nothing...\n\t\t\t\t\tnewTokenCount = tokenCount;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttokenDeltaLine -= deletedLineCount;\n\t\t\t} else if (tokenDeltaLine === endDeltaLine && tokenStartCharacter >= endCharacter) {\n\t\t\t\t// 4. (continued) The token starts after the deletion range, on the last line where a deletion occurs\n\t\t\t\tif (horizontalShiftForFirstLineTokens && tokenDeltaLine === 0) {\n\t\t\t\t\ttokenStartCharacter += horizontalShiftForFirstLineTokens;\n\t\t\t\t\ttokenEndCharacter += horizontalShiftForFirstLineTokens;\n\t\t\t\t}\n\t\t\t\ttokenDeltaLine -= deletedLineCount;\n\t\t\t\ttokenStartCharacter -= (endCharacter - startCharacter);\n\t\t\t\ttokenEndCharacter -= (endCharacter - startCharacter);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Not possible!`);\n\t\t\t}\n\n\t\t\tconst destOffset = 4 * newTokenCount;\n\t\t\ttokens[destOffset] = tokenDeltaLine;\n\t\t\ttokens[destOffset + 1] = tokenStartCharacter;\n\t\t\ttokens[destOffset + 2] = tokenEndCharacter;\n\t\t\ttokens[destOffset + 3] = tokenMetadata;\n\t\t\tnewTokenCount++;\n\t\t}\n\n\t\tthis._tokenCount = newTokenCount;\n\t}\n\n\tpublic acceptInsertText(deltaLine: number, character: number, eolCount: number, firstLineLength: number, lastLineLength: number, firstCharCode: number): void {\n\t\t// Here are the cases I used to think about this:\n\t\t//\n\t\t// 1. The token is completely before the insertion point\n\t\t//            -----------   |\n\t\t// 2. The token ends precisely at the insertion point\n\t\t//            -----------|\n\t\t// 3. The token contains the insertion point\n\t\t//            -----|------\n\t\t// 4. The token starts precisely at the insertion point\n\t\t//            |-----------\n\t\t// 5. The token is completely after the insertion point\n\t\t//            |   -----------\n\t\t//\n\t\tconst isInsertingPreciselyOneWordCharacter = (\n\t\t\teolCount === 0\n\t\t\t&& firstLineLength === 1\n\t\t\t&& (\n\t\t\t\t(firstCharCode >= CharCode.Digit0 && firstCharCode <= CharCode.Digit9)\n\t\t\t\t|| (firstCharCode >= CharCode.A && firstCharCode <= CharCode.Z)\n\t\t\t\t|| (firstCharCode >= CharCode.a && firstCharCode <= CharCode.z)\n\t\t\t)\n\t\t);\n\t\tconst tokens = this._tokens;\n\t\tconst tokenCount = this._tokenCount;\n\t\tfor (let i = 0; i < tokenCount; i++) {\n\t\t\tconst offset = 4 * i;\n\t\t\tlet tokenDeltaLine = tokens[offset];\n\t\t\tlet tokenStartCharacter = tokens[offset + 1];\n\t\t\tlet tokenEndCharacter = tokens[offset + 2];\n\n\t\t\tif (tokenDeltaLine < deltaLine || (tokenDeltaLine === deltaLine && tokenEndCharacter < character)) {\n\t\t\t\t// 1. The token is completely before the insertion point\n\t\t\t\t// => nothing to do\n\t\t\t\tcontinue;\n\t\t\t} else if (tokenDeltaLine === deltaLine && tokenEndCharacter === character) {\n\t\t\t\t// 2. The token ends precisely at the insertion point\n\t\t\t\t// => expand the end character only if inserting precisely one character that is a word character\n\t\t\t\tif (isInsertingPreciselyOneWordCharacter) {\n\t\t\t\t\ttokenEndCharacter += 1;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (tokenDeltaLine === deltaLine && tokenStartCharacter < character && character < tokenEndCharacter) {\n\t\t\t\t// 3. The token contains the insertion point\n\t\t\t\tif (eolCount === 0) {\n\t\t\t\t\t// => just expand the end character\n\t\t\t\t\ttokenEndCharacter += firstLineLength;\n\t\t\t\t} else {\n\t\t\t\t\t// => cut off the token\n\t\t\t\t\ttokenEndCharacter = character;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// 4. or 5.\n\t\t\t\tif (tokenDeltaLine === deltaLine && tokenStartCharacter === character) {\n\t\t\t\t\t// 4. The token starts precisely at the insertion point\n\t\t\t\t\t// => grow the token (by keeping its start constant) only if inserting precisely one character that is a word character\n\t\t\t\t\t// => otherwise behave as in case 5.\n\t\t\t\t\tif (isInsertingPreciselyOneWordCharacter) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// => the token must move and keep its size constant\n\t\t\t\tif (tokenDeltaLine === deltaLine) {\n\t\t\t\t\ttokenDeltaLine += eolCount;\n\t\t\t\t\t// this token is on the line where the insertion is taking place\n\t\t\t\t\tif (eolCount === 0) {\n\t\t\t\t\t\ttokenStartCharacter += firstLineLength;\n\t\t\t\t\t\ttokenEndCharacter += firstLineLength;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst tokenLength = tokenEndCharacter - tokenStartCharacter;\n\t\t\t\t\t\ttokenStartCharacter = lastLineLength + (tokenStartCharacter - character);\n\t\t\t\t\t\ttokenEndCharacter = tokenStartCharacter + tokenLength;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttokenDeltaLine += eolCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttokens[offset] = tokenDeltaLine;\n\t\t\ttokens[offset + 1] = tokenStartCharacter;\n\t\t\ttokens[offset + 2] = tokenEndCharacter;\n\t\t}\n\t}\n}\n\nexport class LineTokens2 {\n\n\tprivate readonly _tokens: Uint32Array;\n\n\tconstructor(tokens: Uint32Array) {\n\t\tthis._tokens = tokens;\n\t}\n\n\tpublic getCount(): number {\n\t\treturn this._tokens.length / 4;\n\t}\n\n\tpublic getStartCharacter(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex + 1];\n\t}\n\n\tpublic getEndCharacter(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex + 2];\n\t}\n\n\tpublic getMetadata(tokenIndex: number): number {\n\t\treturn this._tokens[4 * tokenIndex + 3];\n\t}\n}\n\nexport class MultilineTokens2 {\n\n\tpublic startLineNumber: number;\n\tpublic endLineNumber: number;\n\tpublic tokens: SparseEncodedTokens;\n\n\tconstructor(startLineNumber: number, tokens: SparseEncodedTokens) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.tokens = tokens;\n\t\tthis.endLineNumber = this.startLineNumber + this.tokens.getMaxDeltaLine();\n\t}\n\n\tpublic toString(): string {\n\t\treturn this.tokens.toString(this.startLineNumber);\n\t}\n\n\tprivate _updateEndLineNumber(): void {\n\t\tthis.endLineNumber = this.startLineNumber + this.tokens.getMaxDeltaLine();\n\t}\n\n\tpublic isEmpty(): boolean {\n\t\treturn this.tokens.isEmpty();\n\t}\n\n\tpublic getLineTokens(lineNumber: number): LineTokens2 | null {\n\t\tif (this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber) {\n\t\t\treturn this.tokens.getLineTokens(lineNumber - this.startLineNumber);\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getRange(): Range | null {\n\t\tconst deltaRange = this.tokens.getRange();\n\t\tif (!deltaRange) {\n\t\t\treturn deltaRange;\n\t\t}\n\t\treturn new Range(this.startLineNumber + deltaRange.startLineNumber, deltaRange.startColumn, this.startLineNumber + deltaRange.endLineNumber, deltaRange.endColumn);\n\t}\n\n\tpublic removeTokens(range: Range): void {\n\t\tconst startLineIndex = range.startLineNumber - this.startLineNumber;\n\t\tconst endLineIndex = range.endLineNumber - this.startLineNumber;\n\n\t\tthis.startLineNumber += this.tokens.removeTokens(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n\t\tthis._updateEndLineNumber();\n\t}\n\n\tpublic split(range: Range): [MultilineTokens2, MultilineTokens2] {\n\t\t// split tokens to two:\n\t\t// a) all the tokens before `range`\n\t\t// b) all the tokens after `range`\n\t\tconst startLineIndex = range.startLineNumber - this.startLineNumber;\n\t\tconst endLineIndex = range.endLineNumber - this.startLineNumber;\n\n\t\tconst [a, b, bDeltaLine] = this.tokens.split(startLineIndex, range.startColumn - 1, endLineIndex, range.endColumn - 1);\n\t\treturn [new MultilineTokens2(this.startLineNumber, a), new MultilineTokens2(this.startLineNumber + bDeltaLine, b)];\n\t}\n\n\tpublic applyEdit(range: IRange, text: string): void {\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tthis.acceptEdit(range, eolCount, firstLineLength, lastLineLength, text.length > 0 ? text.charCodeAt(0) : CharCode.Null);\n\t}\n\n\tpublic acceptEdit(range: IRange, eolCount: number, firstLineLength: number, lastLineLength: number, firstCharCode: number): void {\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength, lastLineLength, firstCharCode);\n\t\tthis._updateEndLineNumber();\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\t// Nothing to delete\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstLineIndex = range.startLineNumber - this.startLineNumber;\n\t\tconst lastLineIndex = range.endLineNumber - this.startLineNumber;\n\n\t\tif (lastLineIndex < 0) {\n\t\t\t// this deletion occurs entirely before this block, so we only need to adjust line numbers\n\t\t\tconst deletedLinesCount = lastLineIndex - firstLineIndex;\n\t\t\tthis.startLineNumber -= deletedLinesCount;\n\t\t\treturn;\n\t\t}\n\n\t\tconst tokenMaxDeltaLine = this.tokens.getMaxDeltaLine();\n\n\t\tif (firstLineIndex >= tokenMaxDeltaLine + 1) {\n\t\t\t// this deletion occurs entirely after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0 && lastLineIndex >= tokenMaxDeltaLine + 1) {\n\t\t\t// this deletion completely encompasses this block\n\t\t\tthis.startLineNumber = 0;\n\t\t\tthis.tokens.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0) {\n\t\t\tconst deletedBefore = -firstLineIndex;\n\t\t\tthis.startLineNumber -= deletedBefore;\n\n\t\t\tthis.tokens.acceptDeleteRange(range.startColumn - 1, 0, 0, lastLineIndex, range.endColumn - 1);\n\t\t} else {\n\t\t\tthis.tokens.acceptDeleteRange(0, firstLineIndex, range.startColumn - 1, lastLineIndex, range.endColumn - 1);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number, lastLineLength: number, firstCharCode: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - this.startLineNumber;\n\n\t\tif (lineIndex < 0) {\n\t\t\t// this insertion occurs before this block, so we only need to adjust line numbers\n\t\t\tthis.startLineNumber += eolCount;\n\t\t\treturn;\n\t\t}\n\n\t\tconst tokenMaxDeltaLine = this.tokens.getMaxDeltaLine();\n\n\t\tif (lineIndex >= tokenMaxDeltaLine + 1) {\n\t\t\t// this insertion occurs after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tokens.acceptInsertText(lineIndex, position.column - 1, eolCount, firstLineLength, lastLineLength, firstCharCode);\n\t}\n}\n\nexport class MultilineTokens {\n\n\tpublic startLineNumber: number;\n\tpublic tokens: (Uint32Array | ArrayBuffer | null)[];\n\n\tconstructor(startLineNumber: number, tokens: Uint32Array[]) {\n\t\tthis.startLineNumber = startLineNumber;\n\t\tthis.tokens = tokens;\n\t}\n\n\tpublic static deserialize(buff: Uint8Array, offset: number, result: MultilineTokens[]): number {\n\t\tconst view32 = new Uint32Array(buff.buffer);\n\t\tconst startLineNumber = readUInt32BE(buff, offset); offset += 4;\n\t\tconst count = readUInt32BE(buff, offset); offset += 4;\n\t\tlet tokens: Uint32Array[] = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst byteCount = readUInt32BE(buff, offset); offset += 4;\n\t\t\ttokens.push(view32.subarray(offset / 4, offset / 4 + byteCount / 4));\n\t\t\toffset += byteCount;\n\t\t}\n\t\tresult.push(new MultilineTokens(startLineNumber, tokens));\n\t\treturn offset;\n\t}\n\n\tpublic serializeSize(): number {\n\t\tlet result = 0;\n\t\tresult += 4; // 4 bytes for the start line number\n\t\tresult += 4; // 4 bytes for the line count\n\t\tfor (let i = 0; i < this.tokens.length; i++) {\n\t\t\tconst lineTokens = this.tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\tresult += 4; // 4 bytes for the byte count\n\t\t\tresult += lineTokens.byteLength;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic serialize(destination: Uint8Array, offset: number): number {\n\t\twriteUInt32BE(destination, this.startLineNumber, offset); offset += 4;\n\t\twriteUInt32BE(destination, this.tokens.length, offset); offset += 4;\n\t\tfor (let i = 0; i < this.tokens.length; i++) {\n\t\t\tconst lineTokens = this.tokens[i];\n\t\t\tif (!(lineTokens instanceof Uint32Array)) {\n\t\t\t\tthrow new Error(`Not supported!`);\n\t\t\t}\n\t\t\twriteUInt32BE(destination, lineTokens.byteLength, offset); offset += 4;\n\t\t\tdestination.set(new Uint8Array(lineTokens.buffer), offset); offset += lineTokens.byteLength;\n\t\t}\n\t\treturn offset;\n\t}\n\n\tpublic applyEdit(range: IRange, text: string): void {\n\t\tconst [eolCount, firstLineLength] = countEOL(text);\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\t\tif (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn) {\n\t\t\t// Nothing to delete\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstLineIndex = range.startLineNumber - this.startLineNumber;\n\t\tconst lastLineIndex = range.endLineNumber - this.startLineNumber;\n\n\t\tif (lastLineIndex < 0) {\n\t\t\t// this deletion occurs entirely before this block, so we only need to adjust line numbers\n\t\t\tconst deletedLinesCount = lastLineIndex - firstLineIndex;\n\t\t\tthis.startLineNumber -= deletedLinesCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= this.tokens.length) {\n\t\t\t// this deletion occurs entirely after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex < 0 && lastLineIndex >= this.tokens.length) {\n\t\t\t// this deletion completely encompasses this block\n\t\t\tthis.startLineNumber = 0;\n\t\t\tthis.tokens = [];\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex === lastLineIndex) {\n\t\t\t// a delete on a single line\n\t\t\tthis.tokens[firstLineIndex] = TokensStore._delete(this.tokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tif (firstLineIndex >= 0) {\n\t\t\t// The first line survives\n\t\t\tthis.tokens[firstLineIndex] = TokensStore._deleteEnding(this.tokens[firstLineIndex], range.startColumn - 1);\n\n\t\t\tif (lastLineIndex < this.tokens.length) {\n\t\t\t\t// The last line survives\n\t\t\t\tconst lastLineTokens = TokensStore._deleteBeginning(this.tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis.tokens[firstLineIndex] = TokensStore._append(this.tokens[firstLineIndex], lastLineTokens);\n\n\t\t\t\t// Delete middle lines\n\t\t\t\tthis.tokens.splice(firstLineIndex + 1, lastLineIndex - firstLineIndex);\n\t\t\t} else {\n\t\t\t\t// The last line does not survive\n\n\t\t\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\t\t\tthis.tokens[firstLineIndex] = TokensStore._append(this.tokens[firstLineIndex], null);\n\n\t\t\t\t// Delete lines\n\t\t\t\tthis.tokens = this.tokens.slice(0, firstLineIndex + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// The first line does not survive\n\n\t\t\tconst deletedBefore = -firstLineIndex;\n\t\t\tthis.startLineNumber -= deletedBefore;\n\n\t\t\t// Remove beginning from last line\n\t\t\tthis.tokens[lastLineIndex] = TokensStore._deleteBeginning(this.tokens[lastLineIndex], range.endColumn - 1);\n\n\t\t\t// Delete lines\n\t\t\tthis.tokens = this.tokens.slice(lastLineIndex);\n\t\t}\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - this.startLineNumber;\n\n\t\tif (lineIndex < 0) {\n\t\t\t// this insertion occurs before this block, so we only need to adjust line numbers\n\t\t\tthis.startLineNumber += eolCount;\n\t\t\treturn;\n\t\t}\n\n\t\tif (lineIndex >= this.tokens.length) {\n\t\t\t// this insertion occurs after this block, so there is nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (eolCount === 0) {\n\t\t\t// Inserting text on one line\n\t\t\tthis.tokens[lineIndex] = TokensStore._insert(this.tokens[lineIndex], position.column - 1, firstLineLength);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tokens[lineIndex] = TokensStore._deleteEnding(this.tokens[lineIndex], position.column - 1);\n\t\tthis.tokens[lineIndex] = TokensStore._insert(this.tokens[lineIndex], position.column - 1, firstLineLength);\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet lineTokens: (Uint32Array | ArrayBuffer | null)[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tlineTokens[i] = null;\n\t\t}\n\t\tthis.tokens = arrays.arrayInsert(this.tokens, insertIndex, lineTokens);\n\t}\n}\n\nfunction toUint32Array(arr: Uint32Array | ArrayBuffer): Uint32Array {\n\tif (arr instanceof Uint32Array) {\n\t\treturn arr;\n\t} else {\n\t\treturn new Uint32Array(arr);\n\t}\n}\n\nexport class TokensStore2 {\n\n\tprivate _pieces: MultilineTokens2[];\n\tprivate _isComplete: boolean;\n\n\tconstructor() {\n\t\tthis._pieces = [];\n\t\tthis._isComplete = false;\n\t}\n\n\tpublic flush(): void {\n\t\tthis._pieces = [];\n\t\tthis._isComplete = false;\n\t}\n\n\tpublic set(pieces: MultilineTokens2[] | null, isComplete: boolean): void {\n\t\tthis._pieces = pieces || [];\n\t\tthis._isComplete = isComplete;\n\t}\n\n\tpublic setPartial(_range: Range, pieces: MultilineTokens2[]): Range {\n\t\t// console.log(`setPartial ${_range} ${pieces.map(p => p.toString()).join(', ')}`);\n\n\t\tlet range = _range;\n\t\tif (pieces.length > 0) {\n\t\t\tconst _firstRange = pieces[0].getRange();\n\t\t\tconst _lastRange = pieces[pieces.length - 1].getRange();\n\t\t\tif (!_firstRange || !_lastRange) {\n\t\t\t\treturn _range;\n\t\t\t}\n\t\t\trange = _range.plusRange(_firstRange).plusRange(_lastRange);\n\t\t}\n\n\t\tlet insertPosition: { index: number; } | null = null;\n\t\tfor (let i = 0, len = this._pieces.length; i < len; i++) {\n\t\t\tconst piece = this._pieces[i];\n\t\t\tif (piece.endLineNumber < range.startLineNumber) {\n\t\t\t\t// this piece is before the range\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (piece.startLineNumber > range.endLineNumber) {\n\t\t\t\t// this piece is after the range, so mark the spot before this piece\n\t\t\t\t// as a good insertion position and stop looping\n\t\t\t\tinsertPosition = insertPosition || { index: i };\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// this piece might intersect with the range\n\t\t\tpiece.removeTokens(range);\n\n\t\t\tif (piece.isEmpty()) {\n\t\t\t\t// remove the piece if it became empty\n\t\t\t\tthis._pieces.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t\tlen--;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (piece.endLineNumber < range.startLineNumber) {\n\t\t\t\t// after removal, this piece is before the range\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (piece.startLineNumber > range.endLineNumber) {\n\t\t\t\t// after removal, this piece is after the range\n\t\t\t\tinsertPosition = insertPosition || { index: i };\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// after removal, this piece contains the range\n\t\t\tconst [a, b] = piece.split(range);\n\t\t\tif (a.isEmpty()) {\n\t\t\t\t// this piece is actually after the range\n\t\t\t\tinsertPosition = insertPosition || { index: i };\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (b.isEmpty()) {\n\t\t\t\t// this piece is actually before the range\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._pieces.splice(i, 1, a, b);\n\t\t\ti++;\n\t\t\tlen++;\n\n\t\t\tinsertPosition = insertPosition || { index: i };\n\t\t}\n\n\t\tinsertPosition = insertPosition || { index: this._pieces.length };\n\n\t\tif (pieces.length > 0) {\n\t\t\tthis._pieces = arrays.arrayInsert(this._pieces, insertPosition.index, pieces);\n\t\t}\n\n\t\t// console.log(`I HAVE ${this._pieces.length} pieces`);\n\t\t// console.log(`${this._pieces.map(p => p.toString()).join('\\n')}`);\n\n\t\treturn range;\n\t}\n\n\tpublic isComplete(): boolean {\n\t\treturn this._isComplete;\n\t}\n\n\tpublic addSemanticTokens(lineNumber: number, aTokens: LineTokens): LineTokens {\n\t\tconst pieces = this._pieces;\n\n\t\tif (pieces.length === 0) {\n\t\t\treturn aTokens;\n\t\t}\n\n\t\tconst pieceIndex = TokensStore2._findFirstPieceWithLine(pieces, lineNumber);\n\t\tconst bTokens = pieces[pieceIndex].getLineTokens(lineNumber);\n\n\t\tif (!bTokens) {\n\t\t\treturn aTokens;\n\t\t}\n\n\t\tconst aLen = aTokens.getCount();\n\t\tconst bLen = bTokens.getCount();\n\n\t\tlet aIndex = 0;\n\t\tlet result: number[] = [], resultLen = 0;\n\t\tlet lastEndOffset = 0;\n\n\t\tconst emitToken = (endOffset: number, metadata: number) => {\n\t\t\tif (endOffset === lastEndOffset) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlastEndOffset = endOffset;\n\t\t\tresult[resultLen++] = endOffset;\n\t\t\tresult[resultLen++] = metadata;\n\t\t};\n\n\t\tfor (let bIndex = 0; bIndex < bLen; bIndex++) {\n\t\t\tconst bStartCharacter = bTokens.getStartCharacter(bIndex);\n\t\t\tconst bEndCharacter = bTokens.getEndCharacter(bIndex);\n\t\t\tconst bMetadata = bTokens.getMetadata(bIndex);\n\n\t\t\tconst bMask = (\n\t\t\t\t((bMetadata & MetadataConsts.SEMANTIC_USE_ITALIC) ? MetadataConsts.ITALIC_MASK : 0)\n\t\t\t\t| ((bMetadata & MetadataConsts.SEMANTIC_USE_BOLD) ? MetadataConsts.BOLD_MASK : 0)\n\t\t\t\t| ((bMetadata & MetadataConsts.SEMANTIC_USE_UNDERLINE) ? MetadataConsts.UNDERLINE_MASK : 0)\n\t\t\t\t| ((bMetadata & MetadataConsts.SEMANTIC_USE_FOREGROUND) ? MetadataConsts.FOREGROUND_MASK : 0)\n\t\t\t\t| ((bMetadata & MetadataConsts.SEMANTIC_USE_BACKGROUND) ? MetadataConsts.BACKGROUND_MASK : 0)\n\t\t\t) >>> 0;\n\t\t\tconst aMask = (~bMask) >>> 0;\n\n\t\t\t// push any token from `a` that is before `b`\n\t\t\twhile (aIndex < aLen && aTokens.getEndOffset(aIndex) <= bStartCharacter) {\n\t\t\t\temitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n\t\t\t\taIndex++;\n\t\t\t}\n\n\t\t\t// push the token from `a` if it intersects the token from `b`\n\t\t\tif (aIndex < aLen && aTokens.getStartOffset(aIndex) < bStartCharacter) {\n\t\t\t\temitToken(bStartCharacter, aTokens.getMetadata(aIndex));\n\t\t\t}\n\n\t\t\t// skip any tokens from `a` that are contained inside `b`\n\t\t\twhile (aIndex < aLen && aTokens.getEndOffset(aIndex) < bEndCharacter) {\n\t\t\t\temitToken(aTokens.getEndOffset(aIndex), (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n\t\t\t\taIndex++;\n\t\t\t}\n\n\t\t\tif (aIndex < aLen) {\n\t\t\t\temitToken(bEndCharacter, (aTokens.getMetadata(aIndex) & aMask) | (bMetadata & bMask));\n\t\t\t\tif (aTokens.getEndOffset(aIndex) === bEndCharacter) {\n\t\t\t\t\t// `a` ends exactly at the same spot as `b`!\n\t\t\t\t\taIndex++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst aMergeIndex = Math.min(Math.max(0, aIndex - 1), aLen - 1);\n\n\t\t\t\t// push the token from `b`\n\t\t\t\temitToken(bEndCharacter, (aTokens.getMetadata(aMergeIndex) & aMask) | (bMetadata & bMask));\n\t\t\t}\n\t\t}\n\n\t\t// push the remaining tokens from `a`\n\t\twhile (aIndex < aLen) {\n\t\t\temitToken(aTokens.getEndOffset(aIndex), aTokens.getMetadata(aIndex));\n\t\t\taIndex++;\n\t\t}\n\n\t\treturn new LineTokens(new Uint32Array(result), aTokens.getLineContent());\n\t}\n\n\tprivate static _findFirstPieceWithLine(pieces: MultilineTokens2[], lineNumber: number): number {\n\t\tlet low = 0;\n\t\tlet high = pieces.length - 1;\n\n\t\twhile (low < high) {\n\t\t\tlet mid = low + Math.floor((high - low) / 2);\n\n\t\t\tif (pieces[mid].endLineNumber < lineNumber) {\n\t\t\t\tlow = mid + 1;\n\t\t\t} else if (pieces[mid].startLineNumber > lineNumber) {\n\t\t\t\thigh = mid - 1;\n\t\t\t} else {\n\t\t\t\twhile (mid > low && pieces[mid - 1].startLineNumber <= lineNumber && lineNumber <= pieces[mid - 1].endLineNumber) {\n\t\t\t\t\tmid--;\n\t\t\t\t}\n\t\t\t\treturn mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\t//#region Editing\n\n\tpublic acceptEdit(range: IRange, eolCount: number, firstLineLength: number, lastLineLength: number, firstCharCode: number): void {\n\t\tfor (const piece of this._pieces) {\n\t\t\tpiece.acceptEdit(range, eolCount, firstLineLength, lastLineLength, firstCharCode);\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nexport class TokensStore {\n\tprivate _lineTokens: (Uint32Array | ArrayBuffer | null)[];\n\tprivate _len: number;\n\n\tconstructor() {\n\t\tthis._lineTokens = [];\n\t\tthis._len = 0;\n\t}\n\n\tpublic flush(): void {\n\t\tthis._lineTokens = [];\n\t\tthis._len = 0;\n\t}\n\n\tpublic getTokens(topLevelLanguageId: LanguageId, lineIndex: number, lineText: string): LineTokens {\n\t\tlet rawLineTokens: Uint32Array | ArrayBuffer | null = null;\n\t\tif (lineIndex < this._len) {\n\t\t\trawLineTokens = this._lineTokens[lineIndex];\n\t\t}\n\n\t\tif (rawLineTokens !== null && rawLineTokens !== EMPTY_LINE_TOKENS) {\n\t\t\treturn new LineTokens(toUint32Array(rawLineTokens), lineText);\n\t\t}\n\n\t\tlet lineTokens = new Uint32Array(2);\n\t\tlineTokens[0] = lineText.length;\n\t\tlineTokens[1] = getDefaultMetadata(topLevelLanguageId);\n\t\treturn new LineTokens(lineTokens, lineText);\n\t}\n\n\tprivate static _massageTokens(topLevelLanguageId: LanguageId, lineTextLength: number, _tokens: Uint32Array | ArrayBuffer | null): Uint32Array | ArrayBuffer {\n\n\t\tconst tokens = _tokens ? toUint32Array(_tokens) : null;\n\n\t\tif (lineTextLength === 0) {\n\t\t\tlet hasDifferentLanguageId = false;\n\t\t\tif (tokens && tokens.length > 1) {\n\t\t\t\thasDifferentLanguageId = (TokenMetadata.getLanguageId(tokens[1]) !== topLevelLanguageId);\n\t\t\t}\n\n\t\t\tif (!hasDifferentLanguageId) {\n\t\t\t\treturn EMPTY_LINE_TOKENS;\n\t\t\t}\n\t\t}\n\n\t\tif (!tokens || tokens.length === 0) {\n\t\t\tconst tokens = new Uint32Array(2);\n\t\t\ttokens[0] = lineTextLength;\n\t\t\ttokens[1] = getDefaultMetadata(topLevelLanguageId);\n\t\t\treturn tokens.buffer;\n\t\t}\n\n\t\t// Ensure the last token covers the end of the text\n\t\ttokens[tokens.length - 2] = lineTextLength;\n\n\t\tif (tokens.byteOffset === 0 && tokens.byteLength === tokens.buffer.byteLength) {\n\t\t\t// Store directly the ArrayBuffer pointer to save an object\n\t\t\treturn tokens.buffer;\n\t\t}\n\t\treturn tokens;\n\t}\n\n\tprivate _ensureLine(lineIndex: number): void {\n\t\twhile (lineIndex >= this._len) {\n\t\t\tthis._lineTokens[this._len] = null;\n\t\t\tthis._len++;\n\t\t}\n\t}\n\n\tprivate _deleteLines(start: number, deleteCount: number): void {\n\t\tif (deleteCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (start + deleteCount > this._len) {\n\t\t\tdeleteCount = this._len - start;\n\t\t}\n\t\tthis._lineTokens.splice(start, deleteCount);\n\t\tthis._len -= deleteCount;\n\t}\n\n\tprivate _insertLines(insertIndex: number, insertCount: number): void {\n\t\tif (insertCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet lineTokens: (Uint32Array | ArrayBuffer | null)[] = [];\n\t\tfor (let i = 0; i < insertCount; i++) {\n\t\t\tlineTokens[i] = null;\n\t\t}\n\t\tthis._lineTokens = arrays.arrayInsert(this._lineTokens, insertIndex, lineTokens);\n\t\tthis._len += insertCount;\n\t}\n\n\tpublic setTokens(topLevelLanguageId: LanguageId, lineIndex: number, lineTextLength: number, _tokens: Uint32Array | ArrayBuffer | null, checkEquality: boolean): boolean {\n\t\tconst tokens = TokensStore._massageTokens(topLevelLanguageId, lineTextLength, _tokens);\n\t\tthis._ensureLine(lineIndex);\n\t\tconst oldTokens = this._lineTokens[lineIndex];\n\t\tthis._lineTokens[lineIndex] = tokens;\n\n\t\tif (checkEquality) {\n\t\t\treturn !TokensStore._equals(oldTokens, tokens);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _equals(_a: Uint32Array | ArrayBuffer | null, _b: Uint32Array | ArrayBuffer | null) {\n\t\tif (!_a || !_b) {\n\t\t\treturn !_a && !_b;\n\t\t}\n\n\t\tconst a = toUint32Array(_a);\n\t\tconst b = toUint32Array(_b);\n\n\t\tif (a.length !== b.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0, len = a.length; i < len; i++) {\n\t\t\tif (a[i] !== b[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t//#region Editing\n\n\tpublic acceptEdit(range: IRange, eolCount: number, firstLineLength: number): void {\n\t\tthis._acceptDeleteRange(range);\n\t\tthis._acceptInsertText(new Position(range.startLineNumber, range.startColumn), eolCount, firstLineLength);\n\t}\n\n\tprivate _acceptDeleteRange(range: IRange): void {\n\n\t\tconst firstLineIndex = range.startLineNumber - 1;\n\t\tif (firstLineIndex >= this._len) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\tif (range.startColumn === range.endColumn) {\n\t\t\t\t// Nothing to delete\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lineTokens[firstLineIndex] = TokensStore._delete(this._lineTokens[firstLineIndex], range.startColumn - 1, range.endColumn - 1);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lineTokens[firstLineIndex] = TokensStore._deleteEnding(this._lineTokens[firstLineIndex], range.startColumn - 1);\n\n\t\tconst lastLineIndex = range.endLineNumber - 1;\n\t\tlet lastLineTokens: Uint32Array | ArrayBuffer | null = null;\n\t\tif (lastLineIndex < this._len) {\n\t\t\tlastLineTokens = TokensStore._deleteBeginning(this._lineTokens[lastLineIndex], range.endColumn - 1);\n\t\t}\n\n\t\t// Take remaining text on last line and append it to remaining text on first line\n\t\tthis._lineTokens[firstLineIndex] = TokensStore._append(this._lineTokens[firstLineIndex], lastLineTokens);\n\n\t\t// Delete middle lines\n\t\tthis._deleteLines(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n\t}\n\n\tprivate _acceptInsertText(position: Position, eolCount: number, firstLineLength: number): void {\n\n\t\tif (eolCount === 0 && firstLineLength === 0) {\n\t\t\t// Nothing to insert\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineIndex = position.lineNumber - 1;\n\t\tif (lineIndex >= this._len) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (eolCount === 0) {\n\t\t\t// Inserting text on one line\n\t\t\tthis._lineTokens[lineIndex] = TokensStore._insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._lineTokens[lineIndex] = TokensStore._deleteEnding(this._lineTokens[lineIndex], position.column - 1);\n\t\tthis._lineTokens[lineIndex] = TokensStore._insert(this._lineTokens[lineIndex], position.column - 1, firstLineLength);\n\n\t\tthis._insertLines(position.lineNumber, eolCount);\n\t}\n\n\tpublic static _deleteBeginning(lineTokens: Uint32Array | ArrayBuffer | null, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\treturn TokensStore._delete(lineTokens, 0, toChIndex);\n\t}\n\n\tpublic static _deleteEnding(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst lineTextLength = tokens[tokens.length - 2];\n\t\treturn TokensStore._delete(lineTokens, fromChIndex, lineTextLength);\n\t}\n\n\tpublic static _delete(lineTokens: Uint32Array | ArrayBuffer | null, fromChIndex: number, toChIndex: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS || fromChIndex === toChIndex) {\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\t// special case: deleting everything\n\t\tif (fromChIndex === 0 && tokens[tokens.length - 2] === toChIndex) {\n\t\t\treturn EMPTY_LINE_TOKENS;\n\t\t}\n\n\t\tconst fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, fromChIndex);\n\t\tconst fromTokenStartOffset = (fromTokenIndex > 0 ? tokens[(fromTokenIndex - 1) << 1] : 0);\n\t\tconst fromTokenEndOffset = tokens[fromTokenIndex << 1];\n\n\t\tif (toChIndex < fromTokenEndOffset) {\n\t\t\t// the delete range is inside a single token\n\t\t\tconst delta = (toChIndex - fromChIndex);\n\t\t\tfor (let i = fromTokenIndex; i < tokensCount; i++) {\n\t\t\t\ttokens[i << 1] -= delta;\n\t\t\t}\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tlet dest: number;\n\t\tlet lastEnd: number;\n\t\tif (fromTokenStartOffset !== fromChIndex) {\n\t\t\ttokens[fromTokenIndex << 1] = fromChIndex;\n\t\t\tdest = ((fromTokenIndex + 1) << 1);\n\t\t\tlastEnd = fromChIndex;\n\t\t} else {\n\t\t\tdest = (fromTokenIndex << 1);\n\t\t\tlastEnd = fromTokenStartOffset;\n\t\t}\n\n\t\tconst delta = (toChIndex - fromChIndex);\n\t\tfor (let tokenIndex = fromTokenIndex + 1; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\tconst tokenEndOffset = tokens[tokenIndex << 1] - delta;\n\t\t\tif (tokenEndOffset > lastEnd) {\n\t\t\t\ttokens[dest++] = tokenEndOffset;\n\t\t\t\ttokens[dest++] = tokens[(tokenIndex << 1) + 1];\n\t\t\t\tlastEnd = tokenEndOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (dest === tokens.length) {\n\t\t\t// nothing to trim\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tlet tmp = new Uint32Array(dest);\n\t\ttmp.set(tokens.subarray(0, dest), 0);\n\t\treturn tmp.buffer;\n\t}\n\n\tpublic static _append(lineTokens: Uint32Array | ArrayBuffer | null, _otherTokens: Uint32Array | ArrayBuffer | null): Uint32Array | ArrayBuffer | null {\n\t\tif (_otherTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\treturn _otherTokens;\n\t\t}\n\t\tif (lineTokens === null) {\n\t\t\treturn lineTokens;\n\t\t}\n\t\tif (_otherTokens === null) {\n\t\t\t// cannot determine combined line length...\n\t\t\treturn null;\n\t\t}\n\t\tconst myTokens = toUint32Array(lineTokens);\n\t\tconst otherTokens = toUint32Array(_otherTokens);\n\t\tconst otherTokensCount = (otherTokens.length >>> 1);\n\n\t\tlet result = new Uint32Array(myTokens.length + otherTokens.length);\n\t\tresult.set(myTokens, 0);\n\t\tlet dest = myTokens.length;\n\t\tconst delta = myTokens[myTokens.length - 2];\n\t\tfor (let i = 0; i < otherTokensCount; i++) {\n\t\t\tresult[dest++] = otherTokens[(i << 1)] + delta;\n\t\t\tresult[dest++] = otherTokens[(i << 1) + 1];\n\t\t}\n\t\treturn result.buffer;\n\t}\n\n\tpublic static _insert(lineTokens: Uint32Array | ArrayBuffer | null, chIndex: number, textLength: number): Uint32Array | ArrayBuffer | null {\n\t\tif (lineTokens === null || lineTokens === EMPTY_LINE_TOKENS) {\n\t\t\t// nothing to do\n\t\t\treturn lineTokens;\n\t\t}\n\n\t\tconst tokens = toUint32Array(lineTokens);\n\t\tconst tokensCount = (tokens.length >>> 1);\n\n\t\tlet fromTokenIndex = LineTokens.findIndexInTokensArray(tokens, chIndex);\n\t\tif (fromTokenIndex > 0) {\n\t\t\tconst fromTokenStartOffset = tokens[(fromTokenIndex - 1) << 1];\n\t\t\tif (fromTokenStartOffset === chIndex) {\n\t\t\t\tfromTokenIndex--;\n\t\t\t}\n\t\t}\n\t\tfor (let tokenIndex = fromTokenIndex; tokenIndex < tokensCount; tokenIndex++) {\n\t\t\ttokens[tokenIndex << 1] += textLength;\n\t\t}\n\t\treturn lineTokens;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as strings from 'vs/base/common/strings';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ApplyEditsResult, EndOfLinePreference, FindMatch, IInternalModelContentChange, ISingleEditOperationIdentifier, ITextBuffer, ITextSnapshot, ValidAnnotatedEditOperation, IValidEditOperation } from 'vs/editor/common/model';\nimport { PieceTreeBase, StringBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { SearchData } from 'vs/editor/common/model/textModelSearch';\nimport { countEOL, StringEOL } from 'vs/editor/common/model/tokensStore';\nimport { TextChange } from 'vs/editor/common/model/textChange';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface IValidatedEditOperation {\n\tsortIndex: number;\n\tidentifier: ISingleEditOperationIdentifier | null;\n\trange: Range;\n\trangeOffset: number;\n\trangeLength: number;\n\ttext: string;\n\teolCount: number;\n\tfirstLineLength: number;\n\tlastLineLength: number;\n\tforceMoveMarkers: boolean;\n\tisAutoWhitespaceEdit: boolean;\n}\n\nexport interface IReverseSingleEditOperation extends IValidEditOperation {\n\tsortIndex: number;\n}\n\nexport class PieceTreeTextBuffer implements ITextBuffer, IDisposable {\n\tprivate readonly _pieceTree: PieceTreeBase;\n\tprivate readonly _BOM: string;\n\tprivate _mightContainRTL: boolean;\n\tprivate _mightContainUnusualLineTerminators: boolean;\n\tprivate _mightContainNonBasicASCII: boolean;\n\n\tprivate readonly _onDidChangeContent: Emitter<void> = new Emitter<void>();\n\tpublic readonly onDidChangeContent: Event<void> = this._onDidChangeContent.event;\n\n\tconstructor(chunks: StringBuffer[], BOM: string, eol: '\\r\\n' | '\\n', containsRTL: boolean, containsUnusualLineTerminators: boolean, isBasicASCII: boolean, eolNormalized: boolean) {\n\t\tthis._BOM = BOM;\n\t\tthis._mightContainNonBasicASCII = !isBasicASCII;\n\t\tthis._mightContainRTL = containsRTL;\n\t\tthis._mightContainUnusualLineTerminators = containsUnusualLineTerminators;\n\t\tthis._pieceTree = new PieceTreeBase(chunks, eol, eolNormalized);\n\t}\n\tdispose(): void {\n\t\tthis._onDidChangeContent.dispose();\n\t}\n\n\t// #region TextBuffer\n\tpublic equals(other: ITextBuffer): boolean {\n\t\tif (!(other instanceof PieceTreeTextBuffer)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._BOM !== other._BOM) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.getEOL() !== other.getEOL()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._pieceTree.equal(other._pieceTree);\n\t}\n\tpublic mightContainRTL(): boolean {\n\t\treturn this._mightContainRTL;\n\t}\n\tpublic mightContainUnusualLineTerminators(): boolean {\n\t\treturn this._mightContainUnusualLineTerminators;\n\t}\n\tpublic resetMightContainUnusualLineTerminators(): void {\n\t\tthis._mightContainUnusualLineTerminators = false;\n\t}\n\tpublic mightContainNonBasicASCII(): boolean {\n\t\treturn this._mightContainNonBasicASCII;\n\t}\n\tpublic getBOM(): string {\n\t\treturn this._BOM;\n\t}\n\tpublic getEOL(): '\\r\\n' | '\\n' {\n\t\treturn this._pieceTree.getEOL();\n\t}\n\n\tpublic createSnapshot(preserveBOM: boolean): ITextSnapshot {\n\t\treturn this._pieceTree.createSnapshot(preserveBOM ? this._BOM : '');\n\t}\n\n\tpublic getOffsetAt(lineNumber: number, column: number): number {\n\t\treturn this._pieceTree.getOffsetAt(lineNumber, column);\n\t}\n\n\tpublic getPositionAt(offset: number): Position {\n\t\treturn this._pieceTree.getPositionAt(offset);\n\t}\n\n\tpublic getRangeAt(start: number, length: number): Range {\n\t\tlet end = start + length;\n\t\tconst startPosition = this.getPositionAt(start);\n\t\tconst endPosition = this.getPositionAt(end);\n\t\treturn new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column);\n\t}\n\n\tpublic getValueInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): string {\n\t\tif (range.isEmpty()) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst lineEnding = this._getEndOfLine(eol);\n\t\treturn this._pieceTree.getValueInRange(range, lineEnding);\n\t}\n\n\tpublic getValueLengthInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (range.isEmpty()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn (range.endColumn - range.startColumn);\n\t\t}\n\n\t\tlet startOffset = this.getOffsetAt(range.startLineNumber, range.startColumn);\n\t\tlet endOffset = this.getOffsetAt(range.endLineNumber, range.endColumn);\n\t\treturn endOffset - startOffset;\n\t}\n\n\tpublic getCharacterCountInRange(range: Range, eol: EndOfLinePreference = EndOfLinePreference.TextDefined): number {\n\t\tif (this._mightContainNonBasicASCII) {\n\t\t\t// we must count by iterating\n\n\t\t\tlet result = 0;\n\n\t\t\tconst fromLineNumber = range.startLineNumber;\n\t\t\tconst toLineNumber = range.endLineNumber;\n\t\t\tfor (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n\t\t\t\tconst lineContent = this.getLineContent(lineNumber);\n\t\t\t\tconst fromOffset = (lineNumber === fromLineNumber ? range.startColumn - 1 : 0);\n\t\t\t\tconst toOffset = (lineNumber === toLineNumber ? range.endColumn - 1 : lineContent.length);\n\n\t\t\t\tfor (let offset = fromOffset; offset < toOffset; offset++) {\n\t\t\t\t\tif (strings.isHighSurrogate(lineContent.charCodeAt(offset))) {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t\toffset = offset + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = result + 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult += this._getEndOfLine(eol).length * (toLineNumber - fromLineNumber);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this.getValueLengthInRange(range, eol);\n\t}\n\n\tpublic getLength(): number {\n\t\treturn this._pieceTree.getLength();\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._pieceTree.getLineCount();\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._pieceTree.getLinesContent();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._pieceTree.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineCharCode(lineNumber: number, index: number): number {\n\t\treturn this._pieceTree.getLineCharCode(lineNumber, index);\n\t}\n\n\tpublic getCharCode(offset: number): number {\n\t\treturn this._pieceTree.getCharCode(offset);\n\t}\n\n\tpublic getLineLength(lineNumber: number): number {\n\t\treturn this._pieceTree.getLineLength(lineNumber);\n\t}\n\n\tpublic getLineMinColumn(lineNumber: number): number {\n\t\treturn 1;\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\treturn this.getLineLength(lineNumber) + 1;\n\t}\n\n\tpublic getLineFirstNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.firstNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 1;\n\t}\n\n\tpublic getLineLastNonWhitespaceColumn(lineNumber: number): number {\n\t\tconst result = strings.lastNonWhitespaceIndex(this.getLineContent(lineNumber));\n\t\tif (result === -1) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn result + 2;\n\t}\n\n\tprivate _getEndOfLine(eol: EndOfLinePreference): string {\n\t\tswitch (eol) {\n\t\t\tcase EndOfLinePreference.LF:\n\t\t\t\treturn '\\n';\n\t\t\tcase EndOfLinePreference.CRLF:\n\t\t\t\treturn '\\r\\n';\n\t\t\tcase EndOfLinePreference.TextDefined:\n\t\t\t\treturn this.getEOL();\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown EOL preference');\n\t\t}\n\t}\n\n\tpublic setEOL(newEOL: '\\r\\n' | '\\n'): void {\n\t\tthis._pieceTree.setEOL(newEOL);\n\t}\n\n\tpublic applyEdits(rawOperations: ValidAnnotatedEditOperation[], recordTrimAutoWhitespace: boolean, computeUndoEdits: boolean): ApplyEditsResult {\n\t\tlet mightContainRTL = this._mightContainRTL;\n\t\tlet mightContainUnusualLineTerminators = this._mightContainUnusualLineTerminators;\n\t\tlet mightContainNonBasicASCII = this._mightContainNonBasicASCII;\n\t\tlet canReduceOperations = true;\n\n\t\tlet operations: IValidatedEditOperation[] = [];\n\t\tfor (let i = 0; i < rawOperations.length; i++) {\n\t\t\tlet op = rawOperations[i];\n\t\t\tif (canReduceOperations && op._isTracked) {\n\t\t\t\tcanReduceOperations = false;\n\t\t\t}\n\t\t\tlet validatedRange = op.range;\n\t\t\tif (op.text) {\n\t\t\t\tlet textMightContainNonBasicASCII = true;\n\t\t\t\tif (!mightContainNonBasicASCII) {\n\t\t\t\t\ttextMightContainNonBasicASCII = !strings.isBasicASCII(op.text);\n\t\t\t\t\tmightContainNonBasicASCII = textMightContainNonBasicASCII;\n\t\t\t\t}\n\t\t\t\tif (!mightContainRTL && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains RTL\n\t\t\t\t\tmightContainRTL = strings.containsRTL(op.text);\n\t\t\t\t}\n\t\t\t\tif (!mightContainUnusualLineTerminators && textMightContainNonBasicASCII) {\n\t\t\t\t\t// check if the new inserted text contains unusual line terminators\n\t\t\t\t\tmightContainUnusualLineTerminators = strings.containsUnusualLineTerminators(op.text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet validText = '';\n\t\t\tlet eolCount = 0;\n\t\t\tlet firstLineLength = 0;\n\t\t\tlet lastLineLength = 0;\n\t\t\tif (op.text) {\n\t\t\t\tlet strEOL: StringEOL;\n\t\t\t\t[eolCount, firstLineLength, lastLineLength, strEOL] = countEOL(op.text);\n\n\t\t\t\tconst bufferEOL = this.getEOL();\n\t\t\t\tconst expectedStrEOL = (bufferEOL === '\\r\\n' ? StringEOL.CRLF : StringEOL.LF);\n\t\t\t\tif (strEOL === StringEOL.Unknown || strEOL === expectedStrEOL) {\n\t\t\t\t\tvalidText = op.text;\n\t\t\t\t} else {\n\t\t\t\t\tvalidText = op.text.replace(/\\r\\n|\\r|\\n/g, bufferEOL);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toperations[i] = {\n\t\t\t\tsortIndex: i,\n\t\t\t\tidentifier: op.identifier || null,\n\t\t\t\trange: validatedRange,\n\t\t\t\trangeOffset: this.getOffsetAt(validatedRange.startLineNumber, validatedRange.startColumn),\n\t\t\t\trangeLength: this.getValueLengthInRange(validatedRange),\n\t\t\t\ttext: validText,\n\t\t\t\teolCount: eolCount,\n\t\t\t\tfirstLineLength: firstLineLength,\n\t\t\t\tlastLineLength: lastLineLength,\n\t\t\t\tforceMoveMarkers: Boolean(op.forceMoveMarkers),\n\t\t\t\tisAutoWhitespaceEdit: op.isAutoWhitespaceEdit || false\n\t\t\t};\n\t\t}\n\n\t\t// Sort operations ascending\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsAscending);\n\n\t\tlet hasTouchingRanges = false;\n\t\tfor (let i = 0, count = operations.length - 1; i < count; i++) {\n\t\t\tlet rangeEnd = operations[i].range.getEndPosition();\n\t\t\tlet nextRangeStart = operations[i + 1].range.getStartPosition();\n\n\t\t\tif (nextRangeStart.isBeforeOrEqual(rangeEnd)) {\n\t\t\t\tif (nextRangeStart.isBefore(rangeEnd)) {\n\t\t\t\t\t// overlapping ranges\n\t\t\t\t\tthrow new Error('Overlapping ranges are not allowed!');\n\t\t\t\t}\n\t\t\t\thasTouchingRanges = true;\n\t\t\t}\n\t\t}\n\n\t\tif (canReduceOperations) {\n\t\t\toperations = this._reduceOperations(operations);\n\t\t}\n\n\t\t// Delta encode operations\n\t\tlet reverseRanges = (computeUndoEdits || recordTrimAutoWhitespace ? PieceTreeTextBuffer._getInverseEditRanges(operations) : []);\n\t\tlet newTrimAutoWhitespaceCandidates: { lineNumber: number, oldContent: string }[] = [];\n\t\tif (recordTrimAutoWhitespace) {\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tlet op = operations[i];\n\t\t\t\tlet reverseRange = reverseRanges[i];\n\n\t\t\t\tif (op.isAutoWhitespaceEdit && op.range.isEmpty()) {\n\t\t\t\t\t// Record already the future line numbers that might be auto whitespace removal candidates on next edit\n\t\t\t\t\tfor (let lineNumber = reverseRange.startLineNumber; lineNumber <= reverseRange.endLineNumber; lineNumber++) {\n\t\t\t\t\t\tlet currentLineContent = '';\n\t\t\t\t\t\tif (lineNumber === reverseRange.startLineNumber) {\n\t\t\t\t\t\t\tcurrentLineContent = this.getLineContent(op.range.startLineNumber);\n\t\t\t\t\t\t\tif (strings.firstNonWhitespaceIndex(currentLineContent) !== -1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewTrimAutoWhitespaceCandidates.push({ lineNumber: lineNumber, oldContent: currentLineContent });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet reverseOperations: IReverseSingleEditOperation[] | null = null;\n\t\tif (computeUndoEdits) {\n\n\t\t\tlet reverseRangeDeltaOffset = 0;\n\t\t\treverseOperations = [];\n\t\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\t\tconst op = operations[i];\n\t\t\t\tconst reverseRange = reverseRanges[i];\n\t\t\t\tconst bufferText = this.getValueInRange(op.range);\n\t\t\t\tconst reverseRangeOffset = op.rangeOffset + reverseRangeDeltaOffset;\n\t\t\t\treverseRangeDeltaOffset += (op.text.length - bufferText.length);\n\n\t\t\t\treverseOperations[i] = {\n\t\t\t\t\tsortIndex: op.sortIndex,\n\t\t\t\t\tidentifier: op.identifier,\n\t\t\t\t\trange: reverseRange,\n\t\t\t\t\ttext: bufferText,\n\t\t\t\t\ttextChange: new TextChange(op.rangeOffset, bufferText, reverseRangeOffset, op.text)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Can only sort reverse operations when the order is not significant\n\t\t\tif (!hasTouchingRanges) {\n\t\t\t\treverseOperations.sort((a, b) => a.sortIndex - b.sortIndex);\n\t\t\t}\n\t\t}\n\n\n\t\tthis._mightContainRTL = mightContainRTL;\n\t\tthis._mightContainUnusualLineTerminators = mightContainUnusualLineTerminators;\n\t\tthis._mightContainNonBasicASCII = mightContainNonBasicASCII;\n\n\t\tconst contentChanges = this._doApplyEdits(operations);\n\n\t\tlet trimAutoWhitespaceLineNumbers: number[] | null = null;\n\t\tif (recordTrimAutoWhitespace && newTrimAutoWhitespaceCandidates.length > 0) {\n\t\t\t// sort line numbers auto whitespace removal candidates for next edit descending\n\t\t\tnewTrimAutoWhitespaceCandidates.sort((a, b) => b.lineNumber - a.lineNumber);\n\n\t\t\ttrimAutoWhitespaceLineNumbers = [];\n\t\t\tfor (let i = 0, len = newTrimAutoWhitespaceCandidates.length; i < len; i++) {\n\t\t\t\tlet lineNumber = newTrimAutoWhitespaceCandidates[i].lineNumber;\n\t\t\t\tif (i > 0 && newTrimAutoWhitespaceCandidates[i - 1].lineNumber === lineNumber) {\n\t\t\t\t\t// Do not have the same line number twice\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tlet prevContent = newTrimAutoWhitespaceCandidates[i].oldContent;\n\t\t\t\tlet lineContent = this.getLineContent(lineNumber);\n\n\t\t\t\tif (lineContent.length === 0 || lineContent === prevContent || strings.firstNonWhitespaceIndex(lineContent) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\ttrimAutoWhitespaceLineNumbers.push(lineNumber);\n\t\t\t}\n\t\t}\n\n\t\tthis._onDidChangeContent.fire();\n\n\t\treturn new ApplyEditsResult(\n\t\t\treverseOperations,\n\t\t\tcontentChanges,\n\t\t\ttrimAutoWhitespaceLineNumbers\n\t\t);\n\t}\n\n\t/**\n\t * Transform operations such that they represent the same logic edit,\n\t * but that they also do not cause OOM crashes.\n\t */\n\tprivate _reduceOperations(operations: IValidatedEditOperation[]): IValidatedEditOperation[] {\n\t\tif (operations.length < 1000) {\n\t\t\t// We know from empirical testing that a thousand edits work fine regardless of their shape.\n\t\t\treturn operations;\n\t\t}\n\n\t\t// At one point, due to how events are emitted and how each operation is handled,\n\t\t// some operations can trigger a high amount of temporary string allocations,\n\t\t// that will immediately get edited again.\n\t\t// e.g. a formatter inserting ridiculous ammounts of \\n on a model with a single line\n\t\t// Therefore, the strategy is to collapse all the operations into a huge single edit operation\n\t\treturn [this._toSingleEditOperation(operations)];\n\t}\n\n\t_toSingleEditOperation(operations: IValidatedEditOperation[]): IValidatedEditOperation {\n\t\tlet forceMoveMarkers = false;\n\t\tconst firstEditRange = operations[0].range;\n\t\tconst lastEditRange = operations[operations.length - 1].range;\n\t\tconst entireEditRange = new Range(firstEditRange.startLineNumber, firstEditRange.startColumn, lastEditRange.endLineNumber, lastEditRange.endColumn);\n\t\tlet lastEndLineNumber = firstEditRange.startLineNumber;\n\t\tlet lastEndColumn = firstEditRange.startColumn;\n\t\tconst result: string[] = [];\n\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tconst operation = operations[i];\n\t\t\tconst range = operation.range;\n\n\t\t\tforceMoveMarkers = forceMoveMarkers || operation.forceMoveMarkers;\n\n\t\t\t// (1) -- Push old text\n\t\t\tresult.push(this.getValueInRange(new Range(lastEndLineNumber, lastEndColumn, range.startLineNumber, range.startColumn)));\n\n\t\t\t// (2) -- Push new text\n\t\t\tif (operation.text.length > 0) {\n\t\t\t\tresult.push(operation.text);\n\t\t\t}\n\n\t\t\tlastEndLineNumber = range.endLineNumber;\n\t\t\tlastEndColumn = range.endColumn;\n\t\t}\n\n\t\tconst text = result.join('');\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\n\t\treturn {\n\t\t\tsortIndex: 0,\n\t\t\tidentifier: operations[0].identifier,\n\t\t\trange: entireEditRange,\n\t\t\trangeOffset: this.getOffsetAt(entireEditRange.startLineNumber, entireEditRange.startColumn),\n\t\t\trangeLength: this.getValueLengthInRange(entireEditRange, EndOfLinePreference.TextDefined),\n\t\t\ttext: text,\n\t\t\teolCount: eolCount,\n\t\t\tfirstLineLength: firstLineLength,\n\t\t\tlastLineLength: lastLineLength,\n\t\t\tforceMoveMarkers: forceMoveMarkers,\n\t\t\tisAutoWhitespaceEdit: false\n\t\t};\n\t}\n\n\tprivate _doApplyEdits(operations: IValidatedEditOperation[]): IInternalModelContentChange[] {\n\t\toperations.sort(PieceTreeTextBuffer._sortOpsDescending);\n\n\t\tlet contentChanges: IInternalModelContentChange[] = [];\n\n\t\t// operations are from bottom to top\n\t\tfor (let i = 0; i < operations.length; i++) {\n\t\t\tlet op = operations[i];\n\n\t\t\tconst startLineNumber = op.range.startLineNumber;\n\t\t\tconst startColumn = op.range.startColumn;\n\t\t\tconst endLineNumber = op.range.endLineNumber;\n\t\t\tconst endColumn = op.range.endColumn;\n\n\t\t\tif (startLineNumber === endLineNumber && startColumn === endColumn && op.text.length === 0) {\n\t\t\t\t// no-op\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (op.text) {\n\t\t\t\t// replacement\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t\tthis._pieceTree.insert(op.rangeOffset, op.text, true);\n\n\t\t\t} else {\n\t\t\t\t// deletion\n\t\t\t\tthis._pieceTree.delete(op.rangeOffset, op.rangeLength);\n\t\t\t}\n\n\t\t\tconst contentChangeRange = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n\t\t\tcontentChanges.push({\n\t\t\t\trange: contentChangeRange,\n\t\t\t\trangeLength: op.rangeLength,\n\t\t\t\ttext: op.text,\n\t\t\t\trangeOffset: op.rangeOffset,\n\t\t\t\tforceMoveMarkers: op.forceMoveMarkers\n\t\t\t});\n\t\t}\n\t\treturn contentChanges;\n\t}\n\n\tfindMatchesLineByLine(searchRange: Range, searchData: SearchData, captureMatches: boolean, limitResultCount: number): FindMatch[] {\n\t\treturn this._pieceTree.findMatchesLineByLine(searchRange, searchData, captureMatches, limitResultCount);\n\t}\n\n\t// #endregion\n\n\t// #region helper\n\t// testing purpose.\n\tpublic getPieceTree(): PieceTreeBase {\n\t\treturn this._pieceTree;\n\t}\n\n\tpublic static _getInverseEditRange(range: Range, text: string) {\n\t\tlet startLineNumber = range.startLineNumber;\n\t\tlet startColumn = range.startColumn;\n\t\tconst [eolCount, firstLineLength, lastLineLength] = countEOL(text);\n\t\tlet resultRange: Range;\n\n\t\tif (text.length > 0) {\n\t\t\t// the operation inserts something\n\t\t\tconst lineCount = eolCount + 1;\n\n\t\t\tif (lineCount === 1) {\n\t\t\t\t// single line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + firstLineLength);\n\t\t\t} else {\n\t\t\t\t// multi line insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, lastLineLength + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// There is nothing to insert\n\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t}\n\n\t\treturn resultRange;\n\t}\n\n\t/**\n\t * Assumes `operations` are validated and sorted ascending\n\t */\n\tpublic static _getInverseEditRanges(operations: IValidatedEditOperation[]): Range[] {\n\t\tlet result: Range[] = [];\n\n\t\tlet prevOpEndLineNumber: number = 0;\n\t\tlet prevOpEndColumn: number = 0;\n\t\tlet prevOp: IValidatedEditOperation | null = null;\n\t\tfor (let i = 0, len = operations.length; i < len; i++) {\n\t\t\tlet op = operations[i];\n\n\t\t\tlet startLineNumber: number;\n\t\t\tlet startColumn: number;\n\n\t\t\tif (prevOp) {\n\t\t\t\tif (prevOp.range.endLineNumber === op.range.startLineNumber) {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber;\n\t\t\t\t\tstartColumn = prevOpEndColumn + (op.range.startColumn - prevOp.range.endColumn);\n\t\t\t\t} else {\n\t\t\t\t\tstartLineNumber = prevOpEndLineNumber + (op.range.startLineNumber - prevOp.range.endLineNumber);\n\t\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstartLineNumber = op.range.startLineNumber;\n\t\t\t\tstartColumn = op.range.startColumn;\n\t\t\t}\n\n\t\t\tlet resultRange: Range;\n\n\t\t\tif (op.text.length > 0) {\n\t\t\t\t// the operation inserts something\n\t\t\t\tconst lineCount = op.eolCount + 1;\n\n\t\t\t\tif (lineCount === 1) {\n\t\t\t\t\t// single line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn + op.firstLineLength);\n\t\t\t\t} else {\n\t\t\t\t\t// multi line insert\n\t\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber + lineCount - 1, op.lastLineLength + 1);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// There is nothing to insert\n\t\t\t\tresultRange = new Range(startLineNumber, startColumn, startLineNumber, startColumn);\n\t\t\t}\n\n\t\t\tprevOpEndLineNumber = resultRange.endLineNumber;\n\t\t\tprevOpEndColumn = resultRange.endColumn;\n\n\t\t\tresult.push(resultRange);\n\t\t\tprevOp = op;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate static _sortOpsAscending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tlet r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn a.sortIndex - b.sortIndex;\n\t\t}\n\t\treturn r;\n\t}\n\n\tprivate static _sortOpsDescending(a: IValidatedEditOperation, b: IValidatedEditOperation): number {\n\t\tlet r = Range.compareRangesUsingEnds(a.range, b.range);\n\t\tif (r === 0) {\n\t\t\treturn b.sortIndex - a.sortIndex;\n\t\t}\n\t\treturn -r;\n\t}\n\t// #endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as strings from 'vs/base/common/strings';\nimport { DefaultEndOfLine, ITextBuffer, ITextBufferBuilder, ITextBufferFactory } from 'vs/editor/common/model';\nimport { StringBuffer, createLineStarts, createLineStartsFast } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeBase';\nimport { PieceTreeTextBuffer } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBuffer';\n\nexport class PieceTreeTextBufferFactory implements ITextBufferFactory {\n\n\tconstructor(\n\t\tprivate readonly _chunks: StringBuffer[],\n\t\tprivate readonly _bom: string,\n\t\tprivate readonly _cr: number,\n\t\tprivate readonly _lf: number,\n\t\tprivate readonly _crlf: number,\n\t\tprivate readonly _containsRTL: boolean,\n\t\tprivate readonly _containsUnusualLineTerminators: boolean,\n\t\tprivate readonly _isBasicASCII: boolean,\n\t\tprivate readonly _normalizeEOL: boolean\n\t) { }\n\n\tprivate _getEOL(defaultEOL: DefaultEndOfLine): '\\r\\n' | '\\n' {\n\t\tconst totalEOLCount = this._cr + this._lf + this._crlf;\n\t\tconst totalCRCount = this._cr + this._crlf;\n\t\tif (totalEOLCount === 0) {\n\t\t\t// This is an empty file or a file with precisely one line\n\t\t\treturn (defaultEOL === DefaultEndOfLine.LF ? '\\n' : '\\r\\n');\n\t\t}\n\t\tif (totalCRCount > totalEOLCount / 2) {\n\t\t\t// More than half of the file contains \\r\\n ending lines\n\t\t\treturn '\\r\\n';\n\t\t}\n\t\t// At least one line more ends in \\n\n\t\treturn '\\n';\n\t}\n\n\tpublic create(defaultEOL: DefaultEndOfLine): ITextBuffer {\n\t\tconst eol = this._getEOL(defaultEOL);\n\t\tlet chunks = this._chunks;\n\n\t\tif (this._normalizeEOL &&\n\t\t\t((eol === '\\r\\n' && (this._cr > 0 || this._lf > 0))\n\t\t\t\t|| (eol === '\\n' && (this._cr > 0 || this._crlf > 0)))\n\t\t) {\n\t\t\t// Normalize pieces\n\t\t\tfor (let i = 0, len = chunks.length; i < len; i++) {\n\t\t\t\tlet str = chunks[i].buffer.replace(/\\r\\n|\\r|\\n/g, eol);\n\t\t\t\tlet newLineStart = createLineStartsFast(str);\n\t\t\t\tchunks[i] = new StringBuffer(str, newLineStart);\n\t\t\t}\n\t\t}\n\n\t\treturn new PieceTreeTextBuffer(chunks, this._bom, eol, this._containsRTL, this._containsUnusualLineTerminators, this._isBasicASCII, this._normalizeEOL);\n\t}\n\n\tpublic getFirstLineText(lengthLimit: number): string {\n\t\treturn this._chunks[0].buffer.substr(0, lengthLimit).split(/\\r\\n|\\r|\\n/)[0];\n\t}\n}\n\nexport class PieceTreeTextBufferBuilder implements ITextBufferBuilder {\n\tprivate readonly chunks: StringBuffer[];\n\tprivate BOM: string;\n\n\tprivate _hasPreviousChar: boolean;\n\tprivate _previousChar: number;\n\tprivate readonly _tmpLineStarts: number[];\n\n\tprivate cr: number;\n\tprivate lf: number;\n\tprivate crlf: number;\n\tprivate containsRTL: boolean;\n\tprivate containsUnusualLineTerminators: boolean;\n\tprivate isBasicASCII: boolean;\n\n\tconstructor() {\n\t\tthis.chunks = [];\n\t\tthis.BOM = '';\n\n\t\tthis._hasPreviousChar = false;\n\t\tthis._previousChar = 0;\n\t\tthis._tmpLineStarts = [];\n\n\t\tthis.cr = 0;\n\t\tthis.lf = 0;\n\t\tthis.crlf = 0;\n\t\tthis.containsRTL = false;\n\t\tthis.containsUnusualLineTerminators = false;\n\t\tthis.isBasicASCII = true;\n\t}\n\n\tpublic acceptChunk(chunk: string): void {\n\t\tif (chunk.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.chunks.length === 0) {\n\t\t\tif (strings.startsWithUTF8BOM(chunk)) {\n\t\t\t\tthis.BOM = strings.UTF8_BOM_CHARACTER;\n\t\t\t\tchunk = chunk.substr(1);\n\t\t\t}\n\t\t}\n\n\t\tconst lastChar = chunk.charCodeAt(chunk.length - 1);\n\t\tif (lastChar === CharCode.CarriageReturn || (lastChar >= 0xD800 && lastChar <= 0xDBFF)) {\n\t\t\t// last character is \\r or a high surrogate => keep it back\n\t\t\tthis._acceptChunk1(chunk.substr(0, chunk.length - 1), false);\n\t\t\tthis._hasPreviousChar = true;\n\t\t\tthis._previousChar = lastChar;\n\t\t} else {\n\t\t\tthis._acceptChunk1(chunk, false);\n\t\t\tthis._hasPreviousChar = false;\n\t\t\tthis._previousChar = lastChar;\n\t\t}\n\t}\n\n\tprivate _acceptChunk1(chunk: string, allowEmptyStrings: boolean): void {\n\t\tif (!allowEmptyStrings && chunk.length === 0) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._acceptChunk2(String.fromCharCode(this._previousChar) + chunk);\n\t\t} else {\n\t\t\tthis._acceptChunk2(chunk);\n\t\t}\n\t}\n\n\tprivate _acceptChunk2(chunk: string): void {\n\t\tconst lineStarts = createLineStarts(this._tmpLineStarts, chunk);\n\n\t\tthis.chunks.push(new StringBuffer(chunk, lineStarts.lineStarts));\n\t\tthis.cr += lineStarts.cr;\n\t\tthis.lf += lineStarts.lf;\n\t\tthis.crlf += lineStarts.crlf;\n\n\t\tif (this.isBasicASCII) {\n\t\t\tthis.isBasicASCII = lineStarts.isBasicASCII;\n\t\t}\n\t\tif (!this.isBasicASCII && !this.containsRTL) {\n\t\t\t// No need to check if it is basic ASCII\n\t\t\tthis.containsRTL = strings.containsRTL(chunk);\n\t\t}\n\t\tif (!this.isBasicASCII && !this.containsUnusualLineTerminators) {\n\t\t\t// No need to check if it is basic ASCII\n\t\t\tthis.containsUnusualLineTerminators = strings.containsUnusualLineTerminators(chunk);\n\t\t}\n\t}\n\n\tpublic finish(normalizeEOL: boolean = true): PieceTreeTextBufferFactory {\n\t\tthis._finish();\n\t\treturn new PieceTreeTextBufferFactory(\n\t\t\tthis.chunks,\n\t\t\tthis.BOM,\n\t\t\tthis.cr,\n\t\t\tthis.lf,\n\t\t\tthis.crlf,\n\t\t\tthis.containsRTL,\n\t\t\tthis.containsUnusualLineTerminators,\n\t\t\tthis.isBasicASCII,\n\t\t\tnormalizeEOL\n\t\t);\n\t}\n\n\tprivate _finish(): void {\n\t\tif (this.chunks.length === 0) {\n\t\t\tthis._acceptChunk1('', true);\n\t\t}\n\n\t\tif (this._hasPreviousChar) {\n\t\t\tthis._hasPreviousChar = false;\n\t\t\t// recreate last chunk\n\t\t\tlet lastChunk = this.chunks[this.chunks.length - 1];\n\t\t\tlastChunk.buffer += String.fromCharCode(this._previousChar);\n\t\t\tlet newLineStarts = createLineStartsFast(lastChunk.buffer);\n\t\t\tlastChunk.lineStarts = newLineStarts;\n\t\t\tif (this._previousChar === CharCode.CarriageReturn) {\n\t\t\t\tthis.cr++;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isMacintosh, isLinux, isWindows, isWeb } from 'vs/base/common/platform';\n\nconst STATIC_VALUES = new Map<string, boolean>();\nSTATIC_VALUES.set('false', false);\nSTATIC_VALUES.set('true', true);\nSTATIC_VALUES.set('isMac', isMacintosh);\nSTATIC_VALUES.set('isLinux', isLinux);\nSTATIC_VALUES.set('isWindows', isWindows);\nSTATIC_VALUES.set('isWeb', isWeb);\nSTATIC_VALUES.set('isMacNative', isMacintosh && !isWeb);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr | ContextKeyNotInExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr);\n\t}\n\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)));\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)));\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tlet pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn staticValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(protected readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key) : ContextKeyNotExpr.create(key));\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst trueValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' == \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\n\tprivate constructor(private readonly key: string, private readonly valueKey: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.valueKey < other.valueKey) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.valueKey > other.valueKey) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn (source.indexOf(item) >= 0);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' in \\'' + this.valueKey + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotInExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyInExpr): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate constructor(private readonly _actual: ContextKeyInExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotInExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key);\n\t\t}\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\tconst falseValue = staticValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(private readonly key: string, private readonly value: any) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (this.value < other.value) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.value > other.value) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key + ' != \\'' + this.value + '\\'';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, this.value);\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string): ContextKeyExpression {\n\t\tconst staticValue = STATIC_VALUES.get(key);\n\t\tif (typeof staticValue === 'boolean') {\n\t\t\treturn (staticValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(private readonly key: string) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn '!' + this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(this.key);\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\n\tprivate constructor(private readonly key: string, private readonly regexp: RegExp | null) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyNotRegexExpr.create(this);\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement]))\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\t\treturn ContextKeyOrExpr.create(result)!;\n\t}\n}\n\nexport class ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression | undefined {\n\t\tconst expr = ContextKeyOrExpr._normalizeArr(_expr);\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(public readonly expr: ContextKeyExpression[]) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>): ContextKeyExpression[] {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn [ContextKeyTrueExpr.INSTANCE];\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn [ContextKeyFalseExpr.INSTANCE];\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\treturn expr;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tlet result: ContextKeyExpression[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(expr.negate());\n\t\t}\n\n\t\tconst terminals = (node: ContextKeyExpression) => {\n\t\t\tif (node.type === ContextKeyExprType.Or) {\n\t\t\t\treturn node.expr;\n\t\t\t}\n\t\t\treturn [node];\n\t\t};\n\n\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t// We always take the first 2 AND pairs and distribute them\n\t\twhile (result.length > 1) {\n\t\t\tconst LEFT = result.shift()!;\n\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\tfor (const left of terminals(LEFT)) {\n\t\t\t\tfor (const right of terminals(RIGHT)) {\n\t\t\t\t\tall.push(ContextKeyExpr.and(left, right)!);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult.unshift(ContextKeyExpr.or(...all)!);\n\t\t}\n\n\t\treturn result[0];\n\t}\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined) {\n\t\tsuper(key);\n\t\tthis._defaultValue = defaultValue;\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn ContextKeyExpr.not(this.key);\n\t}\n\n\tpublic isEqualTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.equals(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: string): ContextKeyExpression {\n\t\treturn ContextKeyExpr.notEquals(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target?: IContextKeyServiceTarget): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService?: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IDiffResult, ISequence } from 'vs/base/common/diff/diff';\nimport { Event } from 'vs/base/common/event';\nimport * as glob from 'vs/base/common/glob';\nimport * as UUID from 'vs/base/common/uuid';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { ISplice } from 'vs/base/common/sequence';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport * as editorCommon from 'vs/editor/common/editorCommon';\nimport { Command } from 'vs/editor/common/modes';\nimport { IAccessibilityInformation } from 'vs/platform/accessibility/common/accessibility';\nimport { RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { ExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IRevertOptions } from 'vs/workbench/common/editor';\nimport { NotebookTextModel } from 'vs/workbench/contrib/notebook/common/model/notebookTextModel';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { IRange } from 'vs/editor/common/core/range';\nimport { ThemeColor } from 'vs/platform/theme/common/themeService';\n\nexport enum CellKind {\n\tMarkdown = 1,\n\tCode = 2\n}\n\nexport enum CellOutputKind {\n\tText = 1,\n\tError = 2,\n\tRich = 3\n}\n\nexport const NOTEBOOK_DISPLAY_ORDER = [\n\t'application/json',\n\t'application/javascript',\n\t'text/html',\n\t'image/svg+xml',\n\t'text/markdown',\n\t'image/png',\n\t'image/jpeg',\n\t'text/plain'\n];\n\nexport const ACCESSIBLE_NOTEBOOK_DISPLAY_ORDER = [\n\t'text/markdown',\n\t'application/json',\n\t'text/plain',\n\t'text/html',\n\t'image/svg+xml',\n\t'image/png',\n\t'image/jpeg',\n];\n\nexport const BUILTIN_RENDERER_ID = '_builtin';\n\nexport enum NotebookRunState {\n\tRunning = 1,\n\tIdle = 2\n}\n\nexport const notebookDocumentMetadataDefaults: Required<NotebookDocumentMetadata> = {\n\teditable: true,\n\trunnable: true,\n\tcellEditable: true,\n\tcellRunnable: true,\n\tcellHasExecutionOrder: true,\n\tdisplayOrder: NOTEBOOK_DISPLAY_ORDER,\n\tcustom: {},\n\trunState: NotebookRunState.Idle\n};\n\nexport interface NotebookDocumentMetadata {\n\teditable: boolean;\n\trunnable: boolean;\n\tcellEditable: boolean;\n\tcellRunnable: boolean;\n\tcellHasExecutionOrder: boolean;\n\tdisplayOrder?: (string | glob.IRelativePattern)[];\n\tcustom?: { [key: string]: unknown };\n\trunState?: NotebookRunState;\n}\n\nexport enum NotebookCellRunState {\n\tRunning = 1,\n\tIdle = 2,\n\tSuccess = 3,\n\tError = 4\n}\n\nexport interface NotebookCellMetadata {\n\teditable?: boolean;\n\trunnable?: boolean;\n\tbreakpointMargin?: boolean;\n\thasExecutionOrder?: boolean;\n\texecutionOrder?: number;\n\tstatusMessage?: string;\n\trunState?: NotebookCellRunState;\n\trunStartTime?: number;\n\tlastRunDuration?: number;\n\tinputCollapsed?: boolean;\n\toutputCollapsed?: boolean;\n\tcustom?: { [key: string]: unknown };\n}\n\nexport type TransientMetadata = { [K in keyof NotebookCellMetadata]?: boolean };\n\nexport interface TransientOptions {\n\ttransientOutputs: boolean;\n\ttransientMetadata: TransientMetadata;\n}\n\nexport interface INotebookDisplayOrder {\n\tdefaultOrder: string[];\n\tuserOrder?: string[];\n}\n\nexport interface INotebookMimeTypeSelector {\n\tmimeTypes?: string[];\n}\n\nexport interface INotebookRendererInfo {\n\tid: string;\n\tdisplayName: string;\n\tentrypoint: URI;\n\tpreloads: ReadonlyArray<URI>;\n\textensionLocation: URI;\n\textensionId: ExtensionIdentifier;\n\n\tmatches(mimeType: string): boolean;\n}\n\nexport interface IStreamOutput {\n\toutputKind: CellOutputKind.Text;\n\ttext: string;\n}\n\nexport interface IErrorOutput {\n\toutputKind: CellOutputKind.Error;\n\t/**\n\t * Exception Name\n\t */\n\tename: string;\n\t/**\n\t * Exception Value\n\t */\n\tevalue: string;\n\t/**\n\t * Exception call stacks\n\t */\n\ttraceback: string[];\n}\n\nexport interface NotebookCellOutputMetadata {\n\t/**\n\t * Additional attributes of a cell metadata.\n\t */\n\tcustom?: { [key: string]: unknown };\n}\n\nexport interface IDisplayOutput {\n\toutputKind: CellOutputKind.Rich;\n\t/**\n\t * { mime_type: value }\n\t */\n\tdata: { [key: string]: unknown; }\n\n\tmetadata?: NotebookCellOutputMetadata;\n}\n\nexport enum MimeTypeRendererResolver {\n\tCore,\n\tActive,\n\tLazy\n}\n\nexport interface IOrderedMimeType {\n\tmimeType: string;\n\trendererId: string;\n}\n\nexport interface ITransformedDisplayOutputDto {\n\toutputKind: CellOutputKind.Rich;\n\toutputId: string;\n\tdata: { [key: string]: unknown; }\n\tmetadata?: NotebookCellOutputMetadata;\n\n\torderedMimeTypes?: IOrderedMimeType[];\n\tpickedMimeTypeIndex?: number;\n}\n\nexport function isTransformedDisplayOutput(thing: unknown): thing is ITransformedDisplayOutputDto {\n\treturn (thing as ITransformedDisplayOutputDto).outputKind === CellOutputKind.Rich && !!(thing as ITransformedDisplayOutputDto).outputId;\n}\n\nexport interface IGenericOutput {\n\toutputKind: CellOutputKind;\n\tpickedMimeType?: string;\n\tpickedRenderer?: number;\n\ttransformedOutput?: { [key: string]: IDisplayOutput };\n}\n\n\nexport const addIdToOutput = (output: IRawOutput, id = UUID.generateUuid()): IProcessedOutput => output.outputKind === CellOutputKind.Rich\n\t? ({ ...output, outputId: id }) : output;\n\n\nexport type IProcessedOutput = ITransformedDisplayOutputDto | IStreamOutput | IErrorOutput;\n\nexport type IRawOutput = IDisplayOutput | IStreamOutput | IErrorOutput;\n\nexport interface IOutputRenderRequestOutputInfo {\n\tindex: number;\n\toutputId: string;\n\thandlerId: string;\n\tmimeType: string;\n\toutput?: IRawOutput;\n}\n\nexport interface IOutputRenderRequestCellInfo<T> {\n\tkey: T;\n\toutputs: IOutputRenderRequestOutputInfo[];\n}\n\nexport interface IOutputRenderRequest<T> {\n\titems: IOutputRenderRequestCellInfo<T>[];\n}\n\nexport interface IOutputRenderResponseOutputInfo {\n\tindex: number;\n\toutputId: string;\n\tmimeType: string;\n\thandlerId: string;\n\ttransformedOutput: string;\n}\n\nexport interface IOutputRenderResponseCellInfo<T> {\n\tkey: T;\n\toutputs: IOutputRenderResponseOutputInfo[];\n}\n\n\nexport interface IOutputRenderResponse<T> {\n\titems: IOutputRenderResponseCellInfo<T>[];\n}\n\n\nexport interface ICell {\n\treadonly uri: URI;\n\thandle: number;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IProcessedOutput[];\n\tmetadata?: NotebookCellMetadata;\n\tonDidChangeOutputs?: Event<NotebookCellOutputsSplice[]>;\n\tonDidChangeLanguage: Event<string>;\n\tonDidChangeMetadata: Event<void>;\n}\n\nexport interface LanguageInfo {\n\tfile_extension: string;\n}\n\nexport interface IMetadata {\n\tlanguage_info: LanguageInfo;\n}\n\nexport interface INotebookTextModel {\n\treadonly viewType: string;\n\tmetadata: NotebookDocumentMetadata\n\treadonly uri: URI;\n\treadonly versionId: number;\n\tlanguages: string[];\n\treadonly cells: readonly ICell[];\n\tonWillDispose(listener: () => void): IDisposable;\n}\n\nexport const enum RenderOutputType {\n\tNone,\n\tHtml,\n\tExtension\n}\n\nexport interface IRenderNoOutput {\n\ttype: RenderOutputType.None;\n\thasDynamicHeight: boolean;\n}\n\nexport interface IRenderPlainHtmlOutput {\n\ttype: RenderOutputType.Html;\n\tsource: ITransformedDisplayOutputDto;\n\thtmlContent: string;\n\thasDynamicHeight: boolean;\n}\n\nexport interface IRenderOutputViaExtension {\n\ttype: RenderOutputType.Extension;\n\tsource: ITransformedDisplayOutputDto;\n\tmimeType: string;\n\trenderer: INotebookRendererInfo;\n}\n\nexport type IInsetRenderOutput = IRenderPlainHtmlOutput | IRenderOutputViaExtension;\nexport type IRenderOutput = IRenderNoOutput | IInsetRenderOutput;\n\nexport const outputHasDynamicHeight = (o: IRenderOutput) => o.type !== RenderOutputType.Extension && o.hasDynamicHeight;\n\nexport type NotebookCellTextModelSplice<T> = [\n\tnumber /* start */,\n\tnumber,\n\tT[]\n];\n\nexport type NotebookCellOutputsSplice = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tIProcessedOutput[]\n];\n\nexport interface IMainCellDto {\n\thandle: number;\n\turi: UriComponents,\n\tsource: string[];\n\teol: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IProcessedOutput[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport type NotebookCellsSplice2 = [\n\tnumber /* start */,\n\tnumber /* delete count */,\n\tIMainCellDto[]\n];\n\nexport enum NotebookCellsChangeType {\n\tModelChange = 1,\n\tMove = 2,\n\tCellClearOutput = 3,\n\tCellsClearOutput = 4,\n\tChangeLanguage = 5,\n\tInitialize = 6,\n\tChangeCellMetadata = 7,\n\tOutput = 8,\n\tChangeCellContent = 9,\n\tChangeDocumentMetadata = 10,\n\tUnknown = 11\n}\n\nexport interface NotebookCellsInitializeEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Initialize;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellContentChangeEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellContent;\n}\n\nexport interface NotebookCellsModelChangedEvent<T> {\n\treadonly kind: NotebookCellsChangeType.ModelChange;\n\treadonly changes: NotebookCellTextModelSplice<T>[];\n}\n\nexport interface NotebookCellsModelMoveEvent<T> {\n\treadonly kind: NotebookCellsChangeType.Move;\n\treadonly index: number;\n\treadonly length: number;\n\treadonly newIdx: number;\n\treadonly cells: T[];\n}\n\nexport interface NotebookOutputChangedEvent {\n\treadonly kind: NotebookCellsChangeType.Output;\n\treadonly index: number;\n\treadonly outputs: IProcessedOutput[];\n}\n\nexport interface NotebookCellsChangeLanguageEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeLanguage;\n\treadonly index: number;\n\treadonly language: string;\n}\n\nexport interface NotebookCellsChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeCellMetadata;\n\treadonly index: number;\n\treadonly metadata: NotebookCellMetadata | undefined;\n}\n\nexport interface NotebookDocumentChangeMetadataEvent {\n\treadonly kind: NotebookCellsChangeType.ChangeDocumentMetadata;\n\treadonly metadata: NotebookDocumentMetadata | undefined;\n}\n\nexport interface NotebookDocumentUnknownChangeEvent {\n\treadonly kind: NotebookCellsChangeType.Unknown;\n}\n\nexport type NotebookRawContentEventDto = NotebookCellsInitializeEvent<IMainCellDto> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<IMainCellDto> | NotebookCellsModelMoveEvent<IMainCellDto> | NotebookOutputChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMetadataEvent | NotebookDocumentUnknownChangeEvent;\n\nexport type NotebookCellsChangedEventDto = {\n\treadonly rawEvents: NotebookRawContentEventDto[];\n\treadonly versionId: number;\n};\n\nexport type NotebookRawContentEvent = (NotebookCellsInitializeEvent<ICell> | NotebookDocumentChangeMetadataEvent | NotebookCellContentChangeEvent | NotebookCellsModelChangedEvent<ICell> | NotebookCellsModelMoveEvent<ICell> | NotebookOutputChangedEvent | NotebookCellsChangeLanguageEvent | NotebookCellsChangeMetadataEvent | NotebookDocumentUnknownChangeEvent) & { transient: boolean; };\nexport type NotebookTextModelChangedEvent = {\n\treadonly rawEvents: NotebookRawContentEvent[];\n\treadonly versionId: number;\n\treadonly synchronous: boolean;\n\treadonly endSelections?: number[];\n};\n\nexport const enum CellEditType {\n\tReplace = 1,\n\tOutput = 2,\n\tMetadata = 3,\n\tCellLanguage = 4,\n\tDocumentMetadata = 5,\n\tOutputsSplice = 6,\n\tMove = 7,\n\tUnknown = 8,\n\tCellContent = 9\n}\n\nexport interface ICellDto2 {\n\tsource: string;\n\tlanguage: string;\n\tcellKind: CellKind;\n\toutputs: IProcessedOutput[];\n\tmetadata?: NotebookCellMetadata;\n}\n\nexport interface ICellReplaceEdit {\n\teditType: CellEditType.Replace;\n\tindex: number;\n\tcount: number;\n\tcells: ICellDto2[];\n}\n\nexport interface ICellOutputEdit {\n\teditType: CellEditType.Output;\n\tindex: number;\n\toutputs: IProcessedOutput[];\n}\n\nexport interface ICellMetadataEdit {\n\teditType: CellEditType.Metadata;\n\tindex: number;\n\tmetadata: NotebookCellMetadata;\n}\n\n\nexport interface ICellLanguageEdit {\n\teditType: CellEditType.CellLanguage;\n\tindex: number;\n\tlanguage: string;\n}\n\nexport interface IDocumentMetadataEdit {\n\teditType: CellEditType.DocumentMetadata;\n\tmetadata: NotebookDocumentMetadata;\n}\n\nexport interface ICellOutputsSpliceEdit {\n\teditType: CellEditType.OutputsSplice;\n\tindex: number;\n\tsplices: NotebookCellOutputsSplice[];\n}\n\nexport interface ICellMoveEdit {\n\teditType: CellEditType.Move;\n\tindex: number;\n\tlength: number;\n\tnewIdx: number;\n}\n\nexport interface ICellContentEdit {\n\teditType: CellEditType.CellContent;\n\tindex: number;\n\trange: IRange | undefined;\n\ttext: string;\n}\n\nexport interface IDocumentUnknownEdit {\n\teditType: CellEditType.Unknown;\n}\n\nexport type ICellEditOperation = ICellReplaceEdit | ICellOutputEdit | ICellMetadataEdit | ICellLanguageEdit | IDocumentMetadataEdit | ICellOutputsSpliceEdit | ICellMoveEdit | ICellContentEdit | IDocumentUnknownEdit;\n\nexport interface INotebookEditData {\n\tdocumentVersionId: number;\n\tcellEdits: ICellEditOperation[];\n}\n\nexport interface NotebookDataDto {\n\treadonly cells: ICellDto2[];\n\treadonly languages: string[];\n\treadonly metadata: NotebookDocumentMetadata;\n}\n\nexport function getCellUndoRedoComparisonKey(uri: URI) {\n\tconst data = CellUri.parse(uri);\n\tif (!data) {\n\t\treturn uri.toString();\n\t}\n\n\treturn data.notebook.toString();\n}\n\n\nexport namespace CellUri {\n\n\texport const scheme = Schemas.vscodeNotebookCell;\n\n\tconst _regex = /^\\d{7,}/;\n\n\texport function generate(notebook: URI, handle: number): URI {\n\t\treturn notebook.with({\n\t\t\tscheme,\n\t\t\tfragment: `${handle.toString().padStart(7, '0')}${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function generateCellMetadataUri(notebook: URI, handle: number): URI {\n\t\treturn notebook.with({\n\t\t\tscheme: Schemas.vscode,\n\t\t\tauthority: 'vscode-notebook-cell-metadata',\n\t\t\tfragment: `${handle.toString().padStart(7, '0')}${notebook.scheme !== Schemas.file ? notebook.scheme : ''}`\n\t\t});\n\t}\n\n\texport function parse(cell: URI): { notebook: URI, handle: number } | undefined {\n\t\tif (cell.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst match = _regex.exec(cell.fragment);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst handle = Number(match[0]);\n\t\treturn {\n\t\t\thandle,\n\t\t\tnotebook: cell.with({\n\t\t\t\tscheme: cell.fragment.substr(match[0].length) || Schemas.file,\n\t\t\t\tfragment: null\n\t\t\t})\n\t\t};\n\t}\n}\n\nexport function mimeTypeSupportedByCore(mimeType: string) {\n\tif ([\n\t\t'application/json',\n\t\t'application/javascript',\n\t\t'text/html',\n\t\t'image/svg+xml',\n\t\t'text/markdown',\n\t\t'image/png',\n\t\t'image/jpeg',\n\t\t'text/plain',\n\t\t'text/x-javascript'\n\t].indexOf(mimeType) > -1) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n// if (isWindows) {\n// \tvalue = value.replace(/\\//g, '\\\\');\n// }\n\nfunction matchGlobUniversal(pattern: string, path: string) {\n\tif (isWindows) {\n\t\tpattern = pattern.replace(/\\//g, '\\\\');\n\t\tpath = path.replace(/\\//g, '\\\\');\n\t}\n\n\treturn glob.match(pattern, path);\n}\n\n\nfunction getMimeTypeOrder(mimeType: string, userDisplayOrder: string[], documentDisplayOrder: string[], defaultOrder: string[]) {\n\tlet order = 0;\n\tfor (let i = 0; i < userDisplayOrder.length; i++) {\n\t\tif (matchGlobUniversal(userDisplayOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\t\torder++;\n\t}\n\n\tfor (let i = 0; i < documentDisplayOrder.length; i++) {\n\t\tif (matchGlobUniversal(documentDisplayOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\n\t\torder++;\n\t}\n\n\tfor (let i = 0; i < defaultOrder.length; i++) {\n\t\tif (matchGlobUniversal(defaultOrder[i], mimeType)) {\n\t\t\treturn order;\n\t\t}\n\n\t\torder++;\n\t}\n\n\treturn order;\n}\n\nexport function sortMimeTypes(mimeTypes: string[], userDisplayOrder: string[], documentDisplayOrder: string[], defaultOrder: string[]) {\n\tconst sorted = mimeTypes.sort((a, b) => {\n\t\treturn getMimeTypeOrder(a, userDisplayOrder, documentDisplayOrder, defaultOrder) - getMimeTypeOrder(b, userDisplayOrder, documentDisplayOrder, defaultOrder);\n\t});\n\n\treturn sorted;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\nexport function diff<T>(before: T[], after: T[], contains: (a: T) => boolean, equal: (a: T, b: T) => boolean = (a: T, b: T) => a === b): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\n\t\tif (equal(beforeElement, afterElement)) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (contains(afterElement)) {\n\t\t\t// `afterElement` exists before, which means some elements before `afterElement` are deleted\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else {\n\t\t\t// `afterElement` added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport interface ICellEditorViewState {\n\tselections: editorCommon.ICursorState[];\n}\n\nexport const NOTEBOOK_EDITOR_CURSOR_BOUNDARY = new RawContextKey<'none' | 'top' | 'bottom' | 'both'>('notebookEditorCursorAtBoundary', 'none');\n\n\nexport interface INotebookEditorModel extends IEditorModel {\n\treadonly onDidChangeDirty: Event<void>;\n\treadonly resource: URI;\n\treadonly viewType: string;\n\treadonly notebook: NotebookTextModel;\n\treadonly lastResolvedFileStat: IFileStatWithMetadata | undefined;\n\tisDirty(): boolean;\n\tisUntitled(): boolean;\n\tsave(): Promise<boolean>;\n\tsaveAs(target: URI): Promise<boolean>;\n\trevert(options?: IRevertOptions | undefined): Promise<void>;\n}\n\nexport interface INotebookDiffEditorModel extends IEditorModel {\n\toriginal: INotebookEditorModel;\n\tmodified: INotebookEditorModel;\n\tresolveOriginalFromDisk(): Promise<void>;\n\tresolveModifiedFromDisk(): Promise<void>;\n}\n\nexport interface INotebookTextModelBackup {\n\tmetadata: NotebookDocumentMetadata;\n\tlanguages: string[];\n\tcells: ICellDto2[]\n}\n\nexport interface NotebookDocumentBackupData {\n\treadonly viewType: string;\n\treadonly name: string;\n\treadonly backupId?: string;\n\treadonly mtime?: number;\n}\n\n/**\n * [start, end]\n */\nexport interface ICellRange {\n\t/**\n\t * zero based index\n\t */\n\tstart: number;\n\n\t/**\n\t * zero based index\n\t */\n\tend: number;\n}\n\nexport interface IEditor extends editorCommon.ICompositeCodeEditor {\n\treadonly onDidChangeModel: Event<NotebookTextModel | undefined>;\n\treadonly onDidFocusEditorWidget: Event<void>;\n\treadonly onDidChangeVisibleRanges: Event<void>;\n\treadonly onDidChangeSelection: Event<void>;\n\tgetSelectionHandles(): number[];\n\tisNotebookEditor: boolean;\n\tvisibleRanges: ICellRange[];\n\turi?: URI;\n\ttextModel?: NotebookTextModel;\n\tgetId(): string;\n\thasFocus(): boolean;\n\thasModel(): boolean;\n}\n\nexport enum NotebookEditorPriority {\n\tdefault = 'default',\n\toption = 'option',\n}\n\nexport interface INotebookSearchOptions {\n\tregex?: boolean;\n\twholeWord?: boolean;\n\tcaseSensitive?: boolean\n\twordSeparators?: string;\n}\n\nexport interface INotebookExclusiveDocumentFilter {\n\tinclude?: string | glob.IRelativePattern;\n\texclude?: string | glob.IRelativePattern;\n}\n\nexport interface INotebookDocumentFilter {\n\tviewType?: string | string[];\n\tfilenamePattern?: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter;\n}\n\n//TODO@rebornix test\n\nexport function isDocumentExcludePattern(filenamePattern: string | glob.IRelativePattern | INotebookExclusiveDocumentFilter): filenamePattern is { include: string | glob.IRelativePattern; exclude: string | glob.IRelativePattern; } {\n\tconst arg = filenamePattern as INotebookExclusiveDocumentFilter;\n\n\tif ((typeof arg.include === 'string' || glob.isRelativePattern(arg.include))\n\t\t&& (typeof arg.exclude === 'string' || glob.isRelativePattern(arg.exclude))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\nexport function notebookDocumentFilterMatch(filter: INotebookDocumentFilter, viewType: string, resource: URI): boolean {\n\tif (Array.isArray(filter.viewType) && filter.viewType.indexOf(viewType) >= 0) {\n\t\treturn true;\n\t}\n\n\tif (filter.viewType === viewType) {\n\t\treturn true;\n\t}\n\n\tif (filter.filenamePattern) {\n\t\tlet filenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.include : (filter.filenamePattern as string | glob.IRelativePattern);\n\t\tlet excludeFilenamePattern = isDocumentExcludePattern(filter.filenamePattern) ? filter.filenamePattern.exclude : undefined;\n\n\t\tif (glob.match(filenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\tif (excludeFilenamePattern) {\n\t\t\t\tif (glob.match(excludeFilenamePattern, basename(resource.fsPath).toLowerCase())) {\n\t\t\t\t\t// should exclude\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport interface INotebookKernelInfoDto2 {\n\tid: string;\n\tlabel: string;\n\textension: ExtensionIdentifier;\n\textensionLocation: URI;\n\tproviderHandle?: number;\n\tdescription?: string;\n\tdetail?: string;\n\tisPreferred?: boolean;\n\tpreloads?: UriComponents[];\n}\n\nexport interface INotebookKernelInfo2 extends INotebookKernelInfoDto2 {\n\tresolve(uri: URI, editorId: string, token: CancellationToken): Promise<void>;\n\texecuteNotebookCell(uri: URI, handle: number | undefined): Promise<void>;\n\tcancelNotebookCell(uri: URI, handle: number | undefined): Promise<void>;\n}\n\nexport interface INotebookKernelProvider {\n\tproviderExtensionId: string;\n\tproviderDescription?: string;\n\tselector: INotebookDocumentFilter;\n\tonDidChangeKernels: Event<URI | undefined>;\n\tprovideKernels(uri: URI, token: CancellationToken): Promise<INotebookKernelInfoDto2[]>;\n\tresolveKernel(editorId: string, uri: UriComponents, kernelId: string, token: CancellationToken): Promise<void>;\n\texecuteNotebook(uri: URI, kernelId: string, handle: number | undefined): Promise<void>;\n\tcancelNotebook(uri: URI, kernelId: string, handle: number | undefined): Promise<void>;\n}\n\nexport class CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: NotebookTextModel) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getHashValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n}\n\nexport interface INotebookDiffResult {\n\tcellsDiff: IDiffResult,\n\tlinesDiff?: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: editorCommon.ILineChange[] }[];\n}\n\nexport interface INotebookCellStatusBarEntry {\n\treadonly cellResource: URI;\n\treadonly alignment: CellStatusbarAlignment;\n\treadonly priority?: number;\n\treadonly text: string;\n\treadonly tooltip: string | undefined;\n\treadonly command: string | Command | undefined;\n\treadonly accessibilityInformation?: IAccessibilityInformation;\n\treadonly visible: boolean;\n}\n\nexport const DisplayOrderKey = 'notebook.displayOrder';\nexport const CellToolbarLocKey = 'notebook.cellToolbarLocation';\nexport const ShowCellStatusBarKey = 'notebook.showCellStatusBar';\nexport const NotebookTextDiffEditorPreview = 'notebook.diff.enablePreview';\n\nexport const enum CellStatusbarAlignment {\n\tLEFT,\n\tRIGHT\n}\n\nexport interface INotebookDecorationRenderOptions {\n\tbackgroundColor?: string | ThemeColor;\n\tborderColor?: string | ThemeColor;\n\ttop?: editorCommon.IContentDecorationRenderOptions;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ISequence, LcsDiff } from 'vs/base/common/diff/diff';\nimport { hash } from 'vs/base/common/hash';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IRequestHandler } from 'vs/base/common/worker/simpleWorker';\nimport * as model from 'vs/editor/common/model';\nimport { PieceTreeTextBufferBuilder } from 'vs/editor/common/model/pieceTreeTextBuffer/pieceTreeTextBufferBuilder';\nimport { CellKind, ICellDto2, IMainCellDto, INotebookDiffResult, IProcessedOutput, NotebookCellMetadata, NotebookCellsChangedEventDto, NotebookCellsChangeType, NotebookCellsSplice2, NotebookDataDto, NotebookDocumentMetadata } from 'vs/workbench/contrib/notebook/common/notebookCommon';\nimport { Range } from 'vs/editor/common/core/range';\nimport { EditorWorkerHost } from 'vs/workbench/contrib/notebook/common/services/notebookWorkerServiceImpl';\n\nclass MirrorCell {\n\tprivate _textBuffer!: model.IReadonlyTextBuffer;\n\n\tget textBuffer() {\n\t\tif (this._textBuffer) {\n\t\t\treturn this._textBuffer;\n\t\t}\n\n\t\tconst builder = new PieceTreeTextBufferBuilder();\n\t\tbuilder.acceptChunk(Array.isArray(this._source) ? this._source.join('\\n') : this._source);\n\t\tconst bufferFactory = builder.finish(true);\n\t\tthis._textBuffer = bufferFactory.create(model.DefaultEndOfLine.LF);\n\n\t\treturn this._textBuffer;\n\t}\n\n\tprivate _primaryKey?: number | null = null;\n\tprimaryKey(): number | null {\n\t\tif (this._primaryKey === undefined) {\n\t\t\tthis._primaryKey = hash(this.getValue());\n\t\t}\n\n\t\treturn this._primaryKey;\n\t}\n\n\tprivate _hash: number | null = null;\n\n\tconstructor(\n\t\treadonly handle: number,\n\t\tprivate _source: string | string[],\n\t\tpublic language: string,\n\t\tpublic cellKind: CellKind,\n\t\tpublic outputs: IProcessedOutput[],\n\t\tpublic metadata?: NotebookCellMetadata\n\n\t) { }\n\n\tgetFullModelRange() {\n\t\tconst lineCount = this.textBuffer.getLineCount();\n\t\treturn new Range(1, 1, lineCount, this.textBuffer.getLineLength(lineCount) + 1);\n\t}\n\n\tgetValue(): string {\n\t\tconst fullRange = this.getFullModelRange();\n\t\tconst eol = this.textBuffer.getEOL();\n\t\tif (eol === '\\n') {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.LF);\n\t\t} else {\n\t\t\treturn this.textBuffer.getValueInRange(fullRange, model.EndOfLinePreference.CRLF);\n\t\t}\n\t}\n\n\tgetComparisonValue(): number {\n\t\tif (this._primaryKey !== null) {\n\t\t\treturn this._primaryKey!;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.getValue()), this.metadata]);\n\t\treturn this._hash;\n\t}\n\n\tgetHashValue() {\n\t\tif (this._hash !== null) {\n\t\t\treturn this._hash;\n\t\t}\n\n\t\tthis._hash = hash([hash(this.getValue()), this.language, this.metadata]);\n\t\treturn this._hash;\n\t}\n}\n\nclass MirrorNotebookDocument {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\tpublic cells: MirrorCell[],\n\t\tpublic languages: string[],\n\t\tpublic metadata: NotebookDocumentMetadata,\n\t) {\n\t}\n\n\tacceptModelChanged(event: NotebookCellsChangedEventDto) {\n\t\t// note that the cell content change is not applied to the MirrorCell\n\t\t// but it's fine as if a cell content is modified after the first diff, its position will not change any more\n\t\t// TODO@rebornix, but it might lead to interesting bugs in the future.\n\t\tevent.rawEvents.forEach(e => {\n\t\t\tif (e.kind === NotebookCellsChangeType.ModelChange) {\n\t\t\t\tthis._spliceNotebookCells(e.changes);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Move) {\n\t\t\t\tconst cells = this.cells.splice(e.index, 1);\n\t\t\t\tthis.cells.splice(e.newIdx, 0, ...cells);\n\t\t\t} else if (e.kind === NotebookCellsChangeType.Output) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.outputs = e.outputs;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeLanguage) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.language = e.language;\n\t\t\t} else if (e.kind === NotebookCellsChangeType.ChangeCellMetadata) {\n\t\t\t\tconst cell = this.cells[e.index];\n\t\t\t\tcell.metadata = e.metadata;\n\t\t\t}\n\t\t});\n\t}\n\n\t_spliceNotebookCells(splices: NotebookCellsSplice2[]) {\n\t\tsplices.reverse().forEach(splice => {\n\t\t\tconst cellDtos = splice[2];\n\t\t\tconst newCells = cellDtos.map(cell => {\n\t\t\t\treturn new MirrorCell(\n\t\t\t\t\t(cell as unknown as IMainCellDto).handle,\n\t\t\t\t\tcell.source,\n\t\t\t\t\tcell.language,\n\t\t\t\t\tcell.cellKind,\n\t\t\t\t\tcell.outputs,\n\t\t\t\t\tcell.metadata\n\t\t\t\t);\n\t\t\t});\n\n\t\t\tthis.cells.splice(splice[0], splice[1], ...newCells);\n\t\t});\n\t}\n}\n\nexport class CellSequence implements ISequence {\n\n\tconstructor(readonly textModel: MirrorNotebookDocument) {\n\t}\n\n\tgetElements(): string[] | number[] | Int32Array {\n\t\tconst hashValue = new Int32Array(this.textModel.cells.length);\n\t\tfor (let i = 0; i < this.textModel.cells.length; i++) {\n\t\t\thashValue[i] = this.textModel.cells[i].getComparisonValue();\n\t\t}\n\n\t\treturn hashValue;\n\t}\n\n\tgetCellHash(cell: ICellDto2) {\n\t\tconst source = Array.isArray(cell.source) ? cell.source.join('\\n') : cell.source;\n\t\tconst hashVal = hash([hash(source), cell.metadata]);\n\t\treturn hashVal;\n\t}\n}\n\nexport class NotebookEditorSimpleWorker implements IRequestHandler, IDisposable {\n\t_requestHandlerBrand: any;\n\n\tprivate _models: { [uri: string]: MirrorNotebookDocument; };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\tdispose(): void {\n\t}\n\n\tpublic acceptNewModel(uri: string, data: NotebookDataDto): void {\n\t\tthis._models[uri] = new MirrorNotebookDocument(URI.parse(uri), data.cells.map(dto => new MirrorCell(\n\t\t\t(dto as unknown as IMainCellDto).handle,\n\t\t\tdto.source,\n\t\t\tdto.language,\n\t\t\tdto.cellKind,\n\t\t\tdto.outputs,\n\t\t\tdto.metadata\n\t\t)), data.languages, data.metadata);\n\t}\n\n\tpublic acceptModelChanged(strURL: string, event: NotebookCellsChangedEventDto) {\n\t\tconst model = this._models[strURL];\n\t\tif (model) {\n\t\t\tmodel.acceptModelChanged(event);\n\t\t}\n\t}\n\n\tpublic acceptRemovedModel(strURL: string): void {\n\t\tif (!this._models[strURL]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[strURL];\n\t}\n\n\tcomputeDiff(originalUrl: string, modifiedUrl: string): INotebookDiffResult {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\n\t\tconst diff = new LcsDiff(new CellSequence(original), new CellSequence(modified));\n\t\tconst diffResult = diff.ComputeDiff(false);\n\n\t\t/* let cellLineChanges: { originalCellhandle: number, modifiedCellhandle: number, lineChanges: editorCommon.ILineChange[] }[] = [];\n\n\t\tdiffResult.changes.forEach(change => {\n\t\t\tif (change.modifiedLength === 0) {\n\t\t\t\t// deletion ...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (change.originalLength === 0) {\n\t\t\t\t// insertion\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (let i = 0, len = Math.min(change.modifiedLength, change.originalLength); i < len; i++) {\n\t\t\t\tlet originalIndex = change.originalStart + i;\n\t\t\t\tlet modifiedIndex = change.modifiedStart + i;\n\n\t\t\t\tconst originalCell = original.cells[originalIndex];\n\t\t\t\tconst modifiedCell = modified.cells[modifiedIndex];\n\n\t\t\t\tif (originalCell.getValue() !== modifiedCell.getValue()) {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} content change`);\n\t\t\t\t\tconst originalLines = originalCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst modifiedLines = modifiedCell.textBuffer.getLinesContent();\n\t\t\t\t\tconst diffComputer = new DiffComputer(originalLines, modifiedLines, {\n\t\t\t\t\t\tshouldComputeCharChanges: true,\n\t\t\t\t\t\tshouldPostProcessCharChanges: true,\n\t\t\t\t\t\tshouldIgnoreTrimWhitespace: false,\n\t\t\t\t\t\tshouldMakePrettyDiff: true,\n\t\t\t\t\t\tmaxComputationTime: 5000\n\t\t\t\t\t});\n\n\t\t\t\t\tconst lineChanges = diffComputer.computeDiff().changes;\n\n\t\t\t\t\tcellLineChanges.push({\n\t\t\t\t\t\toriginalCellhandle: originalCell.handle,\n\t\t\t\t\t\tmodifiedCellhandle: modifiedCell.handle,\n\t\t\t\t\t\tlineChanges\n\t\t\t\t\t});\n\n\t\t\t\t\t// console.log(lineDecorations);\n\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(`original cell ${originalIndex} metadata change`);\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n */\n\t\treturn {\n\t\t\tcellsDiff: diffResult,\n\t\t\t// linesDiff: cellLineChanges\n\t\t};\n\t}\n\n\tprotected _getModel(uri: string): MirrorNotebookDocument {\n\t\treturn this._models[uri];\n\t}\n}\n\n/**\n * Called on the worker side\n * @internal\n */\nexport function create(host: EditorWorkerHost): IRequestHandler {\n\treturn new NotebookEditorSimpleWorker();\n}\n\n"]}