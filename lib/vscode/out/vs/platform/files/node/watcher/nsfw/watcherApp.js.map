{"version":3,"sources":["vs/platform/files/node/watcher/nsfw/fake","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/errors.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/arrays.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/functional.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/iterator.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/lifecycle.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/linkedList.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/event.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/cancellation.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/async.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/platform.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/process.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/path.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/stream.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/strings.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/buffer.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/types.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/objects.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/uri.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/console.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/marshalling.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/network.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/map.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/glob.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/normalization.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/common/uuid.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/node/decoder.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/node/pfs.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/node/extpath.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/common/ipc.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/node/processes.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/platform/instantiation/common/instantiation.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/platform/files/common/files.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/watcher.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/nsfwWatcherService.ts","vs/platform/files/node/watcher/nsfw/file:/github/workspace/lib/vscode/src/vs/platform/files/node/watcher/nsfw/watcherApp.ts"],"names":["__m","__M","deps","result","i","len","length","ErrorHandler","[object Object]","this","listeners","unexpectedErrorHandler","e","setTimeout","stack","Error","message","listener","push","_removeListener","forEach","splice","indexOf","newUnexpectedErrorHandler","emit","exports","errorHandler","setUnexpectedErrorHandler","onUnexpectedError","isPromiseCanceledError","onUnexpectedExternalError","transformErrorForSerialization","error","name","$isError","stacktrace","canceledName","canceled","illegalArgument","illegalState","readonly","disposed","what","getErrorMessage","err","split","String","NotImplementedError","super","NotSupportedError","findFirstInSorted","array","p","low","high","mid","Math","floor","mergeSort","data","compare","_sort","a","lo","hi","aux","leftIdx","rightIdx","_merge","sortedDiff","before","after","pushSplice","start","deleteCount","toInsert","latest","beforeIdx","afterIdx","slice","beforeElement","afterElement","n","topStep","m","element","pop","j","remove","index","tail","tail2","arr","equals","one","other","itemEquals","b","binarySearch","key","comparator","comp","groupBy","currentGroup","undefined","delta","splices","removed","added","top","sort","topAsync","batch","token","Promise","resolve","reject","o","min","isCancellationRequested","errors_1","then","coalesce","filter","coalesceInPlace","to","move","from","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","position","seen","Object","create","elem","distinctES6","Set","has","add","uniqueFilter","lastIndex","fn","firstOrDefault","notFoundValue","commonPrefixLength","flatten","concat","range","arg","indexer","mapper","reduce","r","t","insert","arrayInsert","target","insertIndex","insertArr","shuffle","_seed","rand","seed","x","sin","random","temp","pushToStart","value","unshift","pushToEnd","mapArrayOrNot","items","map","asArray","getRandomElement","once","_this","didCall","apply","arguments","Iterable","is","thing","Symbol","iterator","_empty","freeze","empty","single","iterable","first","next","some","predicate","iterables","consume","atMost","Number","POSITIVE_INFINITY","consumed","done","TRACK_DISPOSABLES","__is_disposable_tracked__","markTracked","Disposable","None","_a","trackDisposable","console","log","MultiDisposeError","errors","join","dispose","iterator_1","d","isDisposable","combinedDisposable","disposables","toDisposable","self","DisposableStore","_toDispose","_isDisposed","clear","values","DISABLE_DISPOSED_WARNING","warn","_store","MutableDisposable","_value","ReferenceCollection","references","Map","args","reference","get","counter","object","createReferencedObject","set","functional_1","destroyReferencedObject","delete","ImmortalReference","Node","Undefined","prev","LinkedList","_first","_last","_size","size","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","node","anchor","Event","event","thisArgs","didFire","call","snapshot","each","merge","initial","output","emitter","Emitter","fire","debounce","delay","leading","leakWarningThreshold","subscription","handle","numDebouncedCalls","cur","clearTimeout","_output","latch","cache","firstCall","shouldEmit","lifecycle_1","signal","any","events","stopwatch","Date","getTime","_","buffer","nextTick","_buffer","flush","ChainableEvent","chain","fromNodeEventEmitter","eventName","id","onFirstListenerAdd","on","onLastListenerRemove","removeListener","fromDOMEventEmitter","addEventListener","removeEventListener","fromPromise","promise","toPromise","c","_globalLeakWarningThreshold","setGlobalLeakWarningThreshold","oldValue","LeakageMonitor","customThreshold","toString","_warnCountdown","_stacks","listenerCount","threshold","count","topStack","topCount","options","_disposed","_options","_leakageMon","_event","_listeners","linkedList_1","firstListener","isEmpty","removeMonitor","onFirstListenerDidAdd","onListenerDidAdd","check","_noop","_deliveryQueue","shift","PauseableEmitter","_isPaused","_eventQueue","_mergeFn","toArray","AsyncEmitter","promiseJoin","_asyncDeliveryQueue","thenables","assign","waitUntil","isFrozen","all","catch","EventMultiplexer","hasListeners","hook","unhook","idx","EventBufferer","buffers","Relay","listening","inputEvent","inputEventListener","input","shortcutEvent","callback","context","bind","CancellationToken","isCancellationToken","Cancelled","MutableToken","onCancellationRequested","event_1","_isCancelled","_emitter","CancellationTokenSource","parent","_token","_parentListener","cancel","isThenable","createCancelablePromise","source","cancellation_1","thenable","onfinally","finally","raceCancellation","defaultValue","race","raceCancellablePromises","async","cancellablePromises","resolvedPromiseIndex","promises","cancellablePromise","raceTimeout","timeout","onTimeout","promiseResolve","timer","asPromise","item","Throttler","activePromise","queuedPromise","queuedPromiseFactory","promiseFactory","onComplete","queue","Sequencer","current","promiseTask","SequencerByKey","promiseMap","newPromise","Delayer","defaultDelay","completionPromise","doResolve","doReject","task","cancelTimeout","ThrottledDelayer","delayer","throttler","trigger","isTriggered","millis","Barrier","_isOpen","_promise","_completePromise","disposableTimeout","handler","ignoreErrors","sequence","promiseFactories","results","thenHandler","shouldStop","loop","factory","Limiter","maxDegreeOfParalellism","outstandingPromises","runningPromises","_onFinished","onFinished","iLimitedTask","Queue","ResourceQueue","queues","resource","TimeoutTimer","runner","setIfNotSet","IntervalTimer","clearInterval","interval","setInterval","RunOnceScheduler","timeoutToken","timeoutHandler","isScheduled","doRun","RunOnceWorker","units","unit","schedule","requestIdleCallback","cancelIdleCallback","dummyIdle","didTimeout","timeRemaining","runWhenIdle","IdleValue","executor","_didRun","_executor","_error","_handle","retry","retries","lastError","TaskSequentializer","taskId","_pending","pending","onCancel","donePending","triggerNext","_next","run","promiseReject","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","_language","_translationsConfigFile","_userAgent","_globals","global","nodeProcess","process","vscode","isElectronRenderer","versions","electron","type","navigator","platform","rawNlsConfig","env","nlsConfig","JSON","parse","resolved","availableLanguages","locale","userAgent","maxTouchPoints","language","el","document","getElementById","getAttribute","Platform","PlatformToString","_platform","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","isRootUser","getuid","Language","isDefaultVariant","isDefault","translationsConfigFile","globals","setImmediate","postMessage","importScripts","vscodeSetImmediateId","candidate","lastId","myId","OperatingSystem","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","safeProcess","platform_1","cwd","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","ErrorInvalidArgType","expected","actual","determiner","replace","msg","code","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","paths","joined","needsReplace","slashCount","firstLen","normalize","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","resolvedPath","offset","end","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","toNamespacedPath","hasRoot","relative","dirname","basename","extname","isReadableStream","pause","resume","destroy","every","newWriteableStream","reducer","WriteableStreamImpl","isReadableBufferedStream","stream","ended","state","flowing","destroyed","pendingWritePromises","flowData","flowErrors","flowEnd","highWaterMark","write","fullDataBuffer","pendingWritePromise","consumeReadable","readable","chunks","chunk","read","peekReadable","maxChunks","lastReadChunk","consumeStream","peekStream","streamListeners","dataListener","errorListener","endListener","toStream","toReadable","transform","transformer","isFalsyOrWhitespace","str","trim","pad","l","char","reverse","_formatRegexp","escapeRegExpCharacters","ltrim","haystack","needle","needleLen","substring","rtrim","haystackLen","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareSubstringIgnoreCase","diff","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","doEqualsIgnoreCase","stopAt","abs","fromCharCode","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","_getCharContainingOffset","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","initialGraphemeBreakType","getGraphemeBreakType","graphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","endOffset","prevCodePoint","prevGraphemeBreakType","match","group","parseInt","isNaN","escape","html","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","exec","regExpContainsBackreference","regexpValue","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareIgnoreCase","equalsIgnoreCase","startsWithIgnoreCase","candidateLength","commonSuffixLength","aLastIndex","bLastIndex","nextCharLength","prevCharLength","getCharContainingOffset","encodeUTF8","strLen","neededSize","strOffset","codePoint","arrOffset","decodeUTF8","byteLength","v0","uPrime","w1","w2","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isFullWidthCharacter","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","containsFullWidthCharacter","isEmojiImprecise","lcut","text","re","EL","COLOR_START","COLOR_END","startsWithUTF8BOM","breakTypeA","breakTypeB","removeAnsiEscapeCodes","UTF8_BOM_CHARACTER","stripUTF8BOM","substr","fuzzyContains","query","queryLen","targetLower","containsUppercaseCharacter","ignoreEscapedChars","uppercaseFirstLetter","toUpperCase","getNLines","singleLetterHash","GraphemeBreakType","_data","_INSTANCE","nodeCount","nodeIndex","hasBuffer","Buffer","hasTextEncoder","TextEncoder","hasTextDecoder","TextDecoder","textEncoder","textDecoder","VSBuffer","allocUnsafe","isBuffer","byteOffset","encode","strings","totalLength","alloc","decode","subarray","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE","readUInt8","writeUInt8","destination","streamToBuffer","streams","readUInt16LE","writeUInt16LE","readableToBuffer","bufferToReadable","bufferedStreamToBuffer","bufferedStream","bufferToStream","streamToBufferReadableStream","fromString","wrap","newWriteableBufferStream","isString","isObject","isUndefined","isUndefinedOrNull","isStringArray","isNumber","isBoolean","isDefined","assertType","condition","assertIsDefined","assertAllDefined","hasOwnProperty","prototype","isFunction","validateConstraint","constraint","constructor","getAllPropertyNames","proto","getPrototypeOf","getOwnPropertyNames","isEmptyObject","areFunctions","objects","validateConstraints","constraints","getAllMethodNames","methods","prop","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","withUndefinedAsNull","NotImplementedProxy","Proxy","toSlashes","osPath","path_1","getRoot","firstLetter","pos","isWindowsDriveLetter","isUNC","WINDOWS_INVALID_FILE_CHARS","UNIX_INVALID_FILE_CHARS","WINDOWS_FORBIDDEN_NAMES","char0","isValidBasename","isWindowsOS","invalidFileChars","isEqual","pathA","pathB","identityEquals","strings_1","isEqualOrParent","parentCandidate","sepOffset","sanitizeFilePath","endsWith","isRootOrDriveLetter","pathNormalized","indexOfPath","parseLineAndColumnAware","rawPath","segments","line","column","segment","segmentAsNumber","types_1","deepClone","keys","deepFreeze","_hasOwnProperty","oneKeys","otherKeys","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","mixin","overwrite","safeStringify","stringify","getOrDefault","k","baseValue","targetValue","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","URI","schemeOrData","authority","fragment","_strict","scheme","_schemeFix","_referenceResolution","_validateUri","fsPath","with","uriToFsPath","change","Uri","percentDecode","components","uri","pathFragment","newPath","file","skipEncoding","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","58","47","63","35","91","93","64","33","36","38","39","40","41","42","43","44","59","61","32","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","_rEncodedAsHex","decodeURIComponentGraceful","decodeURIComponent","entry","parsedArguments","stackArgument","__$stack","findFirstFrame","newlineIndex","color","isRemoteConsoleLog","severity","getFirstFrame","arg0","topFrame","matches","uri_1","label","isOneStringArg","consoleArgs","replacer","flags","revive","depth","buffer_1","Schemas","inMemory","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeSettings","webviewPanel","vscodeWebview","vscodeWebviewResource","extension","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","delegate","host","port","connectionToken","window","location","pathname","FileAccess","uriOrModule","moduleIdToUrl","toUri","rewrite","isUri","toUrl","getOrSet","mapToString","entries","setToString","StringIterator","_pos","PathIterator","_splitOnBackslash","_caseSensitive","_from","_to","justSeps","ch","UriIteratorState","UriIterator","_states","_stateIdx","caseSensitive","network_1","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","left","right","TernarySearchTree","_iter","_root","iter","val","oldElement","_nodeIterator","_forEach","ResourceMap","mapOrKeyFn","toKey","toStringTag","defaultToKey","clb","thisArg","tuple","Touch","LinkedMap","_map","_head","_tail","_state","touch","previous","addItemLast","addItemFirst","removeItem","callbackfn","newSize","currentSize","LRUCache","limit","ratio","_limit","_ratio","max","checkTrim","trimOld","round","getEmptyExpression","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","splitChar","inBraces","inBrackets","curVal","T1","T2","T3","T3_2","T4","T5","CACHE","map_1","FALSE","NULL","parsePattern","arg1","patternKey","trimForExclusions","parsedPattern","wrapRelativePattern","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","withBasenames","find","allPaths","trivia3","trivia4and5","regExp","parseRegExp","regEx","s","previousSegmentWasGlobStar","braceVal","bracketVal","braceRegExp","toRegExp","arg2","extpath","matchPathEnds","nativePath","nativePathEnd","isRelativePattern","resultPattern","expression","when","hasSibling","matched","async_1","requiresSiblings","parseExpressionPattern","resultExpression","parsedExpression","listToMap","list","rp","basenamePatterns","aggregate","aggregatedPatterns","hasSiblingPromiseFn","siblingsFn","siblings","hasSiblingFn","getBasenameTerms","patternOrExpression","getPathTerms","canNormalize","nfcCache","normalizeNFC","nfdCache","normalizeNFD","nonAsciiCharactersPattern","form","normalizedCache","cached","removeAccents","regex","_UUIDPattern","isUUID","_hex","padStart","_fillRandomValues","bucket","generateUuid","LineDecoder","encoding","stringDecoder","sd","StringDecoder","remaining","lastChar","RimRafMode","rimraf","mode","UNLINK","extpath_1","rimrafUnlink","pathInTemp","os","tmpdir","uuid_1","rename","rimrafMove","stat","lstat","isDirectory","isSymbolicLink","chmod","unlink","children","readdir","child","util_1","promisify","fs","rmdir","handleDirectoryChildren","readdirSync","normalization_1","oldPath","mkdirp","mkdir","recursive","MAX_FILE_SIZE","arch","MAX_HEAP_SIZE","rimrafSync","lstatSync","chmodSync","unlinkSync","rmdirSync","readdirWithFileTypes","withFileTypes","exists","statLink","lstats","symbolicLink","dangling","renameIgnoreError","symlink","truncate","readFile","writeFilePathQueues","writeFile","queueKey","existingWriteFileQueue","writeFileQueue","onFinish","ensureWriteFileQueue","toQueueKey","ensuredOptions","ensureWriteOptions","canFlush","flag","open","openError","fd","writeError","close","fdatasync","syncError","closeError","doWriteFileAndFlush","dirExists","copy","copiedSourcesIn","copiedSources","fileStat","reader","createReadStream","writer","createWriteStream","finished","finish","pipe","doCopyFile","files","writeFileSync","openSync","fdatasyncSync","closeSync","readDirsInDir","dirPath","directories","fileExists","isFile","whenDeleted","running","updateMtime","futimes","atime","MOVE","normalizePath","realcaseSync","found","pfs_1","prefix","ix","realpath","normalizedPath","access","constants","R_OK","realpathSync","accessSync","State","DataType","requestTypeToStr","responseTypeToStr","RequestType","ResponseType","BufferReader","bytes","BufferWriter","createSizeBuffer","readSizeBuffer","createOneByteBuffer","BufferPresets","serialize","deserialize","ChannelServer","protocol","ctx","logger","timeoutDelay","channels","activeRequests","pendingRequests","protocolListener","onMessage","onRawMessage","sendResponse","channelName","channel","flushPendingRequests","response","msgLength","send","logOutgoing","header","body","sendBuffer","logIncoming","onPromise","onEventListen","disposeActiveRequest","request","collectPendingRequest","cancellationTokenSource","disposable","listen","timeoutTimer","requests","RequestInitiator","ChannelClient","Uninitialized","handlers","lastRequestId","_onDidInitialize","onDidInitialize","onBuffer","that","cancellationToken","requestPromise","requestEvent","doRequest","sendRequest","uninitializedPromise","Idle","whenInitialized","cancellationTokenListener","onResponse","IPCServer","onDidClientConnect","_connections","_onDidAddConnection","onDidAddConnection","_onDidRemoveConnection","onDidRemoveConnection","onDidClientDisconnect","onFirstMessage","channelServer","channelClient","registerChannel","connection","connections","routerOrClientFilter","connectionPromise","arrays_1","routeCall","getDelayedChannel","getChannel","getMulticastEvent","routeEvent","clientFilter","eventMultiplexer","relay","IPCClient","ipcLogger","getNextTickChannel","didTick","propertyIsEvent","StaticRouter","hub","route","createChannelReceiver","service","disableMarshalling","mapEventNameToEvent","eventImpl","marshalling_1","createChannelSender","_target","propKey","properties","methodArgs","colorTables","prettyWithoutArrays","logWithColors","direction","req","initiator","pretty","colorTable","IPCLogger","_outgoingPrefix","_incomingPrefix","_totalIncoming","_totalOutgoing","requestId","define","nls","getWindowsCode","status","getWindowsShell","AbstractProcess","arg3","arg4","cmd","shell","executable","isShellCommand","childProcess","childProcessPromise","terminateRequested","newEnv","WellKnowCommands","pp","localize","useExec","cc","ee","cp","stdout","stderr","killed","handleExec","closeHandler","handleClose","terminated","Types","cmdCode","Objects","windowsVerbatimArguments","detached","quotedCommand","quotedArg","commandLine","quoted","ensureQuotes","spawn","pidResolve","pid","handleSpawn","stdio","killProcess","execFile","success","asFileUri","require","kill","terminateProcess","cmdShell","ant","cmake","eslint","gradle","grunt","gulp","jake","jenkins","jshint","make","maven","msbuild","msc","nmake","npm","rake","tsc","xbuild","LineProcess","stdoutLineDecoder","stderrLineDecoder","lineDecoder","decoder_1","sync","stdoutLine","stderrLine","createQueuedSender","msgQueue","useQueue","msgQueueCopy","findExecutable","PATH","pathEntry","fullPath","withExtension","Server","ipc_1","Client","modulePath","_onDidProcessExit","onDidProcessExit","disposeDelayer","_client","getCachedChannel","disposeClient","client","forkOpts","objects_1","VSCODE_PARENT_PID","freshExecArgv","execArgv","debug","debugBrk","child_process_1","fork","onMessageEmitter","console_1","serverName","sender","processes_1","connected","onExit","_util","storeServiceDependency","optional","DI_TARGET","DI_DEPENDENCIES","createDecorator","serviceId","serviceIds","getServiceDependencies","ctor","IInstantiationService","serviceIdentifier","FileSystemProviderErrorCode","IFileService","instantiation_1","FileType","FileSystemProviderCapabilities","hasReadWriteCapability","provider","capabilities","hasFileFolderCopyCapability","hasOpenReadWriteCloseCapability","hasFileReadStreamCapability","FileSystemProviderError","createFileSystemProviderError","providerError","markAsFileSystemProviderError","toFileSystemProviderErrorCode","Unknown","FileExists","FileIsADirectory","FileNotADirectory","FileNotFound","FileExceedsMemoryLimit","FileTooLarge","NoPermissions","Unavailable","ensureFileSystemProviderError","nls_1","toFileOperationResult","FileOperationError","fileOperationResult","FileOperation","FileOperationEvent","operation","FileChangeType","FileChangesEvent","changes","extUri","checkForChangeType","getOfType","hasType","filterFn","isParent","FileOperationResult","AutoSaveConfiguration","OFF","AFTER_DELAY","ON_FOCUS_CHANGE","ON_WINDOW_CHANGE","HotExitConfiguration","ON_EXIT","ON_EXIT_AND_WINDOW_CLOSE","FILES_ASSOCIATIONS_CONFIG","FILES_EXCLUDE_CONFIG","FileKind","ETAG_DISABLED","etag","mtime","whenProviderRegistered","fileService","canHandleResource","onDidChangeFileSystemProviderRegistrations","MIN_MAX_MEMORY_SIZE_MB","FALLBACK_MAX_MEMORY_SIZE_MB","BinarySize","KB","MB","toFixed","GB","TB","toFileChanges","normalizeFileChanges","normalizer","EventNormalizer","processEvent","normalized","mapPathToChange","existingEvent","currentChangeType","newChangeType","addedChangeEvents","deletedPaths","e1","e2","files_1","nsfwActionToRawChangeType","NsfwWatcherService","_onDidChangeFile","_register","onDidChangeFile","_onDidLogMessage","onDidLogMessage","pathWatchers","roots","normalizedRoots","_normalizeRoots","rootsToStartWatching","rootsToStopWatching","normalizedRoot","verboseLogging","ready","watcher","stop","doWatch","ignored","excludes","glob","undeliveredFileEvents","fileEventDelayer","FS_EVENT_DELAY","readyPromiseResolve","enospcErrorLogged","realBasePathDiffers","realBasePathLength","realBasePath","nsfw","logPath","action","directory","oldFile","newFile","absolutePath","isPathIgnored","newDirectory","watcher_1","startPromise","enabled","server","ipc_cp_1","nsfwWatcherService_1"],"mappings":"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","file":"watcherApp.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: Compare<T>): T[] {\n\t_sort(data, compare, 0, data.length - 1, []);\n\treturn data;\n}\n\nfunction _merge<T>(a: T[], compare: Compare<T>, lo: number, mid: number, hi: number, aux: T[]): void {\n\tlet leftIdx = lo, rightIdx = mid + 1;\n\tfor (let i = lo; i <= hi; i++) {\n\t\taux[i] = a[i];\n\t}\n\tfor (let i = lo; i <= hi; i++) {\n\t\tif (leftIdx > mid) {\n\t\t\t// left side consumed\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else if (rightIdx > hi) {\n\t\t\t// right side consumed\n\t\t\ta[i] = aux[leftIdx++];\n\t\t} else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n\t\t\t// right element is less -> comes first\n\t\t\ta[i] = aux[rightIdx++];\n\t\t} else {\n\t\t\t// left element comes first (less or equal)\n\t\t\ta[i] = aux[leftIdx++];\n\t\t}\n\t}\n}\n\nfunction _sort<T>(a: T[], compare: Compare<T>, lo: number, hi: number, aux: T[]) {\n\tif (hi <= lo) {\n\t\treturn;\n\t}\n\tconst mid = lo + ((hi - lo) / 2) | 0;\n\t_sort(a, compare, lo, mid, aux);\n\t_sort(a, compare, mid + 1, hi, aux);\n\tif (compare(a[mid], a[mid + 1]) <= 0) {\n\t\t// left and right are sorted and if the last-left element is less\n\t\t// or equals than the first-right element there is nothing else\n\t\t// to do\n\t\treturn;\n\t}\n\t_merge(a, compare, lo, mid, hi, aux);\n}\n\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of mergeSort(data.slice(0), compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elemnts from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // nextTick() would starve I/O.\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsey values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn?: (t: T) => string): T[] {\n\tif (!keyFn) {\n\t\treturn array.filter((element, position) => {\n\t\t\treturn array.indexOf(element) === position;\n\t\t});\n\t}\n\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\treturn array.filter((elem) => {\n\t\tconst key = keyFn(elem);\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\n\t\treturn true;\n\t});\n}\n\nexport function distinctES6<T>(array: ReadonlyArray<T>): T[] {\n\tconst seen = new Set<T>();\n\treturn array.filter(element => {\n\t\tif (seen.has(element)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen.add(element);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\n\nconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn;\n\t}\n\n\tif (x && x !== Disposable.None) {\n\t\ttry {\n\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!TRACK_DISPOSABLES) {\n\t\treturn x;\n\t}\n\n\tconst stack = new Error('Potentially leaked disposable').stack!;\n\tsetTimeout(() => {\n\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\tconsole.log(stack);\n\t\t}\n\t}, 3000);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encounter errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn trackDisposable({ dispose: () => dispose(disposables) });\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tif (this._value) {\n\t\t\tthis._value.dispose();\n\t\t}\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n\n\ttoArray(): E[] {\n\t\tconst result: E[] = [];\n\t\tfor (let node = this._first; node !== Node.Undefined; node = node.next) {\n\t\t\tresult.push(node.element);\n\t\t}\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(c => once(event)(c));\n\t}\n}\n\ntype Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0\n\t\t\t? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n\t\t\t: undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tlet removeMonitor: (() => void) | undefined;\n\t\t\t\tif (this._leakageMon) {\n\t\t\t\t\tremoveMonitor = this._leakageMon.check(this._listeners.size);\n\t\t\t\t}\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (this._listeners) {\n\t\t\tthis._listeners.clear();\n\t\t}\n\t\tif (this._deliveryQueue) {\n\t\t\tthis._deliveryQueue.clear();\n\t\t}\n\t\tif (this._leakageMon) {\n\t\t\tthis._leakageMon.dispose();\n\t\t}\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options && options.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = this._eventQueue.toArray();\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<any>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<any>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<any>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promise.all(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: any): obj is Promise<T> {\n\treturn obj && typeof (<Promise<any>>obj).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(errors.canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(c => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(c);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tthis.queuedPromise!.then(c, e);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((c, e) => {\n\t\t\tthis.activePromise!.then((result: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tc(result);\n\t\t\t}, (err: any) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\te(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<any> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<any>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((c, e) => {\n\t\t\t\tthis.doResolve = c;\n\t\t\t\tthis.doReject = e;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(errors.canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as any as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(errors.canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: any) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI): Queue<void> {\n\t\tconst key = resource.toString();\n\t\tif (!this.queues.has(key)) {\n\t\t\tconst queue = new Queue<void>();\n\t\t\tqueue.onFinished(() => {\n\t\t\t\tqueue.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn this.queues.get(key)!;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: any[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: any;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId: taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string;\n}\n\nexport interface INodeProcess {\n\tplatform: 'win32' | 'linux' | 'darwin';\n\tenv: IProcessEnvironment;\n\tnextTick: Function;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\ttype?: string;\n\tgetuid(): number;\n\tcwd(): string;\n}\ndeclare const process: INodeProcess;\ndeclare const global: any;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\ndeclare const self: any;\n\nconst _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {} as any);\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n} else if (typeof _globals.vscode !== 'undefined') {\n\t// Native envionment (sandboxed)\n\tnodeProcess = _globals.vscode.process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n\n\t// NOTE@coder: Make languages work.\n\tconst el = typeof document !== 'undefined' && document.getElementById('vscode-remote-nls-configuration');\n\tconst rawNlsConfig = el && el.getAttribute('data-settings');\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t\t_language = nlsConfig.availableLanguages['*'] || LANGUAGE_DEFAULT;\n\t\t} catch (error) { /* Oh well. */ }\n\t}\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\nexport function isRootUser(): boolean {\n\treturn !!nodeProcess && !_isWindows && (nodeProcess.getuid() === 0);\n}\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\nexport const globals: any = _globals;\n\ninterface ISetImmediate {\n\t(callback: (...args: any[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (nodeProcess) {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: any[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\ndeclare const process: INodeProcess;\n\nlet safeProcess: INodeProcess;\n\n// Native node.js environment\nif (typeof process !== 'undefined') {\n\tsafeProcess = process;\n}\n\n// Native sandbox environment\nelse if (typeof globals.vscode !== 'undefined') {\n\tsafeProcess = globals.vscode.process;\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform(): 'win32' | 'linux' | 'darwin' { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd(): string { return '/'; },\n\t\tgetuid(): number { return -1; }\n\t};\n}\n\nexport const cwd = safeProcess.cwd;\nexport const env = safeProcess.env;\nexport const platform = safeProcess.platform;\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: any) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = (process.env as any)[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is not an error, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t *\n\t * In case of an error, the on('error') event will be used\n\t * if the stream is flowing.\n\t */\n\tend(result?: T | Error): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T>;\n\n\treturn candidate && [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T>;\n\n\treturn candidate && isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.data.forEach(listener => listener(data));\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T | Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data or error if provided\n\t\tif (result instanceof Error) {\n\t\t\tthis.error(result);\n\t\t} else if (result) {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.listeners.data.forEach(listener => listener(fullDataBuffer));\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.listeners.error.forEach(listener => listener(error));\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.listeners.end.forEach(listener => listener());\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tstream.on('data', data => chunks.push(data));\n\t\tstream.on('error', error => reject(error));\n\t\tstream.on('end', () => resolve(reducer(chunks)));\n\t});\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\n\t\t// Data Listener\n\t\tconst buffer: T[] = [];\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tstream.on('data', data => target.write(transformer.data(data)));\n\tstream.on('end', () => target.end());\n\tstream.on('error', error => target.error(transformer.error ? transformer.error(error) : error));\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\n/**\n * @deprecated ES6: use `String.padStart`\n */\nexport function pad(n: number, l: number, char: string = '0'): string {\n\tconst str = '' + n;\n\tconst r = [str];\n\n\tfor (let i = str.length; i < l; i++) {\n\t\tr.push(char);\n\t}\n\n\treturn r.reverse().join('');\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\n\t\t|| (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\treturn idx >= 0 ?\n\t\tstr.substr(0, idx) :\n\t\tstr;\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\nconst hasTextEncoder = (typeof TextEncoder !== 'undefined');\nconst hasTextDecoder = (typeof TextDecoder !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else if (hasTextEncoder) {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t} else {\n\t\t\treturn new VSBuffer(strings.encodeUTF8(source));\n\t\t}\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else if (hasTextDecoder) {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t} else {\n\t\t\treturn strings.decodeUTF8(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performant, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start!/*bad lib.d.ts*/, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else {\n\t\t\tthis.buffer.set(array, offset);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray<T>(array: T | {}): array is T extends readonly any[] ? (unknown extends T ? never : readonly any[]) : any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: any): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && (<any[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: any): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: any): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: any): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: any): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: any): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: any, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: any): obj is any {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: any): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: any[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: any[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: any, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: any[]) => any): T {\n\tconst createProxyMethod = (method: string): () => any => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\n\t//  For every property\n\t[K in keyof Target]:\n\n\t// Function: add param to function\n\tTarget[K] extends (...args: any) => TargetFunctionsReturnType ? (firstArg: FirstParameter, ...args: Parameters<Target[K]>) => ReturnType<Target[K]> :\n\n\t// Else: just leave as is\n\tTarget[K]\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isWindowsDriveLetter(pathNormalized.charCodeAt(0))\n\t\t\t&& pathNormalized.charCodeAt(1) === CharCode.Colon\n\t\t\t&& (path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isObject, isUndefinedOrNull, isArray } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'function'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\tget fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\ttoString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\ttoJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport interface MarshalledObject {\n\t$mid: number;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: 2,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase 1: return <any>URI.revive(obj);\n\t\t\tcase 2: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for loading resources inside of webviews.\n\t */\n\texport const vscodeWebviewResource = 'vscode-webview-resource';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\t// const port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\t// NOTE@coder: Changed this to work against the current path.\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: window.location.host,\n\t\t\tpath: `${window.location.pathname.replace(/\\/+$/, '')}/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\t//todo@jrieken #107886 the case-sensitive logic is copied form `resources.ts#hasToIgnoreCase`\n\t\t\t// which cannot be used because it depends on this\n\t\t\tconst caseSensitive = key.scheme === Schemas.file && isLinux;\n\t\t\tthis._pathIterator = new PathIterator(false, caseSensitive);\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compare(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareSubstringIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator());\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node ? node.value : undefined;\n\t}\n\n\tdelete(key: K): void {\n\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// remove element\n\t\t\t\tnode.value = undefined;\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): Iterator<V> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._nodeIterator(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _nodeIterator(node: TernarySearchTreeNode<K, V>): Iterator<V> {\n\t\tlet res: { done: false; value: V; };\n\t\tlet idx: number;\n\t\tlet data: V[];\n\t\tconst next = (): IteratorResult<V> => {\n\t\t\tif (!data) {\n\t\t\t\t// lazy till first invocation\n\t\t\t\tdata = [];\n\t\t\t\tidx = 0;\n\t\t\t\tthis._forEach(node, value => data.push(value));\n\t\t\t}\n\t\t\tif (idx >= data.length) {\n\t\t\t\treturn { done: true, value: undefined };\n\t\t\t}\n\n\t\t\tif (!res) {\n\t\t\t\tres = { done: false, value: data[idx++] };\n\t\t\t} else {\n\t\t\t\tres.value = data[idx++];\n\t\t\t}\n\t\t\treturn res;\n\t\t};\n\t\treturn { next };\n\t}\n\n\tforEach(callback: (value: V, index: K) => any) {\n\t\tthis._forEach(this._root, callback);\n\t}\n\n\tprivate _forEach(node: TernarySearchTreeNode<K, V> | undefined, callback: (value: V, index: K) => any) {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tthis._forEach(node.left, callback);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tcallback(node.value, node.key);\n\t\t\t}\n\t\t\t// mid\n\t\t\tthis._forEach(node.mid, callback);\n\n\t\t\t// right\n\t\t\tthis._forEach(node.right, callback);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happend if size === 1 which is handle\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\tget(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\tset(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { LRUCache } from 'vs/base/common/map';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isThenable } from 'vs/base/common/async';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trival glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivias\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(path: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst nativePath = paths.sep !== paths.posix.sep ? path.replace(ALL_FORWARD_SLASHES, paths.sep) : path;\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (path, basename) {\n\t\treturn typeof path === 'string' && (path === nativePath || path.endsWith(nativePathEnd)) ? pattern : null;\n\t} : function (path, basename) {\n\t\treturn typeof path === 'string' && path === nativePath ? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + path];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@joh node nodejs use `crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\n// todo@joh use browser-crypto\nconst _fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\tfor (let i = 0; i < bucket.length; i++) {\n\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t}\n\treturn bucket;\n};\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: string = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Queue } from 'vs/base/common/async';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { Event } from 'vs/base/common/event';\nimport { promisify } from 'util';\nimport { isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\n\n// See https://github.com/microsoft/vscode/issues/30180\nconst WIN32_MAX_FILE_SIZE = 300 * 1024 * 1024; // 300 MB\nconst GENERAL_MAX_FILE_SIZE = 16 * 1024 * 1024 * 1024; // 16 GB\n\n// See https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\nconst WIN32_MAX_HEAP_SIZE = 700 * 1024 * 1024; // 700 MB\nconst GENERAL_MAX_HEAP_SIZE = 700 * 2 * 1024 * 1024; // 1400 MB\n\nexport const MAX_FILE_SIZE = process.arch === 'ia32' ? WIN32_MAX_FILE_SIZE : GENERAL_MAX_FILE_SIZE;\nexport const MAX_HEAP_SIZE = process.arch === 'ia32' ? WIN32_MAX_HEAP_SIZE : GENERAL_MAX_HEAP_SIZE;\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via unlink\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\ttry {\n\t\tconst stat = await lstat(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = await readdir(path);\n\t\t\tawait Promise.all(children.map(child => rimrafUnlink(join(path, child))));\n\n\t\t\t// Folder\n\t\t\tawait promisify(fs.rmdir)(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tawait chmod(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn unlink(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(os.tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp);\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\ttry {\n\t\tconst stat = fs.lstatSync(path);\n\n\t\t// Folder delete (recursive) - NOT for symbolic links though!\n\t\tif (stat.isDirectory() && !stat.isSymbolicLink()) {\n\n\t\t\t// Children\n\t\t\tconst children = readdirSync(path);\n\t\t\tchildren.map(child => rimrafSync(join(path, child)));\n\n\t\t\t// Folder\n\t\t\tfs.rmdirSync(path);\n\t\t}\n\n\t\t// Single file delete\n\t\telse {\n\n\t\t\t// chmod as needed to allow for unlink\n\t\t\tconst mode = stat.mode;\n\t\t\tif (!(mode & 128)) { // 128 === 0200\n\t\t\t\tfs.chmodSync(path, mode | 128);\n\t\t\t}\n\n\t\t\treturn fs.unlinkSync(path);\n\t\t}\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function readdir(path: string): Promise<string[]> {\n\treturn handleDirectoryChildren(await promisify(fs.readdir)(path));\n}\n\nexport async function readdirWithFileTypes(path: string): Promise<fs.Dirent[]> {\n\tconst children = await promisify(fs.readdir)(path, { withFileTypes: true });\n\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\tfor (const child of children) {\n\t\t\tchild.name = normalizeNFC(child.name);\n\t\t}\n\t}\n\n\treturn children;\n}\n\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[] {\n\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t// See also https://github.com/nodejs/node/issues/2165\n\tif (platform.isMacintosh) {\n\t\treturn children.map(child => normalizeNFC(child));\n\t}\n\n\treturn children;\n}\n\nexport function exists(path: string): Promise<boolean> {\n\treturn promisify(fs.exists)(path);\n}\n\nexport function chmod(path: string, mode: number): Promise<void> {\n\treturn promisify(fs.chmod)(path, mode);\n}\n\nexport function stat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.stat)(path);\n}\n\nexport interface IStatAndLink {\n\n\t// The stats of the file. If the file is a symbolic\n\t// link, the stats will be of that target file and\n\t// not the link itself.\n\t// If the file is a symbolic link pointing to a non\n\t// existing file, the stat will be of the link and\n\t// the `dangling` flag will indicate this.\n\tstat: fs.Stats;\n\n\t// Will be provided if the resource is a symbolic link\n\t// on disk. Use the `dangling` flag to find out if it\n\t// points to a resource that does not exist on disk.\n\tsymbolicLink?: { dangling: boolean };\n}\n\nexport async function statLink(path: string): Promise<IStatAndLink> {\n\n\t// First stat the link\n\tlet lstats: fs.Stats | undefined;\n\ttry {\n\t\tlstats = await lstat(path);\n\n\t\t// Return early if the stat is not a symbolic link at all\n\t\tif (!lstats.isSymbolicLink()) {\n\t\t\treturn { stat: lstats };\n\t\t}\n\t} catch (error) {\n\t\t/* ignore - use stat() instead */\n\t}\n\n\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t// which for symbolic links will stat the target they point to\n\ttry {\n\t\tconst stats = await stat(path);\n\n\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t} catch (error) {\n\n\t\t// If the link points to a non-existing file we still want\n\t\t// to return it as result while setting dangling: true flag\n\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n\nexport function lstat(path: string): Promise<fs.Stats> {\n\treturn promisify(fs.lstat)(path);\n}\n\nexport function rename(oldPath: string, newPath: string): Promise<void> {\n\treturn promisify(fs.rename)(oldPath, newPath);\n}\n\nexport function renameIgnoreError(oldPath: string, newPath: string): Promise<void> {\n\treturn new Promise(resolve => fs.rename(oldPath, newPath, () => resolve()));\n}\n\nexport function unlink(path: string): Promise<void> {\n\treturn promisify(fs.unlink)(path);\n}\n\nexport function symlink(target: string, path: string, type?: string): Promise<void> {\n\treturn promisify(fs.symlink)(target, path, type);\n}\n\nexport function truncate(path: string, len: number): Promise<void> {\n\treturn promisify(fs.truncate)(path, len);\n}\n\nexport function readFile(path: string): Promise<Buffer>;\nexport function readFile(path: string, encoding: string): Promise<string>;\nexport function readFile(path: string, encoding?: string): Promise<Buffer | string> {\n\treturn promisify(fs.readFile)(path, encoding);\n}\n\nexport async function mkdirp(path: string, mode?: number): Promise<void> {\n\treturn promisify(fs.mkdir)(path, { mode, recursive: true });\n}\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeFilePathQueues: Map<string, Queue<void>> = new Map();\n\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\tconst queueKey = toQueueKey(path);\n\n\treturn ensureWriteFileQueue(queueKey).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nfunction toQueueKey(path: string): string {\n\tlet queueKey = path;\n\tif (platform.isWindows || platform.isMacintosh) {\n\t\tqueueKey = queueKey.toLowerCase(); // accommodate for case insensitive file systems\n\t}\n\n\treturn queueKey;\n}\n\nfunction ensureWriteFileQueue(queueKey: string): Queue<void> {\n\tconst existingWriteFileQueue = writeFilePathQueues.get(queueKey);\n\tif (existingWriteFileQueue) {\n\t\treturn existingWriteFileQueue;\n\t}\n\n\tconst writeFileQueue = new Queue<void>();\n\twriteFilePathQueues.set(queueKey, writeFileQueue);\n\n\tconst onFinish = Event.once(writeFileQueue.onFinished);\n\tonFinish(() => {\n\t\twriteFilePathQueues.delete(queueKey);\n\t\twriteFileQueue.dispose();\n\t});\n\n\treturn writeFileQueue;\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await dirExists(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\nexport async function dirExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isDirectory();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport async function fileExists(path: string): Promise<boolean> {\n\ttry {\n\t\tconst fileStat = await stat(path);\n\n\t\treturn fileStat.isFile();\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\nexport function whenDeleted(path: string): Promise<void> {\n\n\t// Complete when wait marker file is deleted\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.exists(path, exists => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (!exists) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, 1000);\n\t});\n}\n\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn Promise.resolve();\n\t}\n\n\tasync function updateMtime(path: string): Promise<void> {\n\t\tconst stat = await lstat(path);\n\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\treturn Promise.resolve(); // only for files\n\t\t}\n\n\t\tconst fd = await promisify(fs.open)(path, 'a');\n\t\ttry {\n\t\t\tawait promisify(fs.futimes)(fd, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t//ignore\n\t\t}\n\n\t\treturn promisify(fs.close)(fd);\n\t}\n\n\ttry {\n\t\tawait rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target);\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport async function copy(source: string, target: string, copiedSourcesIn?: { [path: string]: boolean }): Promise<void> {\n\tconst copiedSources = copiedSourcesIn ? copiedSourcesIn : Object.create(null);\n\n\tconst fileStat = await stat(source);\n\tif (!fileStat.isDirectory()) {\n\t\treturn doCopyFile(source, target, fileStat.mode & 511);\n\t}\n\n\tif (copiedSources[source]) {\n\t\treturn Promise.resolve(); // escape when there are cycles (can happen with symlinks)\n\t}\n\n\tcopiedSources[source] = true; // remember as copied\n\n\t// Create folder\n\tawait mkdirp(target, fileStat.mode & 511);\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (let i = 0; i < files.length; i++) {\n\t\tconst file = files[i];\n\t\tawait copy(join(source, file), join(target, file), copiedSources);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = fs.createReadStream(source);\n\t\tconst writer = fs.createWriteStream(target, { mode });\n\n\t\tlet finished = false;\n\t\tconst finish = (error?: Error) => {\n\t\t\tif (!finished) {\n\t\t\t\tfinished = true;\n\n\t\t\t\t// in error cases, pass to callback\n\t\t\t\tif (error) {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\t// we need to explicitly chmod because of https://github.com/nodejs/node/issues/1104\n\t\t\t\tfs.chmod(target, mode, error => error ? reject(error) : resolve());\n\t\t\t}\n\t\t};\n\n\t\t// handle errors properly\n\t\treader.once('error', error => finish(error));\n\t\twriter.once('error', error => finish(error));\n\n\t\t// we are done (underlying fd has been closed)\n\t\twriter.once('close', () => finish());\n\n\t\t// start piping\n\t\treader.pipe(writer);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { rtrim } from 'vs/base/common/strings';\nimport { sep, join, normalize, dirname, basename } from 'vs/base/common/path';\nimport { readdirSync } from 'vs/base/node/pfs';\nimport { promisify } from 'util';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\treturn await promisify(fs.realpath)(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait promisify(fs.access)(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event, Emitter, Relay, EventMultiplexer } from 'vs/base/common/event';\nimport { IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn Event.toPromise(this.onDidInitialize);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n\n//#region createChannelReceiver / createChannelSender\n\n/**\n * Use both `createChannelReceiver` and `createChannelSender`\n * for automated process <=> process communication over methods\n * and events. You do not need to spell out each method on both\n * sides, a proxy will take care of this.\n *\n * Rules:\n * - if marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - events must follow the naming convention `onUppercase`\n * - `CancellationToken` is currently not supported\n * - if a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\n\nexport interface IBaseChannelOptions {\n\n\t/**\n\t * Disables automatic marshalling of `URI`.\n\t * If marshalling is disabled, `UriComponents`\n\t * must be used instead.\n\t */\n\tdisableMarshalling?: boolean;\n}\n\nexport interface IChannelReceiverOptions extends IBaseChannelOptions { }\n\nexport function createChannelReceiver(service: unknown, options?: IChannelReceiverOptions): IServerChannel {\n\tconst handler = service as { [key: string]: unknown };\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t// Buffer any event that should be supported by\n\t// iterating over all property keys and finding them\n\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\tfor (const key in handler) {\n\t\tif (propertyIsEvent(key)) {\n\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t}\n\t}\n\n\treturn new class implements IServerChannel {\n\n\t\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\tif (eventImpl) {\n\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t}\n\n\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t}\n\n\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\tconst target = handler[command];\n\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target.apply(handler, args);\n\t\t\t}\n\n\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t}\n\t};\n}\n\nexport interface IChannelSenderOptions extends IBaseChannelOptions {\n\n\t/**\n\t * If provided, will add the value of `context`\n\t * to each method call to the target.\n\t */\n\tcontext?: unknown;\n\n\t/**\n\t * If provided, will not proxy any of the properties\n\t * that are part of the Map but rather return that value.\n\t */\n\tproperties?: Map<string, unknown>;\n}\n\nexport function createChannelSender<T>(channel: IChannel, options?: IChannelSenderOptions): T {\n\tconst disableMarshalling = options && options.disableMarshalling;\n\n\treturn new Proxy({}, {\n\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t// Check for predefined values\n\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Event\n\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t}\n\n\t\t\t\t// Function\n\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t// Add context if any\n\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t}\n\t}) as T;\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\n//#endregion\n\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport { promisify } from 'util';\nimport * as cp from 'child_process';\nimport * as nls from 'vs/nls';\nimport * as Types from 'vs/base/common/types';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as Objects from 'vs/base/common/objects';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as Platform from 'vs/base/common/platform';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode, Executable } from 'vs/base/common/processes';\nimport { FileAccess } from 'vs/base/common/network';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\nexport function getWindowsShell(): string {\n\treturn process.env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>((c, e) => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn c(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn c(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn c(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env.PATH)) {\n\t\t\tpaths = process.env.PATH.split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await promisify(fs.exists)(path)) {\n\t\t\t\treturn !((await promisify(fs.stat)(path)).isDirectory());\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { IDisposable, toDisposable, dispose } from 'vs/base/common/lifecycle';\nimport { Delayer, createCancelablePromise } from 'vs/base/common/async';\nimport { deepClone } from 'vs/base/common/objects';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { createQueuedSender } from 'vs/base/node/processes';\nimport { IChannel, ChannelServer as IPCServer, ChannelClient as IPCClient, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as errors from 'vs/base/common/errors';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { isMacintosh } from 'vs/base/common/platform';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * See https://github.com/microsoft/vscode/issues/27665\n\t * Allows to pass in fresh execArgv to the forked process such that it doesn't inherit them from `process.execArgv`.\n\t * e.g. Launching the extension host process with `--inspect-brk=xxx` and then forking a process from the extension host\n\t * results in the forked process inheriting `--inspect-brk=xxx`.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (isMacintosh && forkOpts.env) {\n\t\t\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\t\t\tdelete forkOpts.env['DYLD_LIBRARY_PATH'];\n\t\t\t}\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport * as glob from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: { useTrash?: boolean, recursive?: boolean }): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\toverwrite: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions {\n\toverwrite: boolean;\n\tcreate: boolean;\n}\n\nexport interface FileOpenOptions {\n\tcreate: boolean;\n}\n\nexport interface FileDeleteOptions {\n\trecursive: boolean;\n\tuseTrash: boolean;\n}\n\nexport enum FileType {\n\tUnknown = 0,\n\tFile = 1,\n\tDirectory = 2,\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\ttype: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\tmtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\tctime: number;\n\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\trecursive: boolean;\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\tFileReadWrite = 1 << 1,\n\tFileOpenReadWriteClose = 1 << 2,\n\tFileReadStream = 1 << 4,\n\n\tFileFolderCopy = 1 << 3,\n\n\tPathCaseSensitive = 1 << 10,\n\tReadonly = 1 << 11,\n\n\tTrash = 1 << 12\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@ben remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\tadded: boolean;\n\tscheme: string;\n\tprovider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\tprovider: IFileSystemProvider;\n\tscheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\tscheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED = 0,\n\tADDED = 1,\n\tDELETED = 2\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\tconstructor(public readonly changes: readonly IFileChange[], private readonly extUri: IExtUri) { }\n\n\t/**\n\t * Returns true if this change event contains the provided file with the given change type (if provided). In case of\n\t * type DELETED, this method will also return true if a folder got deleted that is the parent of the\n\t * provided file path.\n\t */\n\tcontains(resource: URI, type?: FileChangeType): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst checkForChangeType = !isUndefinedOrNull(type);\n\n\t\treturn this.changes.some(change => {\n\t\t\tif (checkForChangeType && change.type !== type) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// For deleted also return true when deleted folder is parent of target path\n\t\t\tif (change.type === FileChangeType.DELETED) {\n\t\t\t\treturn this.extUri.isEqualOrParent(resource, change.resource);\n\t\t\t}\n\n\t\t\treturn this.extUri.isEqual(resource, change.resource);\n\t\t});\n\t}\n\n\t/**\n\t * Returns the changes that describe added files.\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn this.hasType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns the changes that describe deleted files.\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn this.hasType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns the changes that describe updated files.\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn this.hasType(FileChangeType.UPDATED);\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\treturn this.changes.filter(change => change.type === type);\n\t}\n\n\tprivate hasType(type: FileChangeType): boolean {\n\t\treturn this.changes.some(change => {\n\t\t\treturn change.type === type;\n\t\t});\n\t}\n\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.extUri);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\tresource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\tname: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tsize?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tmtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\tetag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends IBaseStat {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n}\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\tisFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\tisDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link.\n\t */\n\tisSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\tmtime: number;\n\tctime: number;\n\tetag: string;\n\tsize: number;\n\tchildren?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\tstat?: IFileStat;\n\tsuccess: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\tstat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\tvalue: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\tvalue: VSBufferReadableStream;\n}\n\nexport interface IReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_READ_ONLY,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: glob.IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn Promise.resolve();\n\t}\n\n\treturn new Promise((c, e) => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tc();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class BinarySize {\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = BinarySize.KB * BinarySize.KB;\n\tstatic readonly GB = BinarySize.MB * BinarySize.KB;\n\tstatic readonly TB = BinarySize.GB * BinarySize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (size < BinarySize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size);\n\t\t}\n\n\t\tif (size < BinarySize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / BinarySize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / BinarySize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < BinarySize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / BinarySize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / BinarySize.TB).toFixed(2));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, isParent, IFileChange } from 'vs/platform/files/common/files';\nimport { isLinux } from 'vs/base/common/platform';\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function normalizeFileChanges(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst normalizer = new EventNormalizer();\n\tfor (const event of changes) {\n\t\tnormalizer.processEvent(event);\n\t}\n\n\treturn normalizer.normalize();\n}\n\nclass EventNormalizer {\n\tprivate normalized: IDiskFileChange[] = [];\n\tprivate mapPathToChange: Map<string, IDiskFileChange> = new Map();\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(event.path);\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// ignore CREATE followed by DELETE in one go\n\t\t\tif (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(event.path);\n\t\t\t\tthis.normalized.splice(this.normalized.indexOf(existingEvent), 1);\n\t\t\t}\n\n\t\t\t// flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise store new\n\t\telse {\n\t\t\tthis.normalized.push(event);\n\t\t\tthis.mapPathToChange.set(event.path, event);\n\t\t}\n\t}\n\n\tnormalize(): IDiskFileChange[] {\n\t\tconst addedChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn this.normalized.filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddedChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(d => isParent(e.path, d, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addedChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as glob from 'vs/base/common/glob';\nimport * as extpath from 'vs/base/common/extpath';\nimport * as path from 'vs/base/common/path';\nimport * as platform from 'vs/base/common/platform';\nimport { IDiskFileChange, normalizeFileChanges, ILogMessage } from 'vs/platform/files/node/watcher/watcher';\nimport * as nsfw from 'vscode-nsfw';\nimport { IWatcherService, IWatcherRequest } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { Event, Emitter } from 'vs/base/common/event';\nimport { realcaseSync, realpathSync } from 'vs/base/node/extpath';\nimport { Disposable } from 'vs/base/common/lifecycle';\n\nconst nsfwActionToRawChangeType: { [key: number]: number } = [];\nnsfwActionToRawChangeType[nsfw.actions.CREATED] = FileChangeType.ADDED;\nnsfwActionToRawChangeType[nsfw.actions.MODIFIED] = FileChangeType.UPDATED;\nnsfwActionToRawChangeType[nsfw.actions.DELETED] = FileChangeType.DELETED;\n\ninterface IWatcherObjet {\n\tstart(): void;\n\tstop(): void;\n}\n\ninterface IPathWatcher {\n\tready: Promise<IWatcherObjet>;\n\twatcher?: IWatcherObjet;\n\tignored: glob.ParsedPattern[];\n}\n\nexport class NsfwWatcherService extends Disposable implements IWatcherService {\n\n\tprivate static readonly FS_EVENT_DELAY = 50; // aggregate and only emit events when changes have stopped for this duration (in ms)\n\n\tprivate readonly _onDidChangeFile = this._register(new Emitter<IDiskFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate readonly _onDidLogMessage = this._register(new Emitter<ILogMessage>());\n\treadonly onDidLogMessage: Event<ILogMessage> = this._onDidLogMessage.event;\n\n\tprivate pathWatchers: { [watchPath: string]: IPathWatcher } = {};\n\tprivate verboseLogging: boolean | undefined;\n\tprivate enospcErrorLogged: boolean | undefined;\n\n\tasync setRoots(roots: IWatcherRequest[]): Promise<void> {\n\t\tconst normalizedRoots = this._normalizeRoots(roots);\n\n\t\t// Gather roots that are not currently being watched\n\t\tconst rootsToStartWatching = normalizedRoots.filter(r => {\n\t\t\treturn !(r.path in this.pathWatchers);\n\t\t});\n\n\t\t// Gather current roots that don't exist in the new roots array\n\t\tconst rootsToStopWatching = Object.keys(this.pathWatchers).filter(r => {\n\t\t\treturn normalizedRoots.every(normalizedRoot => normalizedRoot.path !== r);\n\t\t});\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching: [${rootsToStartWatching.map(r => r.path).join(',')}]\\nStop watching: [${rootsToStopWatching.join(',')}]`);\n\t\t}\n\n\t\t// Stop watching some roots\n\t\trootsToStopWatching.forEach(root => {\n\t\t\tthis.pathWatchers[root].ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[root];\n\t\t});\n\n\t\t// Start watching some roots\n\t\trootsToStartWatching.forEach(root => this.doWatch(root));\n\n\t\t// Refresh ignored arrays in case they changed\n\t\troots.forEach(root => {\n\t\t\tif (root.path in this.pathWatchers) {\n\t\t\t\tthis.pathWatchers[root.path].ignored = Array.isArray(root.excludes) ? root.excludes.map(ignored => glob.parse(ignored)) : [];\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doWatch(request: IWatcherRequest): void {\n\t\tlet undeliveredFileEvents: IDiskFileChange[] = [];\n\t\tconst fileEventDelayer = new ThrottledDelayer<void>(NsfwWatcherService.FS_EVENT_DELAY);\n\n\t\tlet readyPromiseResolve: (watcher: IWatcherObjet) => void;\n\t\tthis.pathWatchers[request.path] = {\n\t\t\tready: new Promise<IWatcherObjet>(resolve => readyPromiseResolve = resolve),\n\t\t\tignored: Array.isArray(request.excludes) ? request.excludes.map(ignored => glob.parse(ignored)) : []\n\t\t};\n\n\t\tprocess.on('uncaughtException', (e: Error | string) => {\n\n\t\t\t// Specially handle ENOSPC errors that can happen when\n\t\t\t// the watcher consumes so many file descriptors that\n\t\t\t// we are running into a limit. We only want to warn\n\t\t\t// once in this case to avoid log spam.\n\t\t\t// See https://github.com/microsoft/vscode/issues/7950\n\t\t\tif (e === 'Inotify limit reached' && !this.enospcErrorLogged) {\n\t\t\t\tthis.enospcErrorLogged = true;\n\t\t\t\tthis.error('Inotify limit reached (ENOSPC)');\n\t\t\t}\n\t\t});\n\n\t\t// NSFW does not report file changes in the path provided on macOS if\n\t\t// - the path uses wrong casing\n\t\t// - the path is a symbolic link\n\t\t// We have to detect this case and massage the events to correct this.\n\t\tlet realBasePathDiffers = false;\n\t\tlet realBasePathLength = request.path.length;\n\t\tif (platform.isMacintosh) {\n\t\t\ttry {\n\n\t\t\t\t// First check for symbolic link\n\t\t\t\tlet realBasePath = realpathSync(request.path);\n\n\t\t\t\t// Second check for casing difference\n\t\t\t\tif (request.path === realBasePath) {\n\t\t\t\t\trealBasePath = (realcaseSync(request.path) || request.path);\n\t\t\t\t}\n\n\t\t\t\tif (request.path !== realBasePath) {\n\t\t\t\t\trealBasePathLength = realBasePath.length;\n\t\t\t\t\trealBasePathDiffers = true;\n\n\t\t\t\t\tthis.warn(`Watcher basePath does not match version on disk and will be corrected (original: ${request.path}, real: ${realBasePath})`);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\tif (this.verboseLogging) {\n\t\t\tthis.log(`Start watching with nsfw: ${request.path}`);\n\t\t}\n\n\t\tnsfw(request.path, events => {\n\t\t\tfor (const e of events) {\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tconst logPath = e.action === nsfw.actions.RENAMED ? path.join(e.directory, e.oldFile || '') + ' -> ' + e.newFile : path.join(e.directory, e.file || '');\n\t\t\t\t\tthis.log(`${e.action === nsfw.actions.CREATED ? '[CREATED]' : e.action === nsfw.actions.DELETED ? '[DELETED]' : e.action === nsfw.actions.MODIFIED ? '[CHANGED]' : '[RENAMED]'} ${logPath}`);\n\t\t\t\t}\n\n\t\t\t\t// Convert nsfw event to IRawFileChange and add to queue\n\t\t\t\tlet absolutePath: string;\n\t\t\t\tif (e.action === nsfw.actions.RENAMED) {\n\t\t\t\t\t// Rename fires when a file's name changes within a single directory\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.oldFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.DELETED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t\tabsolutePath = path.join(e.newDirectory || e.directory, e.newFile || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({ type: FileChangeType.ADDED, path: absolutePath });\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tabsolutePath = path.join(e.directory, e.file || '');\n\t\t\t\t\tif (!this.isPathIgnored(absolutePath, this.pathWatchers[request.path].ignored)) {\n\t\t\t\t\t\tundeliveredFileEvents.push({\n\t\t\t\t\t\t\ttype: nsfwActionToRawChangeType[e.action],\n\t\t\t\t\t\t\tpath: absolutePath\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (this.verboseLogging) {\n\t\t\t\t\t\tthis.log(` >> ignored ${absolutePath}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delay and send buffer\n\t\t\tfileEventDelayer.trigger(async () => {\n\t\t\t\tconst events = undeliveredFileEvents;\n\t\t\t\tundeliveredFileEvents = [];\n\n\t\t\t\tif (platform.isMacintosh) {\n\t\t\t\t\tevents.forEach(e => {\n\n\t\t\t\t\t\t// Mac uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t\te.path = normalizeNFC(e.path);\n\n\t\t\t\t\t\t// Convert paths back to original form in case it differs\n\t\t\t\t\t\tif (realBasePathDiffers) {\n\t\t\t\t\t\t\te.path = request.path + e.path.substr(realBasePathLength);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Broadcast to clients normalized\n\t\t\t\tconst res = normalizeFileChanges(events);\n\t\t\t\tthis._onDidChangeFile.fire(res);\n\n\t\t\t\t// Logging\n\t\t\t\tif (this.verboseLogging) {\n\t\t\t\t\tres.forEach(r => {\n\t\t\t\t\t\tthis.log(` >> normalized ${r.type === FileChangeType.ADDED ? '[ADDED]' : r.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${r.path}`);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(watcher => {\n\t\t\tthis.pathWatchers[request.path].watcher = watcher;\n\t\t\tconst startPromise = watcher.start();\n\t\t\tstartPromise.then(() => readyPromiseResolve(watcher));\n\n\t\t\treturn startPromise;\n\t\t});\n\t}\n\n\tasync setVerboseLogging(enabled: boolean): Promise<void> {\n\t\tthis.verboseLogging = enabled;\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (let path in this.pathWatchers) {\n\t\t\tlet watcher = this.pathWatchers[path];\n\t\t\twatcher.ready.then(watcher => watcher.stop());\n\t\t\tdelete this.pathWatchers[path];\n\t\t}\n\n\t\tthis.pathWatchers = Object.create(null);\n\t}\n\n\tprotected _normalizeRoots(roots: IWatcherRequest[]): IWatcherRequest[] {\n\t\t// Normalizes a set of root paths by removing any root paths that are\n\t\t// sub-paths of other roots.\n\t\treturn roots.filter(r => roots.every(other => {\n\t\t\treturn !(r.path.length > other.path.length && extpath.isEqualOrParent(r.path, other.path));\n\t\t}));\n\t}\n\n\tprivate isPathIgnored(absolutePath: string, ignored: glob.ParsedPattern[]): boolean {\n\t\treturn ignored && ignored.some(i => i(absolutePath));\n\t}\n\n\tprivate log(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'trace', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate warn(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'warn', message: `[File Watcher (nsfw)] ` + message });\n\t}\n\n\tprivate error(message: string) {\n\t\tthis._onDidLogMessage.fire({ type: 'error', message: `[File Watcher (nsfw)] ` + message });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Server } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/nsfwWatcherService';\nimport { createChannelReceiver } from 'vs/base/parts/ipc/common/ipc';\n\nconst server = new Server('watcher');\nconst service = new NsfwWatcherService();\nserver.registerChannel('watcher', createChannelReceiver(service));\n"]}